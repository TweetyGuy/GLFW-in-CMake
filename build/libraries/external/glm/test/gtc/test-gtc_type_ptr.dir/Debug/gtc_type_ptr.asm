; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?test_value_ptr_vec@@YAHXZ			; test_value_ptr_vec
PUBLIC	?length@?$tvec2@M$0A@@glm@@SAHXZ		; glm::tvec2<float,0>::length
PUBLIC	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@M@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	?length@?$tvec3@M$0A@@glm@@SAHXZ		; glm::tvec3<float,0>::length
PUBLIC	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@XZ			; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@M@Z			; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	?length@?$tvec4@M$0A@@glm@@SAHXZ		; glm::tvec4<float,0>::length
PUBLIC	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@XZ			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@M@Z			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z		; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	?length@?$tvec2@N$0A@@glm@@SAHXZ		; glm::tvec2<double,0>::length
PUBLIC	??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z		; glm::tvec2<double,0>::operator[]
PUBLIC	??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec2<double,0>::operator[]
PUBLIC	??0?$tvec2@N$0A@@glm@@QEAA@XZ			; glm::tvec2<double,0>::tvec2<double,0>
PUBLIC	??0?$tvec2@N$0A@@glm@@QEAA@N@Z			; glm::tvec2<double,0>::tvec2<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	?length@?$tvec3@N$0A@@glm@@SAHXZ		; glm::tvec3<double,0>::length
PUBLIC	??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z		; glm::tvec3<double,0>::operator[]
PUBLIC	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec3<double,0>::operator[]
PUBLIC	??0?$tvec3@N$0A@@glm@@QEAA@XZ			; glm::tvec3<double,0>::tvec3<double,0>
PUBLIC	??0?$tvec3@N$0A@@glm@@QEAA@N@Z			; glm::tvec3<double,0>::tvec3<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	?length@?$tvec4@N$0A@@glm@@SAHXZ		; glm::tvec4<double,0>::length
PUBLIC	??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z		; glm::tvec4<double,0>::operator[]
PUBLIC	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec4<double,0>::operator[]
PUBLIC	??0?$tvec4@N$0A@@glm@@QEAA@XZ			; glm::tvec4<double,0>::tvec4<double,0>
PUBLIC	??0?$tvec4@N$0A@@glm@@QEAA@N@Z			; glm::tvec4<double,0>::tvec4<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	?test_value_ptr_vec_const@@YAHXZ		; test_value_ptr_vec_const
PUBLIC	?test_value_ptr_mat@@YAHXZ			; test_value_ptr_mat
PUBLIC	??0?$tmat2x2@M$0A@@glm@@QEAA@XZ			; glm::tmat2x2<float,0>::tmat2x2<float,0>
PUBLIC	??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z		; glm::tmat2x2<float,0>::tmat2x2<float,0>
PUBLIC	?length@?$tmat2x2@M$0A@@glm@@SAHXZ		; glm::tmat2x2<float,0>::length
PUBLIC	??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
PUBLIC	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
PUBLIC	??0?$tmat3x4@M$0A@@glm@@QEAA@XZ			; glm::tmat3x4<float,0>::tmat3x4<float,0>
PUBLIC	??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z		; glm::tmat3x4<float,0>::tmat3x4<float,0>
PUBLIC	?length@?$tmat3x4@M$0A@@glm@@SAHXZ		; glm::tmat3x4<float,0>::length
PUBLIC	??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
PUBLIC	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
PUBLIC	??0?$tmat4x2@M$0A@@glm@@QEAA@XZ			; glm::tmat4x2<float,0>::tmat4x2<float,0>
PUBLIC	??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z		; glm::tmat4x2<float,0>::tmat4x2<float,0>
PUBLIC	?length@?$tmat4x2@M$0A@@glm@@SAHXZ		; glm::tmat4x2<float,0>::length
PUBLIC	??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
PUBLIC	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
PUBLIC	??0?$tmat2x4@M$0A@@glm@@QEAA@XZ			; glm::tmat2x4<float,0>::tmat2x4<float,0>
PUBLIC	??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z		; glm::tmat2x4<float,0>::tmat2x4<float,0>
PUBLIC	?length@?$tmat2x4@M$0A@@glm@@SAHXZ		; glm::tmat2x4<float,0>::length
PUBLIC	??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
PUBLIC	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
PUBLIC	??0?$tmat3x2@M$0A@@glm@@QEAA@XZ			; glm::tmat3x2<float,0>::tmat3x2<float,0>
PUBLIC	??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z		; glm::tmat3x2<float,0>::tmat3x2<float,0>
PUBLIC	?length@?$tmat3x2@M$0A@@glm@@SAHXZ		; glm::tmat3x2<float,0>::length
PUBLIC	??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
PUBLIC	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
PUBLIC	??0?$tmat2x3@M$0A@@glm@@QEAA@XZ			; glm::tmat2x3<float,0>::tmat2x3<float,0>
PUBLIC	??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z		; glm::tmat2x3<float,0>::tmat2x3<float,0>
PUBLIC	?length@?$tmat2x3@M$0A@@glm@@SAHXZ		; glm::tmat2x3<float,0>::length
PUBLIC	??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
PUBLIC	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
PUBLIC	??0?$tmat4x4@M$0A@@glm@@QEAA@XZ			; glm::tmat4x4<float,0>::tmat4x4<float,0>
PUBLIC	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z		; glm::tmat4x4<float,0>::tmat4x4<float,0>
PUBLIC	?length@?$tmat4x4@M$0A@@glm@@SAHXZ		; glm::tmat4x4<float,0>::length
PUBLIC	??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
PUBLIC	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
PUBLIC	??0?$tmat3x3@M$0A@@glm@@QEAA@XZ			; glm::tmat3x3<float,0>::tmat3x3<float,0>
PUBLIC	??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z		; glm::tmat3x3<float,0>::tmat3x3<float,0>
PUBLIC	?length@?$tmat3x3@M$0A@@glm@@SAHXZ		; glm::tmat3x3<float,0>::length
PUBLIC	??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
PUBLIC	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
PUBLIC	??0?$tmat4x3@M$0A@@glm@@QEAA@XZ			; glm::tmat4x3<float,0>::tmat4x3<float,0>
PUBLIC	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z		; glm::tmat4x3<float,0>::tmat4x3<float,0>
PUBLIC	?length@?$tmat4x3@M$0A@@glm@@SAHXZ		; glm::tmat4x3<float,0>::length
PUBLIC	??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
PUBLIC	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
PUBLIC	?test_value_ptr_mat_const@@YAHXZ		; test_value_ptr_mat_const
PUBLIC	?test_make_pointer_mat@@YAHXZ			; test_make_pointer_mat
PUBLIC	??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z ; glm::make_mat2x2<float>
PUBLIC	??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z ; glm::make_mat2x3<float>
PUBLIC	??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z ; glm::make_mat2x4<float>
PUBLIC	??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z ; glm::make_mat3x2<float>
PUBLIC	??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z ; glm::make_mat3x3<float>
PUBLIC	??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z ; glm::make_mat3x4<float>
PUBLIC	??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z ; glm::make_mat4x2<float>
PUBLIC	??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z ; glm::make_mat4x3<float>
PUBLIC	??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z ; glm::make_mat4x4<float>
PUBLIC	??0?$tmat2x2@N$0A@@glm@@QEAA@XZ			; glm::tmat2x2<double,0>::tmat2x2<double,0>
PUBLIC	?length@?$tmat2x2@N$0A@@glm@@SAHXZ		; glm::tmat2x2<double,0>::length
PUBLIC	??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat2x2<double,0>::operator[]
PUBLIC	??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z ; glm::make_mat2x2<double>
PUBLIC	??0?$tmat2x3@N$0A@@glm@@QEAA@XZ			; glm::tmat2x3<double,0>::tmat2x3<double,0>
PUBLIC	?length@?$tmat2x3@N$0A@@glm@@SAHXZ		; glm::tmat2x3<double,0>::length
PUBLIC	??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat2x3<double,0>::operator[]
PUBLIC	??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z ; glm::make_mat2x3<double>
PUBLIC	??0?$tmat2x4@N$0A@@glm@@QEAA@XZ			; glm::tmat2x4<double,0>::tmat2x4<double,0>
PUBLIC	?length@?$tmat2x4@N$0A@@glm@@SAHXZ		; glm::tmat2x4<double,0>::length
PUBLIC	??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat2x4<double,0>::operator[]
PUBLIC	??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z ; glm::make_mat2x4<double>
PUBLIC	??0?$tmat3x2@N$0A@@glm@@QEAA@XZ			; glm::tmat3x2<double,0>::tmat3x2<double,0>
PUBLIC	?length@?$tmat3x2@N$0A@@glm@@SAHXZ		; glm::tmat3x2<double,0>::length
PUBLIC	??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat3x2<double,0>::operator[]
PUBLIC	??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z ; glm::make_mat3x2<double>
PUBLIC	??0?$tmat3x3@N$0A@@glm@@QEAA@XZ			; glm::tmat3x3<double,0>::tmat3x3<double,0>
PUBLIC	?length@?$tmat3x3@N$0A@@glm@@SAHXZ		; glm::tmat3x3<double,0>::length
PUBLIC	??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat3x3<double,0>::operator[]
PUBLIC	??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z ; glm::make_mat3x3<double>
PUBLIC	??0?$tmat3x4@N$0A@@glm@@QEAA@XZ			; glm::tmat3x4<double,0>::tmat3x4<double,0>
PUBLIC	?length@?$tmat3x4@N$0A@@glm@@SAHXZ		; glm::tmat3x4<double,0>::length
PUBLIC	??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat3x4<double,0>::operator[]
PUBLIC	??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z ; glm::make_mat3x4<double>
PUBLIC	??0?$tmat4x2@N$0A@@glm@@QEAA@XZ			; glm::tmat4x2<double,0>::tmat4x2<double,0>
PUBLIC	?length@?$tmat4x2@N$0A@@glm@@SAHXZ		; glm::tmat4x2<double,0>::length
PUBLIC	??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat4x2<double,0>::operator[]
PUBLIC	??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z ; glm::make_mat4x2<double>
PUBLIC	??0?$tmat4x3@N$0A@@glm@@QEAA@XZ			; glm::tmat4x3<double,0>::tmat4x3<double,0>
PUBLIC	?length@?$tmat4x3@N$0A@@glm@@SAHXZ		; glm::tmat4x3<double,0>::length
PUBLIC	??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat4x3<double,0>::operator[]
PUBLIC	??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z ; glm::make_mat4x3<double>
PUBLIC	??0?$tmat4x4@N$0A@@glm@@QEAA@XZ			; glm::tmat4x4<double,0>::tmat4x4<double,0>
PUBLIC	?length@?$tmat4x4@N$0A@@glm@@SAHXZ		; glm::tmat4x4<double,0>::length
PUBLIC	??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat4x4<double,0>::operator[]
PUBLIC	??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z ; glm::make_mat4x4<double>
PUBLIC	?test_make_pointer_vec@@YAHXZ			; test_make_pointer_vec
PUBLIC	??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z	; glm::make_vec2<float>
PUBLIC	??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z	; glm::make_vec3<float>
PUBLIC	??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z	; glm::make_vec4<float>
PUBLIC	??0?$tvec2@H$0A@@glm@@QEAA@XZ			; glm::tvec2<int,0>::tvec2<int,0>
PUBLIC	??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z	; glm::make_vec2<int>
PUBLIC	??0?$tvec3@H$0A@@glm@@QEAA@XZ			; glm::tvec3<int,0>::tvec3<int,0>
PUBLIC	??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z	; glm::make_vec3<int>
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@XZ			; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z	; glm::make_vec4<int>
PUBLIC	??0?$tvec2@_N$0A@@glm@@QEAA@XZ			; glm::tvec2<bool,0>::tvec2<bool,0>
PUBLIC	??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z ; glm::make_vec2<bool>
PUBLIC	??0?$tvec3@_N$0A@@glm@@QEAA@XZ			; glm::tvec3<bool,0>::tvec3<bool,0>
PUBLIC	??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z ; glm::make_vec3<bool>
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@XZ			; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z ; glm::make_vec4<bool>
PUBLIC	main
PUBLIC	??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z		; glm::tvec2<float,0>::tvec2<float,0><float,int>
PUBLIC	??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z		; glm::tvec2<float,0>::tvec2<float,0><int,float>
PUBLIC	??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z		; glm::tvec3<float,0>::tvec3<float,0><float,int,int>
PUBLIC	??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z		; glm::tvec3<float,0>::tvec3<float,0><int,float,int>
PUBLIC	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z		; glm::tvec2<float,0>::tvec2<float,0><int,int>
PUBLIC	??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z		; glm::tvec3<float,0>::tvec3<float,0><int,int,float>
PUBLIC	??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z	; glm::tvec4<float,0>::tvec4<float,0><float,int,int,int>
PUBLIC	??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,float,int,int>
PUBLIC	??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,float,int>
PUBLIC	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
PUBLIC	??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,int,float>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
PUBLIC	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z ; glm::value_ptr<int,0>
PUBLIC	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z ; glm::value_ptr<int,0>
PUBLIC	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z ; glm::value_ptr<int,0>
PUBLIC	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
PUBLIC	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
PUBLIC	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
PUBLIC	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
PUBLIC	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z		; glm::tvec2<double,0>::tvec2<double,0><int,int>
PUBLIC	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
PUBLIC	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
PUBLIC	??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ ; `string'
PUBLIC	??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4018000000000000
PUBLIC	__real@401c000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@4022000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4026000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@402a000000000000
PUBLIC	__real@402c000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@40e00000
PUBLIC	__real@41000000
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41300000
PUBLIC	__real@41400000
PUBLIC	__real@41500000
PUBLIC	__real@41600000
PUBLIC	__real@41700000
EXTRN	__imp__wassert:PROC
EXTRN	memcpy:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+119
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_value_ptr_vec@@YAHXZ DD imagerel $LN15
	DD	imagerel $LN15+696
	DD	imagerel $unwind$?test_value_ptr_vec@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@N$0A@@glm@@QEAA@N@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@N$0A@@glm@@QEAA@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@N$0A@@glm@@QEAA@N@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??0?$tvec3@N$0A@@glm@@QEAA@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@N$0A@@glm@@QEAA@N@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$tvec4@N$0A@@glm@@QEAA@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_value_ptr_vec_const@@YAHXZ DD imagerel $LN15
	DD	imagerel $LN15+696
	DD	imagerel $unwind$?test_value_ptr_vec_const@@YAHXZ
$pdata$?test_value_ptr_mat@@YAHXZ DD imagerel $LN21
	DD	imagerel $LN21+1190
	DD	imagerel $unwind$?test_value_ptr_mat@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+240
	DD	imagerel $unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+256
	DD	imagerel $unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+202
	DD	imagerel $unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+209
	DD	imagerel $unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+205
	DD	imagerel $unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+166
	DD	imagerel $unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+173
	DD	imagerel $unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+331
	DD	imagerel $unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+201
	DD	imagerel $unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+208
	DD	imagerel $unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+247
	DD	imagerel $unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+262
	DD	imagerel $unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_value_ptr_mat_const@@YAHXZ DD imagerel $LN21
	DD	imagerel $LN21+1190
	DD	imagerel $unwind$?test_value_ptr_mat_const@@YAHXZ
$pdata$?test_make_pointer_mat@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+937
	DD	imagerel $unwind$?test_make_pointer_mat@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$??0?$tmat2x2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x3@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$??0?$tmat2x3@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x3@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x3@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat2x4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+180
	DD	imagerel $unwind$??0?$tmat2x4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??0?$tmat3x2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x3@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+216
	DD	imagerel $unwind$??0?$tmat3x3@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x3@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x3@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat3x4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+246
	DD	imagerel $unwind$??0?$tmat3x4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat3x4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat3x4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+250
	DD	imagerel $unwind$??0?$tmat4x2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x3@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+271
	DD	imagerel $unwind$??0?$tmat4x3@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x3@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x3@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tmat4x4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+306
	DD	imagerel $unwind$??0?$tmat4x4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat4x4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat4x4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_make_pointer_vec@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+803
	DD	imagerel $unwind$?test_make_pointer_vec@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??0?$tvec2@H$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@H$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$tvec3@H$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??0?$tvec2@_N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??0?$tvec3@_N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41600000
CONST	SEGMENT
__real@41600000 DD 041600000r			; 14
CONST	ENDS
;	COMDAT __real@41500000
CONST	SEGMENT
__real@41500000 DD 041500000r			; 13
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41300000
CONST	SEGMENT
__real@41300000 DD 041300000r			; 11
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@402c000000000000
CONST	SEGMENT
__real@402c000000000000 DQ 0402c000000000000r	; 14
CONST	ENDS
;	COMDAT __real@402a000000000000
CONST	SEGMENT
__real@402a000000000000 DQ 0402a000000000000r	; 13
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4026000000000000
CONST	SEGMENT
__real@4026000000000000 DQ 04026000000000000r	; 11
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4022000000000000
CONST	SEGMENT
__real@4022000000000000 DQ 04022000000000000r	; 9
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@401c000000000000
CONST	SEGMENT
__real@401c000000000000 DQ 0401c000000000000r	; 7
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'4', 00H, 'x', 00H, '4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'4', 00H, 'x', 00H, '3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'4', 00H, 'x', 00H, '2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'3', 00H, 'x', 00H, '4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'3', 00H, 'x', 00H, '3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'3', 00H, 'x', 00H, '2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'2', 00H, 'x', 00H, '4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'2', 00H, 'x', 00H, '3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
CONST	SEGMENT
??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g'
	DB	00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'2', 00H, 'x', 00H, '2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z DD 011601H
	DD	07016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z DD 011601H
	DD	07016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z DD 011101H
	DD	07011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcName$0 DB 052H ; glm::make_vec4<bool>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcVarDesc DD 024H ; glm::make_vec4<bool>
	DD	04H
	DQ	FLAT:??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcName$0
	ORG $+48
??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcFrameData DD 01H ; glm::make_vec4<bool>
	DD	00H
	DQ	FLAT:??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z DD 032601H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcName$0 DB 052H ; glm::make_vec3<bool>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcVarDesc DD 024H ; glm::make_vec3<bool>
	DD	03H
	DQ	FLAT:??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcName$0
	ORG $+48
??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcFrameData DD 01H ; glm::make_vec3<bool>
	DD	00H
	DQ	FLAT:??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcName$0 DB 052H ; glm::make_vec2<bool>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcVarDesc DD 024H ; glm::make_vec2<bool>
	DD	02H
	DQ	FLAT:??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcName$0
	ORG $+48
??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcFrameData DD 01H ; glm::make_vec2<bool>
	DD	00H
	DQ	FLAT:??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z DD 032601H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcName$0 DB 052H ; glm::make_vec4<int>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcVarDesc DD 028H ; glm::make_vec4<int>
	DD	010H
	DQ	FLAT:??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcName$0
	ORG $+48
??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcFrameData DD 01H ; glm::make_vec4<int>
	DD	00H
	DQ	FLAT:??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z DD 032601H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcName$0 DB 052H ; glm::make_vec3<int>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcVarDesc DD 028H ; glm::make_vec3<int>
	DD	0cH
	DQ	FLAT:??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcName$0
	ORG $+48
??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcFrameData DD 01H ; glm::make_vec3<int>
	DD	00H
	DQ	FLAT:??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@H$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcName$0 DB 052H ; glm::make_vec2<int>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcVarDesc DD 028H ; glm::make_vec2<int>
	DD	08H
	DQ	FLAT:??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcName$0
	ORG $+48
??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcFrameData DD 01H ; glm::make_vec2<int>
	DD	00H
	DQ	FLAT:??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z DD 032601H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_vec4<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_vec4<float>
	DD	010H
	DQ	FLAT:??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_vec4<float>
	DD	00H
	DQ	FLAT:??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z DD 032601H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_vec3<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_vec3<float>
	DD	0cH
	DQ	FLAT:??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_vec3<float>
	DD	00H
	DQ	FLAT:??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_vec2<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_vec2<float>
	DD	08H
	DQ	FLAT:??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_vec2<float>
	DD	00H
	DQ	FLAT:??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z DD 043e19H
	DD	01b0113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat4x4<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat4x4<double>
	DD	080H
	DQ	FLAT:??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat4x4<double>
	DD	00H
	DQ	FLAT:??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x4@N$0A@@glm@@QEAA@XZ DD 040e01H
	DD	017010eH
	DD	060067007H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z DD 043e19H
	DD	0170113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat4x3<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat4x3<double>
	DD	060H
	DQ	FLAT:??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat4x3<double>
	DD	00H
	DQ	FLAT:??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x3@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x3@N$0A@@glm@@QEAA@XZ DD 040e01H
	DD	011010eH
	DD	060067007H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z DD 043e19H
	DD	0130113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	080H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat4x2<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat4x2<double>
	DD	040H
	DQ	FLAT:??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat4x2<double>
	DD	00H
	DQ	FLAT:??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x2@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007c20bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z DD 043e19H
	DD	0170113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat3x4<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat3x4<double>
	DD	060H
	DQ	FLAT:??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat3x4<double>
	DD	00H
	DQ	FLAT:??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x4@N$0A@@glm@@QEAA@XZ DD 040e01H
	DD	013010eH
	DD	060067007H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z DD 043e19H
	DD	0150113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat3x3<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat3x3<double>
	DD	048H
	DQ	FLAT:??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat3x3<double>
	DD	00H
	DQ	FLAT:??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x3@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x3@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007e20bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	099H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z DD 043b19H
	DD	0110113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat3x2<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcVarDesc DD 028H ; glm::make_mat3x2<double>
	DD	030H
	DQ	FLAT:??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat3x2<double>
	DD	00H
	DQ	FLAT:??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x2@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007a20bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z DD 043e19H
	DD	0130113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	080H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat2x4<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcVarDesc DD 030H ; glm::make_mat2x4<double>
	DD	040H
	DQ	FLAT:??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat2x4<double>
	DD	00H
	DQ	FLAT:??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x4@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007e20bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	099H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z DD 043b19H
	DD	0110113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat2x3<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcVarDesc DD 028H ; glm::make_mat2x3<double>
	DD	030H
	DQ	FLAT:??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat2x3<double>
	DD	00H
	DQ	FLAT:??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x3@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x3@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007a20bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z DD 033819H
	DD	0700ce210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcName$0 DB 052H ; glm::make_mat2x2<double>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcVarDesc DD 028H ; glm::make_mat2x2<double>
	DD	020H
	DQ	FLAT:??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcName$0
	ORG $+48
??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcFrameData DD 01H ; glm::make_mat2x2<double>
	DD	00H
	DQ	FLAT:??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x2@N$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z DD 043e19H
	DD	0130113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	080H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat4x4<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcVarDesc DD 030H ; glm::make_mat4x4<float>
	DD	040H
	DQ	FLAT:??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat4x4<float>
	DD	00H
	DQ	FLAT:??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	099H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z DD 043b19H
	DD	0110113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat4x3<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat4x3<float>
	DD	030H
	DQ	FLAT:??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat4x3<float>
	DD	00H
	DQ	FLAT:??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z DD 033819H
	DD	0700ce210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat4x2<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat4x2<float>
	DD	020H
	DQ	FLAT:??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat4x2<float>
	DD	00H
	DQ	FLAT:??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	099H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z DD 043b19H
	DD	0110113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat3x4<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat3x4<float>
	DD	030H
	DQ	FLAT:??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat3x4<float>
	DD	00H
	DQ	FLAT:??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z DD 033819H
	DD	0700ce210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat3x3<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat3x3<float>
	DD	024H
	DQ	FLAT:??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat3x3<float>
	DD	00H
	DQ	FLAT:??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z DD 033819H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat3x2<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat3x2<float>
	DD	018H
	DQ	FLAT:??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat3x2<float>
	DD	00H
	DQ	FLAT:??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z DD 033819H
	DD	0700ce210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat2x4<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat2x4<float>
	DD	020H
	DQ	FLAT:??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat2x4<float>
	DD	00H
	DQ	FLAT:??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z DD 033819H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat2x3<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat2x3<float>
	DD	018H
	DQ	FLAT:??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat2x3<float>
	DD	00H
	DQ	FLAT:??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	033H
	DB	096H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z DD 033819H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcName$0 DB 052H ; glm::make_mat2x2<float>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcVarDesc DD 028H ; glm::make_mat2x2<float>
	DD	010H
	DQ	FLAT:??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcName$0
	ORG $+48
??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcFrameData DD 01H ; glm::make_mat2x2<float>
	DD	00H
	DQ	FLAT:??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z DD 031001H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x3@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007a20bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z DD 031101H
	DD	0700da211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x3@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007a20bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z DD 031001H
	DD	0700ce210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x4@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007e20bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x3@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z DD 021001H
	DD	0700c7210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x2@M$0A@@glm@@QEAA@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z DD 031101H
	DD	0700dc211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x4@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007a20bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat4x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z DD 021001H
	DD	0700c7210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat4x2@M$0A@@glm@@QEAA@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat3x4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z DD 031101H
	DD	0700dc211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat3x4@M$0A@@glm@@QEAA@XZ DD 030b01H
	DD	07007c20bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z DD 021001H
	DD	0700c5210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tmat2x2@M$0A@@glm@@QEAA@XZ DD 020a01H
	DD	07006520aH
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_make_pointer_vec@@YAHXZ
	DD	024H
	DD	030aH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_make_pointer_mat@@YAHXZ
	DD	024H
	DD	0390H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_value_ptr_mat_const@@YAHXZ
	DD	024H
	DD	048dH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_value_ptr_mat@@YAHXZ
	DD	024H
	DD	048dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@N$0A@@glm@@QEAA@N@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@N$0A@@glm@@QEAA@N@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@N$0A@@glm@@QEAA@N@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
xdata	SEGMENT
$unwind$?test_value_ptr_vec@@YAHXZ DD 031a01H
	DD	02e0109H
	DD	07002H
$unwind$?test_value_ptr_vec_const@@YAHXZ DD 031a01H
	DD	02e0109H
	DD	07002H
$unwind$?test_value_ptr_mat@@YAHXZ DD 032c19H
	DD	0580109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	02b8H
$unwind$?test_value_ptr_mat_const@@YAHXZ DD 032c19H
	DD	0580109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	02b8H
$unwind$?test_make_pointer_mat@@YAHXZ DD 032c19H
	DD	0e80109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0730H
$unwind$?test_make_pointer_vec@@YAHXZ DD 032c19H
	DD	0520109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0280H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
?test_value_ptr_vec@@YAHXZ$rtcName$0 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcName$1 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcName$2 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcName$3 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcName$4 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcName$5 DB 076H		; test_value_ptr_vec
	DB	00H
	ORG $+2
?test_value_ptr_vec@@YAHXZ$rtcFrameData DD 06H		; test_value_ptr_vec
	DD	00H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcVarDesc
?test_value_ptr_vec_const@@YAHXZ$rtcName$0 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+6
?test_value_ptr_vec@@YAHXZ$rtcVarDesc DD 0118H		; test_value_ptr_vec
	DD	020H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$5
	DD	0e8H
	DD	018H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$4
	DD	0b8H
	DD	010H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?test_value_ptr_vec@@YAHXZ$rtcName$0
	ORG $+288
?test_value_ptr_vec_const@@YAHXZ$rtcName$1 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+2
?test_value_ptr_vec_const@@YAHXZ$rtcName$2 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+2
?test_value_ptr_vec_const@@YAHXZ$rtcName$3 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+2
?test_value_ptr_vec_const@@YAHXZ$rtcName$4 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+2
?test_value_ptr_vec_const@@YAHXZ$rtcName$5 DB 076H	; test_value_ptr_vec_const
	DB	00H
	ORG $+6
?test_value_ptr_vec_const@@YAHXZ$rtcFrameData DD 06H	; test_value_ptr_vec_const
	DD	00H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcVarDesc
?test_value_ptr_mat@@YAHXZ$rtcName$0 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+6
?test_value_ptr_vec_const@@YAHXZ$rtcVarDesc DD 0118H	; test_value_ptr_vec_const
	DD	020H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$5
	DD	0e8H
	DD	018H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$4
	DD	0b8H
	DD	010H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcName$0
	ORG $+288
?test_value_ptr_mat@@YAHXZ$rtcName$1 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$2 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$3 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$4 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$5 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$6 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$7 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcName$8 DB 06dH		; test_value_ptr_mat
	DB	00H
	ORG $+2
?test_value_ptr_mat@@YAHXZ$rtcVarDesc DD 0230H		; test_value_ptr_mat
	DD	040H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$8
	DD	01d8H
	DD	030H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$7
	DD	0198H
	DD	020H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$6
	DD	0148H
	DD	030H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$5
	DD	0108H
	DD	024H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$4
	DD	0d8H
	DD	018H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$3
	DD	098H
	DD	020H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcName$0
	ORG $+432
?test_value_ptr_mat@@YAHXZ$rtcFrameData DD 09H		; test_value_ptr_mat
	DD	00H
	DQ	FLAT:?test_value_ptr_mat@@YAHXZ$rtcVarDesc
?test_value_ptr_mat_const@@YAHXZ$rtcName$0 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$1 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$2 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$3 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$4 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$5 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$6 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$7 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+2
?test_value_ptr_mat_const@@YAHXZ$rtcName$8 DB 06dH	; test_value_ptr_mat_const
	DB	00H
	ORG $+6
?test_value_ptr_mat_const@@YAHXZ$rtcFrameData DD 09H	; test_value_ptr_mat_const
	DD	00H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcVarDesc
?test_make_pointer_mat@@YAHXZ$rtcName$0 DB 041H		; test_make_pointer_mat
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	041H
	DB	00H
	ORG $+1
?test_value_ptr_mat_const@@YAHXZ$rtcVarDesc DD 0230H	; test_value_ptr_mat_const
	DD	040H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$8
	DD	01d8H
	DD	030H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$7
	DD	0198H
	DD	020H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$6
	DD	0148H
	DD	030H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$5
	DD	0108H
	DD	024H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$4
	DD	0d8H
	DD	018H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$3
	DD	098H
	DD	020H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcName$0
	ORG $+432
?test_make_pointer_mat@@YAHXZ$rtcName$1 DB 041H		; test_make_pointer_mat
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	042H
	DB	00H
	ORG $+1
?test_make_pointer_mat@@YAHXZ$rtcName$2 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	032H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$3 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	033H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$4 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	034H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$5 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	032H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$6 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	033H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$7 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	034H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$8 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	032H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$9 DB 04dH		; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	033H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$10 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	034H
	DB	041H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$11 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	032H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$12 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	033H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$13 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	032H
	DB	078H
	DB	034H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$14 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	032H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$15 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	033H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$16 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	033H
	DB	078H
	DB	034H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$17 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	032H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$18 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	033H
	DB	042H
	DB	00H
?test_make_pointer_mat@@YAHXZ$rtcName$19 DB 04dH	; test_make_pointer_mat
	DB	061H
	DB	074H
	DB	034H
	DB	078H
	DB	034H
	DB	042H
	DB	00H
?test_make_pointer_vec@@YAHXZ$rtcName$0 DB 041H		; test_make_pointer_vec
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	041H
	DB	00H
	ORG $+1
?test_make_pointer_mat@@YAHXZ$rtcVarDesc DD 06a0H	; test_make_pointer_mat
	DD	080H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$19
	DD	0620H
	DD	060H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$18
	DD	05c0H
	DD	040H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$17
	DD	0540H
	DD	060H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$16
	DD	04d0H
	DD	048H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$15
	DD	0478H
	DD	030H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$14
	DD	0420H
	DD	040H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$13
	DD	03c8H
	DD	030H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$12
	DD	0388H
	DD	020H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$11
	DD	0330H
	DD	040H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$10
	DD	02d8H
	DD	030H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$9
	DD	0298H
	DD	020H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$8
	DD	0248H
	DD	030H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$7
	DD	0208H
	DD	024H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$6
	DD	01d8H
	DD	018H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$5
	DD	0198H
	DD	020H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$4
	DD	0168H
	DD	018H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$3
	DD	0138H
	DD	010H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$2
	DD	0a0H
	DD	080H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$1
	DD	040H
	DD	040H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcName$0
	ORG $+960
?test_make_pointer_mat@@YAHXZ$rtcFrameData DD 014H	; test_make_pointer_mat
	DD	00H
	DQ	FLAT:?test_make_pointer_mat@@YAHXZ$rtcVarDesc
?test_make_pointer_vec@@YAHXZ$rtcName$1 DB 041H		; test_make_pointer_vec
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	042H
	DB	00H
	ORG $+1
?test_make_pointer_vec@@YAHXZ$rtcName$2 DB 041H		; test_make_pointer_vec
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	043H
	DB	00H
	ORG $+1
?test_make_pointer_vec@@YAHXZ$rtcName$3 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	032H
	DB	041H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$4 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	033H
	DB	041H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$5 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	034H
	DB	041H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$6 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	032H
	DB	042H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$7 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	033H
	DB	042H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$8 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	034H
	DB	042H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$9 DB 056H		; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	032H
	DB	043H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$10 DB 056H	; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	033H
	DB	043H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcName$11 DB 056H	; test_make_pointer_vec
	DB	065H
	DB	063H
	DB	034H
	DB	043H
	DB	00H
	ORG $+2
?test_make_pointer_vec@@YAHXZ$rtcFrameData DD 0cH	; test_make_pointer_vec
	DD	00H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcVarDesc
	ORG $+8
?test_make_pointer_vec@@YAHXZ$rtcVarDesc DD 0264H	; test_make_pointer_vec
	DD	04H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$11
	DD	0244H
	DD	03H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$10
	DD	0224H
	DD	02H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$9
	DD	01f8H
	DD	010H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$8
	DD	01c8H
	DD	0cH
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$7
	DD	01a8H
	DD	08H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$6
	DD	0178H
	DD	010H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$5
	DD	0148H
	DD	0cH
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$4
	DD	0128H
	DD	08H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$3
	DD	0f8H
	DD	010H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$2
	DD	0a0H
	DD	040H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$1
	DD	040H
	DD	040H
	DQ	FLAT:?test_make_pointer_vec@@YAHXZ$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 021901H
	DD	070155219H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2sd xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2sd xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+24], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2sd xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<double,0>::tvec2<double,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<double,0>::tvec2<double,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z PROC ; glm::value_ptr<bool,0>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 74   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 75   : 	}

	pop	rdi
	ret	0
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z ENDP ; glm::value_ptr<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z PROC ; glm::value_ptr<bool,0>, COMDAT

; 51   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 52   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 53   : 	}

	pop	rdi
	ret	0
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z ENDP ; glm::value_ptr<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z PROC ; glm::value_ptr<bool,0>, COMDAT

; 29   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 30   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 31   : 	}

	pop	rdi
	ret	0
??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z ENDP ; glm::value_ptr<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z PROC ; glm::value_ptr<int,0>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 74   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 75   : 	}

	pop	rdi
	ret	0
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z ENDP ; glm::value_ptr<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z PROC ; glm::value_ptr<int,0>, COMDAT

; 51   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 52   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 53   : 	}

	pop	rdi
	ret	0
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z ENDP ; glm::value_ptr<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z PROC ; glm::value_ptr<int,0>, COMDAT

; 29   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 30   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 31   : 	}

	pop	rdi
	ret	0
??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z ENDP ; glm::value_ptr<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 139  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat4x4<double,0>::operator[]

; 141  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 268  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 269  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat4x3<double,0>::operator[]

; 270  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 227  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 228  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat4x2<double,0>::operator[]

; 229  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 249  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 250  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat3x4<double,0>::operator[]

; 251  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 117  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 118  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat3x3<double,0>::operator[]

; 119  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 183  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 184  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat3x2<double,0>::operator[]

; 185  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 205  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 206  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ; glm::tmat2x4<double,0>::operator[]

; 207  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 161  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 162  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ; glm::tmat2x3<double,0>::operator[]

; 163  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 95   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 96   : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ; glm::tmat2x2<double,0>::operator[]

; 97   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,float>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,float,int>, COMDAT

; 204  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,float,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,float,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,float,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><float,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><float,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,int,float>, COMDAT

; 80   : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,float,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,float,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><float,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><float,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,float>, COMDAT

; 66   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><float,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><float,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 241  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 242  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 243  : 
; 244  : 	Error += test_make_pointer_vec();

	call	?test_make_pointer_vec@@YAHXZ		; test_make_pointer_vec
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 245  : 	Error += test_make_pointer_mat();

	call	?test_make_pointer_mat@@YAHXZ		; test_make_pointer_mat
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 246  : 	Error += test_value_ptr_vec();

	call	?test_value_ptr_vec@@YAHXZ		; test_value_ptr_vec
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 247  : 	Error += test_value_ptr_vec_const();

	call	?test_value_ptr_vec_const@@YAHXZ	; test_value_ptr_vec_const
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 248  : 	Error += test_value_ptr_mat();

	call	?test_value_ptr_mat@@YAHXZ		; test_value_ptr_mat
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 249  : 	Error += test_value_ptr_mat_const();

	call	?test_value_ptr_mat_const@@YAHXZ	; test_value_ptr_mat_const
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 250  : 
; 251  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 252  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z
_TEXT	SEGMENT
Result$ = 36
__$ReturnUdt$ = 80
ptr$ = 88
??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z PROC	; glm::make_vec4<bool>, COMDAT

; 318  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 319  : 		tvec4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@XZ		; glm::tvec4<bool,0>::tvec4<bool,0>

; 320  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec4@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
	mov	r8d, 4
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 321  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 322  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z ENDP	; glm::make_vec4<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@_N$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+1], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+2], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+3], 0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z
_TEXT	SEGMENT
Result$ = 36
__$ReturnUdt$ = 96
ptr$ = 104
??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z PROC	; glm::make_vec3<bool>, COMDAT

; 308  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 309  : 		tvec3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$0A@@glm@@QEAA@XZ		; glm::tvec3<bool,0>::tvec3<bool,0>

; 310  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec3@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
	mov	r8d, 3
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 311  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 312  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z ENDP	; glm::make_vec3<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@_N$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<bool,0>::tvec3<bool,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+1], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+2], 0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<bool,0>::tvec3<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z
_TEXT	SEGMENT
Result$ = 36
__$ReturnUdt$ = 80
ptr$ = 88
??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z PROC	; glm::make_vec2<bool>, COMDAT

; 298  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 299  : 		tvec2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@XZ		; glm::tvec2<bool,0>::tvec2<bool,0>

; 300  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@_N$0A@@glm@@YAPEA_NAEAU?$tvec2@_N$0A@@0@@Z ; glm::value_ptr<bool,0>
	mov	r8d, 2
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 301  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 302  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z ENDP	; glm::make_vec2<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@_N$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<bool,0>::tvec2<bool,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+1], 0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<bool,0>::tvec2<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 112
ptr$ = 120
??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z PROC	; glm::make_vec4<int>, COMDAT

; 318  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 319  : 		tvec4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@XZ		; glm::tvec4<int,0>::tvec4<int,0>

; 320  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec4@H$0A@@0@@Z ; glm::value_ptr<int,0>
	mov	r8d, 16
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 321  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 322  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z ENDP	; glm::make_vec4<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@H$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+12], 0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 112
ptr$ = 120
??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z PROC	; glm::make_vec3<int>, COMDAT

; 308  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 309  : 		tvec3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@H$0A@@glm@@QEAA@XZ		; glm::tvec3<int,0>::tvec3<int,0>

; 310  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec3@H$0A@@0@@Z ; glm::value_ptr<int,0>
	mov	r8d, 12
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 311  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 312  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z ENDP	; glm::make_vec3<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@H$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@H$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<int,0>::tvec3<int,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], 0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@H$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<int,0>::tvec3<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 80
ptr$ = 88
??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z PROC	; glm::make_vec2<int>, COMDAT

; 298  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 299  : 		tvec2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@XZ		; glm::tvec2<int,0>::tvec2<int,0>

; 300  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@H$0A@@glm@@YAPEAHAEAU?$tvec2@H$0A@@0@@Z ; glm::value_ptr<int,0>
	mov	r8d, 8
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 301  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 302  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z ENDP	; glm::make_vec2<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@H$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<int,0>::tvec2<int,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<int,0>::tvec2<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 112
ptr$ = 120
??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z PROC	; glm::make_vec4<float>, COMDAT

; 318  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 319  : 		tvec4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 320  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 16
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 321  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 322  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z ENDP	; glm::make_vec4<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 112
ptr$ = 120
??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z PROC	; glm::make_vec3<float>, COMDAT

; 308  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 309  : 		tvec3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@XZ		; glm::tvec3<float,0>::tvec3<float,0>

; 310  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 12
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 311  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 312  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z ENDP	; glm::make_vec3<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 80
ptr$ = 88
??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z PROC	; glm::make_vec2<float>, COMDAT

; 298  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 299  : 		tvec2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 300  : 		memcpy(value_ptr(Result), ptr, sizeof(tvec2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 8
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 301  : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR Result$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 302  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z ENDP	; glm::make_vec2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
ArrayA$ = 64
ArrayB$ = 160
ArrayC$ = 248
Vec2A$ = 296
Vec3A$ = 328
Vec4A$ = 376
Vec2B$ = 424
Vec3B$ = 456
Vec4B$ = 504
Vec2C$ = 548
Vec3C$ = 580
Vec4C$ = 612
__$ArrayPad$ = 640
?test_make_pointer_vec@@YAHXZ PROC			; test_make_pointer_vec

; 218  : {

$LN3:
	push	rdi
	sub	rsp, 656				; 00000290H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 156				; 0000009cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 219  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 220  : 
; 221  : 	float ArrayA[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

	xorps	xmm0, xmm0
	movss	DWORD PTR ArrayA$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ArrayA$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ArrayA$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR ArrayA$[rsp+12], xmm0
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR ArrayA$[rsp+16], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR ArrayA$[rsp+20], xmm0
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR ArrayA$[rsp+24], xmm0
	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR ArrayA$[rsp+28], xmm0
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR ArrayA$[rsp+32], xmm0
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR ArrayA$[rsp+36], xmm0
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ArrayA$[rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@41300000
	movss	DWORD PTR ArrayA$[rsp+44], xmm0
	movss	xmm0, DWORD PTR __real@41400000
	movss	DWORD PTR ArrayA$[rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41500000
	movss	DWORD PTR ArrayA$[rsp+52], xmm0
	movss	xmm0, DWORD PTR __real@41600000
	movss	DWORD PTR ArrayA$[rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR ArrayA$[rsp+60], xmm0

; 222  : 	int ArrayB[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

	mov	DWORD PTR ArrayB$[rsp], 0
	mov	DWORD PTR ArrayB$[rsp+4], 1
	mov	DWORD PTR ArrayB$[rsp+8], 2
	mov	DWORD PTR ArrayB$[rsp+12], 3
	mov	DWORD PTR ArrayB$[rsp+16], 4
	mov	DWORD PTR ArrayB$[rsp+20], 5
	mov	DWORD PTR ArrayB$[rsp+24], 6
	mov	DWORD PTR ArrayB$[rsp+28], 7
	mov	DWORD PTR ArrayB$[rsp+32], 8
	mov	DWORD PTR ArrayB$[rsp+36], 9
	mov	DWORD PTR ArrayB$[rsp+40], 10
	mov	DWORD PTR ArrayB$[rsp+44], 11
	mov	DWORD PTR ArrayB$[rsp+48], 12
	mov	DWORD PTR ArrayB$[rsp+52], 13
	mov	DWORD PTR ArrayB$[rsp+56], 14
	mov	DWORD PTR ArrayB$[rsp+60], 15

; 223  : 	bool ArrayC[] = {true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false};

	mov	BYTE PTR ArrayC$[rsp], 1
	mov	BYTE PTR ArrayC$[rsp+1], 0
	mov	BYTE PTR ArrayC$[rsp+2], 1
	mov	BYTE PTR ArrayC$[rsp+3], 0
	mov	BYTE PTR ArrayC$[rsp+4], 1
	mov	BYTE PTR ArrayC$[rsp+5], 0
	mov	BYTE PTR ArrayC$[rsp+6], 1
	mov	BYTE PTR ArrayC$[rsp+7], 0
	mov	BYTE PTR ArrayC$[rsp+8], 1
	mov	BYTE PTR ArrayC$[rsp+9], 0
	mov	BYTE PTR ArrayC$[rsp+10], 1
	mov	BYTE PTR ArrayC$[rsp+11], 0
	mov	BYTE PTR ArrayC$[rsp+12], 1
	mov	BYTE PTR ArrayC$[rsp+13], 0
	mov	BYTE PTR ArrayC$[rsp+14], 1
	mov	BYTE PTR ArrayC$[rsp+15], 0

; 224  : 
; 225  : 	glm::vec2 Vec2A = glm::make_vec2(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Vec2A$[rsp]
	call	??$make_vec2@M@glm@@YA?AU?$tvec2@M$0A@@0@QEBM@Z ; glm::make_vec2<float>

; 226  : 	glm::vec3 Vec3A = glm::make_vec3(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Vec3A$[rsp]
	call	??$make_vec3@M@glm@@YA?AU?$tvec3@M$0A@@0@QEBM@Z ; glm::make_vec3<float>

; 227  : 	glm::vec4 Vec4A = glm::make_vec4(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Vec4A$[rsp]
	call	??$make_vec4@M@glm@@YA?AU?$tvec4@M$0A@@0@QEBM@Z ; glm::make_vec4<float>

; 228  : 
; 229  : 	glm::ivec2 Vec2B = glm::make_vec2(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Vec2B$[rsp]
	call	??$make_vec2@H@glm@@YA?AU?$tvec2@H$0A@@0@QEBH@Z ; glm::make_vec2<int>

; 230  : 	glm::ivec3 Vec3B = glm::make_vec3(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Vec3B$[rsp]
	call	??$make_vec3@H@glm@@YA?AU?$tvec3@H$0A@@0@QEBH@Z ; glm::make_vec3<int>

; 231  : 	glm::ivec4 Vec4B = glm::make_vec4(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Vec4B$[rsp]
	call	??$make_vec4@H@glm@@YA?AU?$tvec4@H$0A@@0@QEBH@Z ; glm::make_vec4<int>

; 232  : 
; 233  : 	glm::bvec2 Vec2C = glm::make_vec2(ArrayC);

	lea	rdx, QWORD PTR ArrayC$[rsp]
	lea	rcx, QWORD PTR Vec2C$[rsp]
	call	??$make_vec2@_N@glm@@YA?AU?$tvec2@_N$0A@@0@QEB_N@Z ; glm::make_vec2<bool>

; 234  : 	glm::bvec3 Vec3C = glm::make_vec3(ArrayC);

	lea	rdx, QWORD PTR ArrayC$[rsp]
	lea	rcx, QWORD PTR Vec3C$[rsp]
	call	??$make_vec3@_N@glm@@YA?AU?$tvec3@_N$0A@@0@QEB_N@Z ; glm::make_vec3<bool>

; 235  : 	glm::bvec4 Vec4C = glm::make_vec4(ArrayC);

	lea	rdx, QWORD PTR ArrayC$[rsp]
	lea	rcx, QWORD PTR Vec4C$[rsp]
	call	??$make_vec4@_N@glm@@YA?AU?$tvec4@_N$0A@@0@QEB_N@Z ; glm::make_vec4<bool>

; 236  : 
; 237  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 238  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_make_pointer_vec@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 656				; 00000290H
	pop	rdi
	ret	0
?test_make_pointer_vec@@YAHXZ ENDP			; test_make_pointer_vec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 192
__$ReturnUdt$ = 240
ptr$ = 248
??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z PROC ; glm::make_mat4x4<double>, COMDAT

; 408  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 409  : 		tmat4x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x4@N$0A@@glm@@QEAA@XZ		; glm::tmat4x4<double,0>::tmat4x4<double,0>

; 410  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 128				; 00000080H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 411  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 128				; 00000080H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 412  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z ENDP ; glm::make_mat4x4<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z PROC ; glm::tmat4x4<double,0>::operator[], COMDAT

; 241  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 242  : 		assert(i < this->length());

	call	?length@?$tmat4x4@N$0A@@glm@@SAHXZ	; glm::tmat4x4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 242				; 000000f2H
	lea	rdx, OFFSET FLAT:??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 243  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 244  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ENDP ; glm::tmat4x4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$tmat4x4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x4@N$0A@@glm@@SAHXZ PROC			; glm::tmat4x4<double,0>::length, COMDAT

; 84   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x4@N$0A@@glm@@SAHXZ ENDP			; glm::tmat4x4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$tmat4x4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 80
$T3 = 112
$T4 = 144
this$ = 208
??0?$tmat4x4@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x4<double,0>::tmat4x4<double,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@N$0A@@glm@@QEAA@XZ ; glm::tvec4<double,0>::tvec4<double,0>
	mov	r8d, 4
	mov	edx, 32					; 00000020H
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 16   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 17   : 				this->value[2] = col_type(0, 0, 1, 0);

	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 18   : 				this->value[3] = col_type(0, 0, 0, 1);

	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 19   : #			endif
; 20   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x4<double,0>::tmat4x4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 160
__$ReturnUdt$ = 208
ptr$ = 216
??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z PROC ; glm::make_mat4x3<double>, COMDAT

; 398  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 399  : 		tmat4x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x3@N$0A@@glm@@QEAA@XZ		; glm::tmat4x3<double,0>::tmat4x3<double,0>

; 400  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 96					; 00000060H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 401  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 402  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z ENDP ; glm::make_mat4x3<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z PROC ; glm::tmat4x3<double,0>::operator[], COMDAT

; 211  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 212  : 		assert(i < this->length());

	call	?length@?$tmat4x3@N$0A@@glm@@SAHXZ	; glm::tmat4x3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 212				; 000000d4H
	lea	rdx, OFFSET FLAT:??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 213  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ENDP ; glm::tmat4x3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$tmat4x3@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x3@N$0A@@glm@@SAHXZ PROC			; glm::tmat4x3<double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x3@N$0A@@glm@@SAHXZ ENDP			; glm::tmat4x3<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$tmat4x3@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 56
$T3 = 80
$T4 = 104
this$ = 160
??0?$tmat4x3@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x3<double,0>::tmat4x3<double,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@N$0A@@glm@@QEAA@XZ ; glm::tvec3<double,0>::tvec3<double,0>
	mov	r8d, 4
	mov	edx, 24
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 15   : 				this->value[2] = col_type(0, 0, 1);

	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 16   : 				this->value[3] = col_type(0, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 17   : #			endif
; 18   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x3@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x3<double,0>::tmat4x3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 128
__$ReturnUdt$ = 176
ptr$ = 184
??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z PROC ; glm::make_mat4x2<double>, COMDAT

; 388  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 389  : 		tmat4x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x2@N$0A@@glm@@QEAA@XZ		; glm::tmat4x2<double,0>::tmat4x2<double,0>

; 390  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat4x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 64					; 00000040H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 391  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 64					; 00000040H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 392  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z ENDP ; glm::make_mat4x2<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z PROC ; glm::tmat4x2<double,0>::operator[], COMDAT

; 218  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		assert(i < this->length());

	call	?length@?$tmat4x2@N$0A@@glm@@SAHXZ	; glm::tmat4x2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 219				; 000000dbH
	lea	rdx, OFFSET FLAT:??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 220  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 221  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ENDP ; glm::tmat4x2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$tmat4x2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x2@N$0A@@glm@@SAHXZ PROC			; glm::tmat4x2<double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x2@N$0A@@glm@@SAHXZ ENDP			; glm::tmat4x2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$tmat4x2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
$T4 = 80
this$ = 128
??0?$tmat4x2@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x2<double,0>::tmat4x2<double,0>, COMDAT

; 18   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@N$0A@@glm@@QEAA@XZ ; glm::tvec2<double,0>::tvec2<double,0>
	mov	r8d, 4
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 19   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 20   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 21   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 22   : 				this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 23   : 				this->value[3] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 24   : #			endif
; 25   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x2<double,0>::tmat4x2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 160
__$ReturnUdt$ = 208
ptr$ = 216
??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z PROC ; glm::make_mat3x4<double>, COMDAT

; 378  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 379  : 		tmat3x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x4@N$0A@@glm@@QEAA@XZ		; glm::tmat3x4<double,0>::tmat3x4<double,0>

; 380  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 96					; 00000060H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 381  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 382  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z ENDP ; glm::make_mat3x4<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z PROC ; glm::tmat3x4<double,0>::operator[], COMDAT

; 189  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 190  : 		assert(i < this->length());

	call	?length@?$tmat3x4@N$0A@@glm@@SAHXZ	; glm::tmat3x4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 190				; 000000beH
	lea	rdx, OFFSET FLAT:??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 191  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 192  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ENDP ; glm::tmat3x4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$tmat3x4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x4@N$0A@@glm@@SAHXZ PROC			; glm::tmat3x4<double,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x4@N$0A@@glm@@SAHXZ ENDP			; glm::tmat3x4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$tmat3x4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 80
$T3 = 112
this$ = 176
??0?$tmat3x4@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x4<double,0>::tmat3x4<double,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@N$0A@@glm@@QEAA@XZ ; glm::tvec4<double,0>::tvec4<double,0>
	mov	r8d, 3
	mov	edx, 32					; 00000020H
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 15   : 				this->value[2] = col_type(0, 0, 1, 0);

	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 16   : #			endif
; 17   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x4<double,0>::tmat3x4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 144
__$ReturnUdt$ = 192
ptr$ = 200
??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z PROC ; glm::make_mat3x3<double>, COMDAT

; 368  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 168				; 000000a8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 369  : 		tmat3x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x3@N$0A@@glm@@QEAA@XZ		; glm::tmat3x3<double,0>::tmat3x3<double,0>

; 370  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 72					; 00000048H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 371  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 72					; 00000048H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 372  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z ENDP ; glm::make_mat3x3<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z PROC ; glm::tmat3x3<double,0>::operator[], COMDAT

; 191  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 192  : 		assert(i < this->length());

	call	?length@?$tmat3x3@N$0A@@glm@@SAHXZ	; glm::tmat3x3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 192				; 000000c0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 193  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 194  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ENDP ; glm::tmat3x3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$tmat3x3@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x3@N$0A@@glm@@SAHXZ PROC			; glm::tmat3x3<double,0>::length, COMDAT

; 79   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x3@N$0A@@glm@@SAHXZ ENDP			; glm::tmat3x3<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$tmat3x3@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 56
$T3 = 80
this$ = 144
??0?$tmat3x3@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x3<double,0>::tmat3x3<double,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@N$0A@@glm@@QEAA@XZ ; glm::tvec3<double,0>::tvec3<double,0>
	mov	r8d, 3
	mov	edx, 24
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 16   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 17   : 				this->value[2] = col_type(0, 0, 1);

	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 18   : #			endif
; 19   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x3@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x3<double,0>::tmat3x3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 112
__$ReturnUdt$ = 160
ptr$ = 168
??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z PROC ; glm::make_mat3x2<double>, COMDAT

; 358  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 359  : 		tmat3x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x2@N$0A@@glm@@QEAA@XZ		; glm::tmat3x2<double,0>::tmat3x2<double,0>

; 360  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat3x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 48					; 00000030H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 361  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 362  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z ENDP ; glm::make_mat3x2<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z PROC ; glm::tmat3x2<double,0>::operator[], COMDAT

; 189  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 190  : 		assert(i < this->length());

	call	?length@?$tmat3x2@N$0A@@glm@@SAHXZ	; glm::tmat3x2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 190				; 000000beH
	lea	rdx, OFFSET FLAT:??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 191  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 192  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ENDP ; glm::tmat3x2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$tmat3x2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x2@N$0A@@glm@@SAHXZ PROC			; glm::tmat3x2<double,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x2@N$0A@@glm@@SAHXZ ENDP			; glm::tmat3x2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$tmat3x2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$ = 112
??0?$tmat3x2@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x2<double,0>::tmat3x2<double,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@N$0A@@glm@@QEAA@XZ ; glm::tvec2<double,0>::tvec2<double,0>
	mov	r8d, 3
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 15   : 				this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 16   : #			endif
; 17   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x2<double,0>::tmat3x2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 128
__$ReturnUdt$ = 176
ptr$ = 184
??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z PROC ; glm::make_mat2x4<double>, COMDAT

; 348  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 349  : 		tmat2x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x4@N$0A@@glm@@QEAA@XZ		; glm::tmat2x4<double,0>::tmat2x4<double,0>

; 350  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x4@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 64					; 00000040H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 351  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 64					; 00000040H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 352  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z ENDP ; glm::make_mat2x4<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z PROC ; glm::tmat2x4<double,0>::operator[], COMDAT

; 160  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 161  : 		assert(i < this->length());

	call	?length@?$tmat2x4@N$0A@@glm@@SAHXZ	; glm::tmat2x4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 161				; 000000a1H
	lea	rdx, OFFSET FLAT:??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 162  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 163  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x4@N$0A@@glm@@QEAAAEAU?$tvec4@N$0A@@1@H@Z ENDP ; glm::tmat2x4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$tmat2x4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x4@N$0A@@glm@@SAHXZ PROC			; glm::tmat2x4<double,0>::length, COMDAT

; 75   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x4@N$0A@@glm@@SAHXZ ENDP			; glm::tmat2x4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$tmat2x4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 80
this$ = 144
??0?$tmat2x4@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x4<double,0>::tmat2x4<double,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@N$0A@@glm@@QEAA@XZ ; glm::tvec4<double,0>::tvec4<double,0>
	mov	r8d, 2
	mov	edx, 32					; 00000020H
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	ecx, 32					; 00000020H
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 15   : #			endif
; 16   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x4<double,0>::tmat2x4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 112
__$ReturnUdt$ = 160
ptr$ = 168
??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z PROC ; glm::make_mat2x3<double>, COMDAT

; 338  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 339  : 		tmat2x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x3@N$0A@@glm@@QEAA@XZ		; glm::tmat2x3<double,0>::tmat2x3<double,0>

; 340  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x3@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 48					; 00000030H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 341  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 342  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z ENDP ; glm::make_mat2x3<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z PROC ; glm::tmat2x3<double,0>::operator[], COMDAT

; 159  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 160  : 		assert(i < this->length());

	call	?length@?$tmat2x3@N$0A@@glm@@SAHXZ	; glm::tmat2x3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 160				; 000000a0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 161  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 162  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x3@N$0A@@glm@@QEAAAEAU?$tvec3@N$0A@@1@H@Z ENDP ; glm::tmat2x3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$tmat2x3@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x3@N$0A@@glm@@SAHXZ PROC			; glm::tmat2x3<double,0>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x3@N$0A@@glm@@SAHXZ ENDP			; glm::tmat2x3<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$tmat2x3@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 56
this$ = 112
??0?$tmat2x3@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x3<double,0>::tmat2x3<double,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@N$0A@@glm@@QEAA@XZ ; glm::tvec3<double,0>::tvec3<double,0>
	mov	r8d, 2
	mov	edx, 24
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
	mov	ecx, 24
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 15   : #			endif
; 16   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x3@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x3<double,0>::tmat2x3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
ptr$ = 152
??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z PROC ; glm::make_mat2x2<double>, COMDAT

; 328  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 329  : 		tmat2x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x2@N$0A@@glm@@QEAA@XZ		; glm::tmat2x2<double,0>::tmat2x2<double,0>

; 330  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tmat2x2@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 331  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 332  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z ENDP ; glm::make_mat2x2<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z PROC ; glm::tmat2x2<double,0>::operator[], COMDAT

; 159  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 160  : 		assert(i < this->length());

	call	?length@?$tmat2x2@N$0A@@glm@@SAHXZ	; glm::tmat2x2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 160				; 000000a0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 161  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 162  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@N$0A@@glm@@QEAAAEAU?$tvec2@N$0A@@1@H@Z ENDP ; glm::tmat2x2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$tmat2x2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x2@N$0A@@glm@@SAHXZ PROC			; glm::tmat2x2<double,0>::length, COMDAT

; 72   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x2@N$0A@@glm@@SAHXZ ENDP			; glm::tmat2x2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$tmat2x2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
??0?$tmat2x2@N$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x2<double,0>::tmat2x2<double,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@N$0A@@glm@@QEAA@XZ ; glm::tvec2<double,0>::tvec2<double,0>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 16   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 17   : #			endif
; 18   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x2<double,0>::tmat2x2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 48
__$ArrayPad$ = 128
__$ReturnUdt$ = 176
ptr$ = 184
??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z PROC ; glm::make_mat4x4<float>, COMDAT

; 408  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 409  : 		tmat4x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x4@M$0A@@glm@@QEAA@XZ		; glm::tmat4x4<float,0>::tmat4x4<float,0>

; 410  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 64					; 00000040H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 411  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 64					; 00000040H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 412  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z ENDP ; glm::make_mat4x4<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 112
__$ReturnUdt$ = 160
ptr$ = 168
??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z PROC ; glm::make_mat4x3<float>, COMDAT

; 398  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 399  : 		tmat4x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x3@M$0A@@glm@@QEAA@XZ		; glm::tmat4x3<float,0>::tmat4x3<float,0>

; 400  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 48					; 00000030H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 401  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 402  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z ENDP ; glm::make_mat4x3<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
ptr$ = 152
??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z PROC ; glm::make_mat4x2<float>, COMDAT

; 388  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 389  : 		tmat4x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat4x2@M$0A@@glm@@QEAA@XZ		; glm::tmat4x2<float,0>::tmat4x2<float,0>

; 390  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat4x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 391  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 392  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z ENDP ; glm::make_mat4x2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 112
__$ReturnUdt$ = 160
ptr$ = 168
??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z PROC ; glm::make_mat3x4<float>, COMDAT

; 378  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+160]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 379  : 		tmat3x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x4@M$0A@@glm@@QEAA@XZ		; glm::tmat3x4<float,0>::tmat3x4<float,0>

; 380  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 48					; 00000030H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 381  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 382  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z ENDP ; glm::make_mat3x4<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
ptr$ = 152
??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z PROC ; glm::make_mat3x3<float>, COMDAT

; 368  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 369  : 		tmat3x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x3@M$0A@@glm@@QEAA@XZ		; glm::tmat3x3<float,0>::tmat3x3<float,0>

; 370  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 36					; 00000024H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 371  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 36					; 00000024H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 372  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z ENDP ; glm::make_mat3x3<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 80
__$ReturnUdt$ = 128
ptr$ = 136
??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z PROC ; glm::make_mat3x2<float>, COMDAT

; 358  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 359  : 		tmat3x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat3x2@M$0A@@glm@@QEAA@XZ		; glm::tmat3x2<float,0>::tmat3x2<float,0>

; 360  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat3x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 24
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 361  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 362  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z ENDP ; glm::make_mat3x2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
ptr$ = 152
??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z PROC ; glm::make_mat2x4<float>, COMDAT

; 348  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 349  : 		tmat2x4<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x4@M$0A@@glm@@QEAA@XZ		; glm::tmat2x4<float,0>::tmat2x4<float,0>

; 350  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x4<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 32					; 00000020H
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 351  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 352  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z ENDP ; glm::make_mat2x4<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 80
__$ReturnUdt$ = 128
ptr$ = 136
??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z PROC ; glm::make_mat2x3<float>, COMDAT

; 338  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 339  : 		tmat2x3<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x3@M$0A@@glm@@QEAA@XZ		; glm::tmat2x3<float,0>::tmat2x3<float,0>

; 340  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x3<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 24
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 341  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 342  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z ENDP ; glm::make_mat2x3<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z
_TEXT	SEGMENT
Result$ = 40
__$ArrayPad$ = 80
__$ReturnUdt$ = 128
ptr$ = 136
??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z PROC ; glm::make_mat2x2<float>, COMDAT

; 328  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 329  : 		tmat2x2<T, defaultp> Result;

	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tmat2x2@M$0A@@glm@@QEAA@XZ		; glm::tmat2x2<float,0>::tmat2x2<float,0>

; 330  : 		memcpy(value_ptr(Result), ptr, sizeof(tmat2x2<T, defaultp>));

	lea	rcx, QWORD PTR Result$[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	r8d, 16
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	rcx, rax
	call	memcpy

; 331  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 332  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z ENDP ; glm::make_mat2x2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
ArrayA$ = 64
ArrayB$ = 160
Mat2x2A$ = 312
Mat2x3A$ = 360
Mat2x4A$ = 408
Mat3x2A$ = 472
Mat3x3A$ = 520
Mat3x4A$ = 584
Mat4x2A$ = 664
Mat4x3A$ = 728
Mat4x4A$ = 816
Mat2x2B$ = 904
Mat2x3B$ = 968
Mat2x4B$ = 1056
Mat3x2B$ = 1144
Mat3x3B$ = 1232
Mat3x4B$ = 1344
Mat4x2B$ = 1472
Mat4x3B$ = 1568
Mat4x4B$ = 1696
__$ArrayPad$ = 1840
?test_make_pointer_mat@@YAHXZ PROC			; test_make_pointer_mat

; 188  : {

$LN3:
	push	rdi
	sub	rsp, 1856				; 00000740H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 456				; 000001c8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 189  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 190  : 
; 191  : 	float ArrayA[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

	xorps	xmm0, xmm0
	movss	DWORD PTR ArrayA$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ArrayA$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ArrayA$[rsp+8], xmm0
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR ArrayA$[rsp+12], xmm0
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR ArrayA$[rsp+16], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR ArrayA$[rsp+20], xmm0
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR ArrayA$[rsp+24], xmm0
	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR ArrayA$[rsp+28], xmm0
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR ArrayA$[rsp+32], xmm0
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR ArrayA$[rsp+36], xmm0
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ArrayA$[rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@41300000
	movss	DWORD PTR ArrayA$[rsp+44], xmm0
	movss	xmm0, DWORD PTR __real@41400000
	movss	DWORD PTR ArrayA$[rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41500000
	movss	DWORD PTR ArrayA$[rsp+52], xmm0
	movss	xmm0, DWORD PTR __real@41600000
	movss	DWORD PTR ArrayA$[rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR ArrayA$[rsp+60], xmm0

; 192  : 	double ArrayB[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

	xorps	xmm0, xmm0
	movsd	QWORD PTR ArrayB$[rsp], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR ArrayB$[rsp+8], xmm0
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR ArrayB$[rsp+16], xmm0
	movsd	xmm0, QWORD PTR __real@4008000000000000
	movsd	QWORD PTR ArrayB$[rsp+24], xmm0
	movsd	xmm0, QWORD PTR __real@4010000000000000
	movsd	QWORD PTR ArrayB$[rsp+32], xmm0
	movsd	xmm0, QWORD PTR __real@4014000000000000
	movsd	QWORD PTR ArrayB$[rsp+40], xmm0
	movsd	xmm0, QWORD PTR __real@4018000000000000
	movsd	QWORD PTR ArrayB$[rsp+48], xmm0
	movsd	xmm0, QWORD PTR __real@401c000000000000
	movsd	QWORD PTR ArrayB$[rsp+56], xmm0
	movsd	xmm0, QWORD PTR __real@4020000000000000
	movsd	QWORD PTR ArrayB$[rsp+64], xmm0
	movsd	xmm0, QWORD PTR __real@4022000000000000
	movsd	QWORD PTR ArrayB$[rsp+72], xmm0
	movsd	xmm0, QWORD PTR __real@4024000000000000
	movsd	QWORD PTR ArrayB$[rsp+80], xmm0
	movsd	xmm0, QWORD PTR __real@4026000000000000
	movsd	QWORD PTR ArrayB$[rsp+88], xmm0
	movsd	xmm0, QWORD PTR __real@4028000000000000
	movsd	QWORD PTR ArrayB$[rsp+96], xmm0
	movsd	xmm0, QWORD PTR __real@402a000000000000
	movsd	QWORD PTR ArrayB$[rsp+104], xmm0
	movsd	xmm0, QWORD PTR __real@402c000000000000
	movsd	QWORD PTR ArrayB$[rsp+112], xmm0
	movsd	xmm0, QWORD PTR __real@402e000000000000
	movsd	QWORD PTR ArrayB$[rsp+120], xmm0

; 193  : 
; 194  : 	glm::mat2x2 Mat2x2A = glm::make_mat2x2(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat2x2A$[rsp]
	call	??$make_mat2x2@M@glm@@YA?AU?$tmat2x2@M$0A@@0@QEBM@Z ; glm::make_mat2x2<float>

; 195  : 	glm::mat2x3 Mat2x3A = glm::make_mat2x3(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat2x3A$[rsp]
	call	??$make_mat2x3@M@glm@@YA?AU?$tmat2x3@M$0A@@0@QEBM@Z ; glm::make_mat2x3<float>

; 196  : 	glm::mat2x4 Mat2x4A = glm::make_mat2x4(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat2x4A$[rsp]
	call	??$make_mat2x4@M@glm@@YA?AU?$tmat2x4@M$0A@@0@QEBM@Z ; glm::make_mat2x4<float>

; 197  : 	glm::mat3x2 Mat3x2A = glm::make_mat3x2(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat3x2A$[rsp]
	call	??$make_mat3x2@M@glm@@YA?AU?$tmat3x2@M$0A@@0@QEBM@Z ; glm::make_mat3x2<float>

; 198  : 	glm::mat3x3 Mat3x3A = glm::make_mat3x3(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat3x3A$[rsp]
	call	??$make_mat3x3@M@glm@@YA?AU?$tmat3x3@M$0A@@0@QEBM@Z ; glm::make_mat3x3<float>

; 199  : 	glm::mat3x4 Mat3x4A = glm::make_mat3x4(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat3x4A$[rsp]
	call	??$make_mat3x4@M@glm@@YA?AU?$tmat3x4@M$0A@@0@QEBM@Z ; glm::make_mat3x4<float>

; 200  : 	glm::mat4x2 Mat4x2A = glm::make_mat4x2(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat4x2A$[rsp]
	call	??$make_mat4x2@M@glm@@YA?AU?$tmat4x2@M$0A@@0@QEBM@Z ; glm::make_mat4x2<float>

; 201  : 	glm::mat4x3 Mat4x3A = glm::make_mat4x3(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat4x3A$[rsp]
	call	??$make_mat4x3@M@glm@@YA?AU?$tmat4x3@M$0A@@0@QEBM@Z ; glm::make_mat4x3<float>

; 202  : 	glm::mat4x4 Mat4x4A = glm::make_mat4x4(ArrayA);

	lea	rdx, QWORD PTR ArrayA$[rsp]
	lea	rcx, QWORD PTR Mat4x4A$[rsp]
	call	??$make_mat4x4@M@glm@@YA?AU?$tmat4x4@M$0A@@0@QEBM@Z ; glm::make_mat4x4<float>

; 203  : 
; 204  : 	glm::dmat2x2 Mat2x2B = glm::make_mat2x2(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat2x2B$[rsp]
	call	??$make_mat2x2@N@glm@@YA?AU?$tmat2x2@N$0A@@0@QEBN@Z ; glm::make_mat2x2<double>

; 205  : 	glm::dmat2x3 Mat2x3B = glm::make_mat2x3(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat2x3B$[rsp]
	call	??$make_mat2x3@N@glm@@YA?AU?$tmat2x3@N$0A@@0@QEBN@Z ; glm::make_mat2x3<double>

; 206  : 	glm::dmat2x4 Mat2x4B = glm::make_mat2x4(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat2x4B$[rsp]
	call	??$make_mat2x4@N@glm@@YA?AU?$tmat2x4@N$0A@@0@QEBN@Z ; glm::make_mat2x4<double>

; 207  : 	glm::dmat3x2 Mat3x2B = glm::make_mat3x2(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat3x2B$[rsp]
	call	??$make_mat3x2@N@glm@@YA?AU?$tmat3x2@N$0A@@0@QEBN@Z ; glm::make_mat3x2<double>

; 208  : 	glm::dmat3x3 Mat3x3B = glm::make_mat3x3(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat3x3B$[rsp]
	call	??$make_mat3x3@N@glm@@YA?AU?$tmat3x3@N$0A@@0@QEBN@Z ; glm::make_mat3x3<double>

; 209  : 	glm::dmat3x4 Mat3x4B = glm::make_mat3x4(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat3x4B$[rsp]
	call	??$make_mat3x4@N@glm@@YA?AU?$tmat3x4@N$0A@@0@QEBN@Z ; glm::make_mat3x4<double>

; 210  : 	glm::dmat4x2 Mat4x2B = glm::make_mat4x2(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat4x2B$[rsp]
	call	??$make_mat4x2@N@glm@@YA?AU?$tmat4x2@N$0A@@0@QEBN@Z ; glm::make_mat4x2<double>

; 211  : 	glm::dmat4x3 Mat4x3B = glm::make_mat4x3(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat4x3B$[rsp]
	call	??$make_mat4x3@N@glm@@YA?AU?$tmat4x3@N$0A@@0@QEBN@Z ; glm::make_mat4x3<double>

; 212  : 	glm::dmat4x4 Mat4x4B = glm::make_mat4x4(ArrayB);

	lea	rdx, QWORD PTR ArrayB$[rsp]
	lea	rcx, QWORD PTR Mat4x4B$[rsp]
	call	??$make_mat4x4@N@glm@@YA?AU?$tmat4x4@N$0A@@0@QEBN@Z ; glm::make_mat4x4<double>

; 213  : 
; 214  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 215  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_make_pointer_mat@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1856				; 00000740H
	pop	rdi
	ret	0
?test_make_pointer_mat@@YAHXZ ENDP			; test_make_pointer_mat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
m$12 = 56
p$13 = 88
m$14 = 104
p$15 = 136
m$16 = 152
p$17 = 200
m$18 = 216
p$19 = 248
m$20 = 264
p$21 = 312
m$22 = 328
p$23 = 392
m$24 = 408
p$25 = 456
m$26 = 472
p$27 = 536
m$28 = 560
p$29 = 632
$T30 = 648
$T31 = 652
tv75 = 656
tv88 = 660
tv133 = 664
tv146 = 668
tv159 = 672
tv172 = 676
tv185 = 680
tv198 = 684
tv211 = 688
__$ArrayPad$ = 696
?test_value_ptr_mat_const@@YAHXZ PROC			; test_value_ptr_mat_const

; 135  : {

$LN21:
	push	rdi
	sub	rsp, 704				; 000002c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 168				; 000000a8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 136  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 137  : 
; 138  : 	{
; 139  : 		glm::mat2x2 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$12[rsp]
	call	??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x2<float,0>::tmat2x2<float,0>

; 140  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$12[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$13[rsp], rax

; 141  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$12[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$13[rsp], rax
	jne	SHORT $LN3@test_value
	mov	DWORD PTR tv75[rsp], 0
	jmp	SHORT $LN4@test_value
$LN3@test_value:
	mov	DWORD PTR tv75[rsp], 1
$LN4@test_value:
	mov	eax, DWORD PTR tv75[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 142  : 	}
; 143  : 	{
; 144  : 		glm::mat2x3 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$14[rsp]
	call	??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x3<float,0>::tmat2x3<float,0>

; 145  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$14[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$15[rsp], rax

; 146  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$14[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$15[rsp], rax
	jne	SHORT $LN5@test_value
	mov	DWORD PTR tv88[rsp], 0
	jmp	SHORT $LN6@test_value
$LN5@test_value:
	mov	DWORD PTR tv88[rsp], 1
$LN6@test_value:
	mov	eax, DWORD PTR tv88[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 147  : 	}
; 148  : 	{
; 149  : 		glm::mat2x4 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$16[rsp]
	call	??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x4<float,0>::tmat2x4<float,0>

; 150  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$16[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$17[rsp], rax

; 151  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$16[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$17[rsp], rax
	jne	SHORT $LN7@test_value
	mov	DWORD PTR tv133[rsp], 0
	jmp	SHORT $LN8@test_value
$LN7@test_value:
	mov	DWORD PTR tv133[rsp], 1
$LN8@test_value:
	mov	eax, DWORD PTR tv133[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 152  : 	}
; 153  : 	{
; 154  : 		glm::mat3x2 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$18[rsp]
	call	??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x2<float,0>::tmat3x2<float,0>

; 155  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$18[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$19[rsp], rax

; 156  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$18[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$19[rsp], rax
	jne	SHORT $LN9@test_value
	mov	DWORD PTR tv146[rsp], 0
	jmp	SHORT $LN10@test_value
$LN9@test_value:
	mov	DWORD PTR tv146[rsp], 1
$LN10@test_value:
	mov	eax, DWORD PTR tv146[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 157  : 	}
; 158  : 	{
; 159  : 		glm::mat3x3 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$20[rsp]
	call	??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x3<float,0>::tmat3x3<float,0>

; 160  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$20[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$21[rsp], rax

; 161  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$20[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$21[rsp], rax
	jne	SHORT $LN11@test_value
	mov	DWORD PTR tv159[rsp], 0
	jmp	SHORT $LN12@test_value
$LN11@test_value:
	mov	DWORD PTR tv159[rsp], 1
$LN12@test_value:
	mov	eax, DWORD PTR tv159[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 162  : 	}
; 163  : 	{
; 164  : 		glm::mat3x4 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$22[rsp]
	call	??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x4<float,0>::tmat3x4<float,0>

; 165  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$22[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$23[rsp], rax

; 166  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$22[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$23[rsp], rax
	jne	SHORT $LN13@test_value
	mov	DWORD PTR tv172[rsp], 0
	jmp	SHORT $LN14@test_value
$LN13@test_value:
	mov	DWORD PTR tv172[rsp], 1
$LN14@test_value:
	mov	eax, DWORD PTR tv172[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 167  : 	}
; 168  : 	{
; 169  : 		glm::mat4x2 const m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$24[rsp]
	call	??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat4x2<float,0>::tmat4x2<float,0>

; 170  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$24[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$25[rsp], rax

; 171  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$24[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$25[rsp], rax
	jne	SHORT $LN15@test_value
	mov	DWORD PTR tv185[rsp], 0
	jmp	SHORT $LN16@test_value
$LN15@test_value:
	mov	DWORD PTR tv185[rsp], 1
$LN16@test_value:
	mov	eax, DWORD PTR tv185[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 172  : 	}
; 173  : 	{
; 174  : 		glm::mat4x3 const m(1.0);

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T30[rsp], xmm0
	lea	rdx, QWORD PTR $T30[rsp]
	lea	rcx, QWORD PTR m$26[rsp]
	call	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z	; glm::tmat4x3<float,0>::tmat4x3<float,0>

; 175  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$26[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$27[rsp], rax

; 176  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$26[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$27[rsp], rax
	jne	SHORT $LN17@test_value
	mov	DWORD PTR tv198[rsp], 0
	jmp	SHORT $LN18@test_value
$LN17@test_value:
	mov	DWORD PTR tv198[rsp], 1
$LN18@test_value:
	mov	eax, DWORD PTR tv198[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 177  : 	}
; 178  : 	{
; 179  : 		glm::mat4x4 const m(1.0);

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T31[rsp], xmm0
	lea	rdx, QWORD PTR $T31[rsp]
	lea	rcx, QWORD PTR m$28[rsp]
	call	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z	; glm::tmat4x4<float,0>::tmat4x4<float,0>

; 180  : 		float const * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$28[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$29[rsp], rax

; 181  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$28[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$29[rsp], rax
	jne	SHORT $LN19@test_value
	mov	DWORD PTR tv211[rsp], 0
	jmp	SHORT $LN20@test_value
$LN19@test_value:
	mov	DWORD PTR tv211[rsp], 1
$LN20@test_value:
	mov	eax, DWORD PTR tv211[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 182  : 	}
; 183  : 
; 184  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 185  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_value_ptr_mat_const@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 704				; 000002c0H
	pop	rdi
	ret	0
?test_value_ptr_mat_const@@YAHXZ ENDP			; test_value_ptr_mat_const
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 128  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]

; 130  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 139  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]

; 141  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 260  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 261  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]

; 262  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 268  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 269  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]

; 270  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 216  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 217  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]

; 218  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat4x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 227  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 228  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]

; 229  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 238  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 239  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]

; 240  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 249  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 250  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]

; 251  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 106  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 107  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]

; 108  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 117  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 118  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]

; 119  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 172  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 173  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]

; 174  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat3x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 183  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 184  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]

; 185  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 194  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 195  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]

; 196  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 205  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 206  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]

; 207  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 150  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 151  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]

; 152  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 161  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 162  : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]

; 163  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 84   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 85   : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]

; 86   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tmat2x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z
_TEXT	SEGMENT
mat$ = 48
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 95   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 96   : 		return &(mat[0].x);

	xor	edx, edx
	mov	rcx, QWORD PTR mat$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]

; 97   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat4x3<float,0>::operator[], COMDAT

; 218  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		assert(i < this->length());

	call	?length@?$tmat4x3@M$0A@@glm@@SAHXZ	; glm::tmat4x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 219				; 000000dbH
	lea	rdx, OFFSET FLAT:??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 220  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 221  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat4x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat4x3<float,0>::operator[], COMDAT

; 211  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 212  : 		assert(i < this->length());

	call	?length@?$tmat4x3@M$0A@@glm@@SAHXZ	; glm::tmat4x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 212				; 000000d4H
	lea	rdx, OFFSET FLAT:??_C@_1LK@GEGFBJDO@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 213  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 214  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat4x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$tmat4x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x3<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
$T3 = 56
$T4 = 68
this$ = 112
s$ = 120
??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z PROC		; glm::tmat4x3<float,0>::tmat4x3<float,0>, COMDAT

; 48   : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 4
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 49   : 		this->value[0] = col_type(s, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	rax, QWORD PTR s$[rsp]
	movss	xmm1, DWORD PTR [rax]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z	; glm::tvec3<float,0>::tvec3<float,0><float,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 50   : 		this->value[1] = col_type(0, s, 0);

	xor	r9d, r9d
	mov	rax, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rax]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,float,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 51   : 		this->value[2] = col_type(0, 0, s);

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm3, DWORD PTR [rax]
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,float>
	mov	ecx, 12
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 52   : 		this->value[3] = col_type(0, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 53   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z ENDP		; glm::tmat4x3<float,0>::tmat4x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$tmat4x3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
$T3 = 56
$T4 = 68
this$ = 112
??0?$tmat4x3@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x3<float,0>::tmat4x3<float,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 4
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 15   : 				this->value[2] = col_type(0, 0, 1);

	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 16   : 				this->value[3] = col_type(0, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 17   : #			endif
; 18   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x3<float,0>::tmat4x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat3x3<float,0>::operator[], COMDAT

; 198  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 199  : 		assert(i < this->length());

	call	?length@?$tmat3x3@M$0A@@glm@@SAHXZ	; glm::tmat3x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 199				; 000000c7H
	lea	rdx, OFFSET FLAT:??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 200  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 201  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat3x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat3x3<float,0>::operator[], COMDAT

; 191  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 192  : 		assert(i < this->length());

	call	?length@?$tmat3x3@M$0A@@glm@@SAHXZ	; glm::tmat3x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 192				; 000000c0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@JJJMOBEL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 193  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 194  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat3x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$tmat3x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x3<float,0>::length, COMDAT

; 79   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
$T3 = 56
this$ = 112
scalar$ = 120
??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat3x3<float,0>::tmat3x3<float,0>, COMDAT

; 47   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 48   : 		this->value[0] = col_type(scalar, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z	; glm::tvec3<float,0>::tvec3<float,0><float,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 49   : 		this->value[1] = col_type(0, scalar, 0);

	xor	r9d, r9d
	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,float,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 50   : 		this->value[2] = col_type(0, 0, scalar);

	movss	xmm3, DWORD PTR scalar$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHM@?$tvec3@M$0A@@glm@@QEAA@HHM@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,float>
	mov	ecx, 12
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 51   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat3x3<float,0>::tmat3x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$tmat3x3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
$T3 = 56
this$ = 112
??0?$tmat3x3@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x3<float,0>::tmat3x3<float,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 16   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 17   : 				this->value[2] = col_type(0, 0, 1);

	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 18   : #			endif
; 19   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x3<float,0>::tmat3x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat4x4<float,0>::operator[], COMDAT

; 248  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 249  : 		assert(i < this->length());

	call	?length@?$tmat4x4@M$0A@@glm@@SAHXZ	; glm::tmat4x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 249				; 000000f9H
	lea	rdx, OFFSET FLAT:??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 250  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 251  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat4x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat4x4<float,0>::operator[], COMDAT

; 241  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 242  : 		assert(i < this->length());

	call	?length@?$tmat4x4@M$0A@@glm@@SAHXZ	; glm::tmat4x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 242				; 000000f2H
	lea	rdx, OFFSET FLAT:??_C@_1LK@BAPNPALB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 243  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 244  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat4x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$tmat4x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x4<float,0>::length, COMDAT

; 84   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
$T4 = 96
this$ = 144
s$ = 152
??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z PROC		; glm::tmat4x4<float,0>::tmat4x4<float,0>, COMDAT

; 50   : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 4
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 51   : 		this->value[0] = col_type(s, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rax, QWORD PTR s$[rsp]
	movss	xmm1, DWORD PTR [rax]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 52   : 		this->value[1] = col_type(0, s, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	rax, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rax]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 53   : 		this->value[2] = col_type(0, 0, s, 0);

	mov	DWORD PTR [rsp+32], 0
	mov	rax, QWORD PTR s$[rsp]
	movss	xmm3, DWORD PTR [rax]
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 54   : 		this->value[3] = col_type(0, 0, 0, s);

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+32], xmm0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHHM@?$tvec4@M$0A@@glm@@QEAA@HHHM@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,float>
	mov	ecx, 16
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 55   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z ENDP		; glm::tmat4x4<float,0>::tmat4x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$tmat4x4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
$T4 = 96
this$ = 144
??0?$tmat4x4@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x4<float,0>::tmat4x4<float,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 4
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 16   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 17   : 				this->value[2] = col_type(0, 0, 1, 0);

	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 18   : 				this->value[3] = col_type(0, 0, 0, 1);

	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 19   : #			endif
; 20   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat4x4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x4<float,0>::tmat4x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat2x3<float,0>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x3@M$0A@@glm@@SAHXZ	; glm::tmat2x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x3@M$0A@@glm@@QEBAAEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat2x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z PROC ; glm::tmat2x3<float,0>::operator[], COMDAT

; 159  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 160  : 		assert(i < this->length());

	call	?length@?$tmat2x3@M$0A@@glm@@SAHXZ	; glm::tmat2x3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 160				; 000000a0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@DHPEHANK@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 161  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 162  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tmat2x3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$tmat2x3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x3@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x3<float,0>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x3@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
this$ = 96
scalar$ = 104
??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat2x3<float,0>::tmat2x3<float,0>, COMDAT

; 42   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 2
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 43   : 		this->value[0] = col_type(scalar, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MHH@?$tvec3@M$0A@@glm@@QEAA@MHH@Z	; glm::tvec3<float,0>::tvec3<float,0><float,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 44   : 		this->value[1] = col_type(0, scalar, 0);

	xor	r9d, r9d
	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HMH@?$tvec3@M$0A@@glm@@QEAA@HMH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,float,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 45   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat2x3<float,0>::tmat2x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$tmat2x3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
this$ = 96
??0?$tmat2x3@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x3<float,0>::tmat2x3<float,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec3@M$0A@@glm@@QEAA@XZ ; glm::tvec3<float,0>::tvec3<float,0>
	mov	r8d, 2
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0);

	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 15   : #			endif
; 16   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x3<float,0>::tmat2x3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat3x2<float,0>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x2@M$0A@@glm@@SAHXZ	; glm::tmat3x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat3x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat3x2<float,0>::operator[], COMDAT

; 189  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 190  : 		assert(i < this->length());

	call	?length@?$tmat3x2@M$0A@@glm@@SAHXZ	; glm::tmat3x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 190				; 000000beH
	lea	rdx, OFFSET FLAT:??_C@_1LK@CDJKNCE@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 191  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 192  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat3x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$tmat3x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x2<float,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
this$ = 80
scalar$ = 88
??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat3x2<float,0>::tmat3x2<float,0>, COMDAT

; 45   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 3
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 46   : 		this->value[0] = col_type(scalar, 0);

	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z	; glm::tvec2<float,0>::tvec2<float,0><float,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 47   : 		this->value[1] = col_type(0, scalar);

	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z	; glm::tvec2<float,0>::tvec2<float,0><int,float>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 48   : 		this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 49   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat3x2<float,0>::tmat3x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$tmat3x2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
this$ = 80
??0?$tmat3x2@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x2<float,0>::tmat3x2<float,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 3
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 14   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 15   : 				this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 16   : #			endif
; 17   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$tmat3x2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x2<float,0>::tmat3x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat2x4<float,0>::operator[], COMDAT

; 167  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 168  : 		assert(i < this->length());

	call	?length@?$tmat2x4@M$0A@@glm@@SAHXZ	; glm::tmat2x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 168				; 000000a8H
	lea	rdx, OFFSET FLAT:??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 169  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 170  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat2x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat2x4<float,0>::operator[], COMDAT

; 160  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 161  : 		assert(i < this->length());

	call	?length@?$tmat2x4@M$0A@@glm@@SAHXZ	; glm::tmat2x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 161				; 000000a1H
	lea	rdx, OFFSET FLAT:??_C@_1LK@EDGMJJFF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 162  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 163  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat2x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$tmat2x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x4<float,0>::length, COMDAT

; 75   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
Zero$ = 48
$T1 = 52
$T2 = 68
this$ = 128
scalar$ = 136
??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat2x4<float,0>::tmat2x4<float,0>, COMDAT

; 42   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 43   : 		value_type const Zero(0);

	xorps	xmm0, xmm0
	movss	DWORD PTR Zero$[rsp], xmm0

; 44   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 45   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR scalar$[rsp]
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 46   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat2x4<float,0>::tmat2x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$tmat2x4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
this$ = 112
??0?$tmat2x4@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x4<float,0>::tmat2x4<float,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 15   : #			endif
; 16   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat2x4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x4<float,0>::tmat2x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat4x2<float,0>::operator[], COMDAT

; 225  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 226  : 		assert(i < this->length());

	call	?length@?$tmat4x2@M$0A@@glm@@SAHXZ	; glm::tmat4x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 226				; 000000e2H
	lea	rdx, OFFSET FLAT:??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 227  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 228  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat4x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat4x2<float,0>::operator[], COMDAT

; 218  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 219  : 		assert(i < this->length());

	call	?length@?$tmat4x2@M$0A@@glm@@SAHXZ	; glm::tmat4x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 219				; 000000dbH
	lea	rdx, OFFSET FLAT:??_C@_1LK@PPMAFFFB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 220  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 221  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat4x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$tmat4x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat4x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat4x2<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tmat4x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat4x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
$T4 = 56
this$ = 80
scalar$ = 88
??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat4x2<float,0>::tmat4x2<float,0>, COMDAT

; 55   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 4
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 56   : 		this->value[0] = col_type(scalar, 0);

	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z	; glm::tvec2<float,0>::tvec2<float,0><float,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 57   : 		this->value[1] = col_type(0, scalar);

	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z	; glm::tvec2<float,0>::tvec2<float,0><int,float>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 58   : 		this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 59   : 		this->value[3] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 60   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat4x2<float,0>::tmat4x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$tmat4x2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
$T4 = 56
this$ = 80
??0?$tmat4x2@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat4x2<float,0>::tmat4x2<float,0>, COMDAT

; 18   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 4
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 19   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 20   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 21   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 22   : 				this->value[2] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 23   : 				this->value[3] = col_type(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 24   : #			endif
; 25   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$tmat4x2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat4x2<float,0>::tmat4x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat3x4<float,0>::operator[], COMDAT

; 196  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 197  : 		assert(i < this->length());

	call	?length@?$tmat3x4@M$0A@@glm@@SAHXZ	; glm::tmat3x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 197				; 000000c5H
	lea	rdx, OFFSET FLAT:??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 198  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 199  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x4@M$0A@@glm@@QEBAAEBU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat3x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z PROC ; glm::tmat3x4<float,0>::operator[], COMDAT

; 189  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 190  : 		assert(i < this->length());

	call	?length@?$tmat3x4@M$0A@@glm@@SAHXZ	; glm::tmat3x4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 190				; 000000beH
	lea	rdx, OFFSET FLAT:??_C@_1LK@ONAEAIME@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 191  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 192  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ENDP ; glm::tmat3x4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$tmat3x4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat3x4@M$0A@@glm@@SAHXZ PROC			; glm::tmat3x4<float,0>::length, COMDAT

; 80   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tmat3x4@M$0A@@glm@@SAHXZ ENDP			; glm::tmat3x4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
this$ = 128
scalar$ = 136
??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat3x4<float,0>::tmat3x4<float,0>, COMDAT

; 45   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 3
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 46   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MHHH@?$tvec4@M$0A@@glm@@QEAA@MHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 47   : 		this->value[1] = col_type(0, scalar, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HMHH@?$tvec4@M$0A@@glm@@QEAA@HMHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 48   : 		this->value[2] = col_type(0, 0, scalar, 0);

	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR scalar$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHMH@?$tvec4@M$0A@@glm@@QEAA@HHMH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 49   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat3x4<float,0>::tmat3x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$tmat3x4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
$T3 = 80
this$ = 128
??0?$tmat3x4@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat3x4<float,0>::tmat3x4<float,0>, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec4@M$0A@@glm@@QEAA@XZ ; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8d, 3
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 12   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 13   : 				this->value[0] = col_type(1, 0, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 14   : 				this->value[1] = col_type(0, 1, 0, 0);

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 15   : 				this->value[2] = col_type(0, 0, 1, 0);

	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	ecx, 16
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rdx+rcx]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 16   : #			endif
; 17   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
??0?$tmat3x4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat3x4<float,0>::tmat3x4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat2x2<float,0>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat2x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat2x2<float,0>::operator[], COMDAT

; 159  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 160  : 		assert(i < this->length());

	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 160				; 000000a0H
	lea	rdx, OFFSET FLAT:??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 161  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 162  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat2x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$tmat2x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x2<float,0>::length, COMDAT

; 72   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
scalar$ = 72
??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tmat2x2<float,0>::tmat2x2<float,0>, COMDAT

; 44   : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 2
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 45   : 		this->value[0] = col_type(scalar, 0);

	xor	r8d, r8d
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0MH@?$tvec2@M$0A@@glm@@QEAA@MH@Z	; glm::tvec2<float,0>::tvec2<float,0><float,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 46   : 		this->value[1] = col_type(0, scalar);

	movss	xmm2, DWORD PTR scalar$[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HM@?$tvec2@M$0A@@glm@@QEAA@HM@Z	; glm::tvec2<float,0>::tvec2<float,0><int,float>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 47   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tmat2x2<float,0>::tmat2x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$tmat2x2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$tmat2x2@M$0A@@glm@@QEAA@XZ PROC			; glm::tmat2x2<float,0>::tmat2x2<float,0>, COMDAT

; 13   : 		{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 2
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 14   : #			ifndef GLM_FORCE_NO_CTOR_INIT 
; 15   : 				this->value[0] = col_type(1, 0);

	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 16   : 				this->value[1] = col_type(0, 1);

	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 17   : #			endif
; 18   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$tmat2x2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tmat2x2<float,0>::tmat2x2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
m$12 = 56
p$13 = 88
m$14 = 104
p$15 = 136
m$16 = 152
p$17 = 200
m$18 = 216
p$19 = 248
m$20 = 264
p$21 = 312
m$22 = 328
p$23 = 392
m$24 = 408
p$25 = 456
m$26 = 472
p$27 = 536
m$28 = 560
p$29 = 632
$T30 = 648
$T31 = 652
tv75 = 656
tv88 = 660
tv133 = 664
tv146 = 668
tv159 = 672
tv172 = 676
tv185 = 680
tv198 = 684
tv211 = 688
__$ArrayPad$ = 696
?test_value_ptr_mat@@YAHXZ PROC				; test_value_ptr_mat

; 82   : {

$LN21:
	push	rdi
	sub	rsp, 704				; 000002c0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 168				; 000000a8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 83   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 84   : 
; 85   : 	{
; 86   : 		glm::mat2x2 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$12[rsp]
	call	??0?$tmat2x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x2<float,0>::tmat2x2<float,0>

; 87   : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$12[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$13[rsp], rax

; 88   : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$12[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$13[rsp], rax
	jne	SHORT $LN3@test_value
	mov	DWORD PTR tv75[rsp], 0
	jmp	SHORT $LN4@test_value
$LN3@test_value:
	mov	DWORD PTR tv75[rsp], 1
$LN4@test_value:
	mov	eax, DWORD PTR tv75[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 89   : 	}
; 90   : 	{
; 91   : 		glm::mat2x3 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$14[rsp]
	call	??0?$tmat2x3@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x3<float,0>::tmat2x3<float,0>

; 92   : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$14[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$15[rsp], rax

; 93   : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$14[rsp]
	call	??A?$tmat2x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat2x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$15[rsp], rax
	jne	SHORT $LN5@test_value
	mov	DWORD PTR tv88[rsp], 0
	jmp	SHORT $LN6@test_value
$LN5@test_value:
	mov	DWORD PTR tv88[rsp], 1
$LN6@test_value:
	mov	eax, DWORD PTR tv88[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 94   : 	}
; 95   : 	{
; 96   : 		glm::mat2x4 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$16[rsp]
	call	??0?$tmat2x4@M$0A@@glm@@QEAA@M@Z	; glm::tmat2x4<float,0>::tmat2x4<float,0>

; 97   : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$16[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat2x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$17[rsp], rax

; 98   : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$16[rsp]
	call	??A?$tmat2x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat2x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$17[rsp], rax
	jne	SHORT $LN7@test_value
	mov	DWORD PTR tv133[rsp], 0
	jmp	SHORT $LN8@test_value
$LN7@test_value:
	mov	DWORD PTR tv133[rsp], 1
$LN8@test_value:
	mov	eax, DWORD PTR tv133[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 99   : 	}
; 100  : 	{
; 101  : 		glm::mat3x2 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$18[rsp]
	call	??0?$tmat3x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x2<float,0>::tmat3x2<float,0>

; 102  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$18[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$19[rsp], rax

; 103  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$18[rsp]
	call	??A?$tmat3x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat3x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$19[rsp], rax
	jne	SHORT $LN9@test_value
	mov	DWORD PTR tv146[rsp], 0
	jmp	SHORT $LN10@test_value
$LN9@test_value:
	mov	DWORD PTR tv146[rsp], 1
$LN10@test_value:
	mov	eax, DWORD PTR tv146[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 104  : 	}
; 105  : 	{
; 106  : 		glm::mat3x3 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$20[rsp]
	call	??0?$tmat3x3@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x3<float,0>::tmat3x3<float,0>

; 107  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$20[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$21[rsp], rax

; 108  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$20[rsp]
	call	??A?$tmat3x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat3x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$21[rsp], rax
	jne	SHORT $LN11@test_value
	mov	DWORD PTR tv159[rsp], 0
	jmp	SHORT $LN12@test_value
$LN11@test_value:
	mov	DWORD PTR tv159[rsp], 1
$LN12@test_value:
	mov	eax, DWORD PTR tv159[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 109  : 	}
; 110  : 	{
; 111  : 		glm::mat3x4 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$22[rsp]
	call	??0?$tmat3x4@M$0A@@glm@@QEAA@M@Z	; glm::tmat3x4<float,0>::tmat3x4<float,0>

; 112  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$22[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat3x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$23[rsp], rax

; 113  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$22[rsp]
	call	??A?$tmat3x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat3x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$23[rsp], rax
	jne	SHORT $LN13@test_value
	mov	DWORD PTR tv172[rsp], 0
	jmp	SHORT $LN14@test_value
$LN13@test_value:
	mov	DWORD PTR tv172[rsp], 1
$LN14@test_value:
	mov	eax, DWORD PTR tv172[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 114  : 	}
; 115  : 	{
; 116  : 		glm::mat4x2 m(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR m$24[rsp]
	call	??0?$tmat4x2@M$0A@@glm@@QEAA@M@Z	; glm::tmat4x2<float,0>::tmat4x2<float,0>

; 117  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$24[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$25[rsp], rax

; 118  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$24[rsp]
	call	??A?$tmat4x2@M$0A@@glm@@QEAAAEAU?$tvec2@M$0A@@1@H@Z ; glm::tmat4x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$25[rsp], rax
	jne	SHORT $LN15@test_value
	mov	DWORD PTR tv185[rsp], 0
	jmp	SHORT $LN16@test_value
$LN15@test_value:
	mov	DWORD PTR tv185[rsp], 1
$LN16@test_value:
	mov	eax, DWORD PTR tv185[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 119  : 	}
; 120  : 	{
; 121  : 		glm::mat4x3 m(1.0);

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T30[rsp], xmm0
	lea	rdx, QWORD PTR $T30[rsp]
	lea	rcx, QWORD PTR m$26[rsp]
	call	??0?$tmat4x3@M$0A@@glm@@QEAA@AEBM@Z	; glm::tmat4x3<float,0>::tmat4x3<float,0>

; 122  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$26[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$27[rsp], rax

; 123  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$26[rsp]
	call	??A?$tmat4x3@M$0A@@glm@@QEAAAEAU?$tvec3@M$0A@@1@H@Z ; glm::tmat4x3<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$27[rsp], rax
	jne	SHORT $LN17@test_value
	mov	DWORD PTR tv198[rsp], 0
	jmp	SHORT $LN18@test_value
$LN17@test_value:
	mov	DWORD PTR tv198[rsp], 1
$LN18@test_value:
	mov	eax, DWORD PTR tv198[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 124  : 	}
; 125  : 	{
; 126  : 		glm::mat4x4 m(1.0);

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR $T31[rsp], xmm0
	lea	rdx, QWORD PTR $T31[rsp]
	lea	rcx, QWORD PTR m$28[rsp]
	call	??0?$tmat4x4@M$0A@@glm@@QEAA@AEBM@Z	; glm::tmat4x4<float,0>::tmat4x4<float,0>

; 127  : 		float * p = glm::value_ptr(m);

	lea	rcx, QWORD PTR m$28[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tmat4x4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$29[rsp], rax

; 128  : 		Error += p == &m[0][0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR m$28[rsp]
	call	??A?$tmat4x4@M$0A@@glm@@QEAAAEAU?$tvec4@M$0A@@1@H@Z ; glm::tmat4x4<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$29[rsp], rax
	jne	SHORT $LN19@test_value
	mov	DWORD PTR tv211[rsp], 0
	jmp	SHORT $LN20@test_value
$LN19@test_value:
	mov	DWORD PTR tv211[rsp], 1
$LN20@test_value:
	mov	eax, DWORD PTR tv211[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 129  : 	}
; 130  : 
; 131  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 132  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_value_ptr_mat@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 704				; 000002c0H
	pop	rdi
	ret	0
?test_value_ptr_mat@@YAHXZ ENDP				; test_value_ptr_mat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
v$9 = 56
p$10 = 72
v$11 = 88
p$12 = 120
v$13 = 136
p$14 = 168
v$15 = 184
p$16 = 216
v$17 = 232
p$18 = 264
v$19 = 280
p$20 = 328
tv72 = 336
tv82 = 340
tv92 = 344
tv134 = 348
tv144 = 352
tv154 = 356
?test_value_ptr_vec_const@@YAHXZ PROC			; test_value_ptr_vec_const

; 43   : {

$LN15:
	push	rdi
	sub	rsp, 368				; 00000170H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 44   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 45   : 
; 46   : 	{
; 47   : 		glm::vec2 const v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$9[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 48   : 		float const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$9[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$10[rsp], rax

; 49   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$9[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$10[rsp], rax
	jne	SHORT $LN3@test_value
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN4@test_value
$LN3@test_value:
	mov	DWORD PTR tv72[rsp], 1
$LN4@test_value:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 50   : 	}
; 51   : 	{
; 52   : 		glm::vec3 const v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$11[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@M@Z		; glm::tvec3<float,0>::tvec3<float,0>

; 53   : 		float const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$11[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$12[rsp], rax

; 54   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$11[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$12[rsp], rax
	jne	SHORT $LN5@test_value
	mov	DWORD PTR tv82[rsp], 0
	jmp	SHORT $LN6@test_value
$LN5@test_value:
	mov	DWORD PTR tv82[rsp], 1
$LN6@test_value:
	mov	eax, DWORD PTR tv82[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 55   : 	}
; 56   : 	{
; 57   : 		glm::vec4 const v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$13[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 58   : 		float const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$13[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$14[rsp], rax

; 59   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$13[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$14[rsp], rax
	jne	SHORT $LN7@test_value
	mov	DWORD PTR tv92[rsp], 0
	jmp	SHORT $LN8@test_value
$LN7@test_value:
	mov	DWORD PTR tv92[rsp], 1
$LN8@test_value:
	mov	eax, DWORD PTR tv92[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 60   : 	}
; 61   : 
; 62   : 	{
; 63   : 		glm::dvec2 const v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$15[rsp]
	call	??0?$tvec2@N$0A@@glm@@QEAA@N@Z		; glm::tvec2<double,0>::tvec2<double,0>

; 64   : 		double const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$15[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$16[rsp], rax

; 65   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$15[rsp]
	call	??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec2<double,0>::operator[]
	cmp	QWORD PTR p$16[rsp], rax
	jne	SHORT $LN9@test_value
	mov	DWORD PTR tv134[rsp], 0
	jmp	SHORT $LN10@test_value
$LN9@test_value:
	mov	DWORD PTR tv134[rsp], 1
$LN10@test_value:
	mov	eax, DWORD PTR tv134[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 66   : 	}
; 67   : 	{
; 68   : 		glm::dvec3 const v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$17[rsp]
	call	??0?$tvec3@N$0A@@glm@@QEAA@N@Z		; glm::tvec3<double,0>::tvec3<double,0>

; 69   : 		double const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$17[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$18[rsp], rax

; 70   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$17[rsp]
	call	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec3<double,0>::operator[]
	cmp	QWORD PTR p$18[rsp], rax
	jne	SHORT $LN11@test_value
	mov	DWORD PTR tv144[rsp], 0
	jmp	SHORT $LN12@test_value
$LN11@test_value:
	mov	DWORD PTR tv144[rsp], 1
$LN12@test_value:
	mov	eax, DWORD PTR tv144[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 71   : 	}
; 72   : 	{
; 73   : 		glm::dvec4 const v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$19[rsp]
	call	??0?$tvec4@N$0A@@glm@@QEAA@N@Z		; glm::tvec4<double,0>::tvec4<double,0>

; 74   : 		double const * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$19[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$20[rsp], rax

; 75   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$19[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec4<double,0>::operator[]
	cmp	QWORD PTR p$20[rsp], rax
	jne	SHORT $LN13@test_value
	mov	DWORD PTR tv154[rsp], 0
	jmp	SHORT $LN14@test_value
$LN13@test_value:
	mov	DWORD PTR tv154[rsp], 1
$LN14@test_value:
	mov	eax, DWORD PTR tv154[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 76   : 	}
; 77   : 
; 78   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 79   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_value_ptr_vec_const@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 368				; 00000170H
	pop	rdi
	ret	0
?test_value_ptr_vec_const@@YAHXZ ENDP			; test_value_ptr_vec_const
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 62   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 63   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 64   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec4@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 74   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 75   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@N$0A@@glm@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@N$0A@@glm@@QEAA@N@Z PROC			; glm::tvec4<double,0>::tvec4<double,0>, COMDAT

; 188  : 	{}

$LN3:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+24], xmm0

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@N$0A@@glm@@QEAA@N@Z ENDP			; glm::tvec4<double,0>::tvec4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<double,0>::tvec4<double,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+24], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<double,0>::tvec4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec4<double,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@N$0A@@glm@@SAHXZ	; glm::tvec4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z PROC			; glm::tvec4<double,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@N$0A@@glm@@SAHXZ	; glm::tvec4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z ENDP			; glm::tvec4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@N$0A@@glm@@SAHXZ PROC			; glm::tvec4<double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 40   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 41   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 42   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec3@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 51   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 52   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 53   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@N$0A@@glm@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec3@N$0A@@glm@@QEAA@N@Z PROC			; glm::tvec3<double,0>::tvec3<double,0>, COMDAT

; 65   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(scalar), y(scalar), z(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 65   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@N$0A@@glm@@QEAA@N@Z ENDP			; glm::tvec3<double,0>::tvec3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<double,0>::tvec3<double,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<double,0>::tvec3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec3<double,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@N$0A@@glm@@SAHXZ	; glm::tvec3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z PROC			; glm::tvec3<double,0>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@N$0A@@glm@@SAHXZ	; glm::tvec3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z ENDP			; glm::tvec3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@N$0A@@glm@@SAHXZ PROC			; glm::tvec3<double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@N$0A@@glm@@SAHXZ ENDP			; glm::tvec3<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 18   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 19   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 20   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEBNAEBU?$tvec2@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z PROC ; glm::value_ptr<double,0>, COMDAT

; 29   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 30   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 31   : 	}

	pop	rdi
	ret	0
??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z ENDP ; glm::value_ptr<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@N$0A@@glm@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@N$0A@@glm@@QEAA@N@Z PROC			; glm::tvec2<double,0>::tvec2<double,0>, COMDAT

; 52   : 	{}

$LN3:
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movsd	xmm0, QWORD PTR scalar$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@N$0A@@glm@@QEAA@N@Z ENDP			; glm::tvec2<double,0>::tvec2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<double,0>::tvec2<double,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<double,0>::tvec2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec2<double,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@N$0A@@glm@@SAHXZ	; glm::tvec2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z PROC			; glm::tvec2<double,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@N$0A@@glm@@SAHXZ	; glm::tvec2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z ENDP			; glm::tvec2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@N$0A@@glm@@SAHXZ PROC			; glm::tvec2<double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 62   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 63   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 64   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 73   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 74   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 75   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 193  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 188  : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$0A@@glm@@SAHXZ PROC			; glm::tvec4<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$0A@@glm@@SAHXZ ENDP			; glm::tvec4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 40   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 41   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 42   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 51   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 52   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 53   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec3@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 65   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(scalar), y(scalar), z(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 65   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$0A@@glm@@SAHXZ PROC			; glm::tvec3<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$0A@@glm@@SAHXZ ENDP			; glm::tvec3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 18   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 19   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 20   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEBMAEBU?$tvec2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\type_ptr.inl
;	COMDAT ??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z
_TEXT	SEGMENT
vec$ = 16
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z PROC ; glm::value_ptr<float,0>, COMDAT

; 29   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 30   : 		return &(vec.x);

	mov	rax, QWORD PTR vec$[rsp]

; 31   : 	}

	pop	rdi
	ret	0
??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z ENDP ; glm::value_ptr<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 52   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$0A@@glm@@SAHXZ PROC			; glm::tvec2<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$0A@@glm@@SAHXZ ENDP			; glm::tvec2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_type_ptr.cpp
_TEXT	SEGMENT
Error$ = 32
v$9 = 56
p$10 = 72
v$11 = 88
p$12 = 120
v$13 = 136
p$14 = 168
v$15 = 184
p$16 = 216
v$17 = 232
p$18 = 264
v$19 = 280
p$20 = 328
tv72 = 336
tv82 = 340
tv92 = 344
tv134 = 348
tv144 = 352
tv154 = 356
?test_value_ptr_vec@@YAHXZ PROC				; test_value_ptr_vec

; 4    : {

$LN15:
	push	rdi
	sub	rsp, 368				; 00000170H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5    : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 6    : 
; 7    : 	{
; 8    : 		glm::vec2 v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$9[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 9    : 		float * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$9[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec2@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$10[rsp], rax

; 10   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$9[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec2<float,0>::operator[]
	cmp	QWORD PTR p$10[rsp], rax
	jne	SHORT $LN3@test_value
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN4@test_value
$LN3@test_value:
	mov	DWORD PTR tv72[rsp], 1
$LN4@test_value:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 11   : 	}
; 12   : 	{
; 13   : 		glm::vec3 v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$11[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@M@Z		; glm::tvec3<float,0>::tvec3<float,0>

; 14   : 		float * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$11[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec3@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$12[rsp], rax

; 15   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$11[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec3<float,0>::operator[]
	cmp	QWORD PTR p$12[rsp], rax
	jne	SHORT $LN5@test_value
	mov	DWORD PTR tv82[rsp], 0
	jmp	SHORT $LN6@test_value
$LN5@test_value:
	mov	DWORD PTR tv82[rsp], 1
$LN6@test_value:
	mov	eax, DWORD PTR tv82[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 16   : 	}
; 17   : 	{
; 18   : 		glm::vec4 v(1.0);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR v$13[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 19   : 		float * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$13[rsp]
	call	??$value_ptr@M$0A@@glm@@YAPEAMAEAU?$tvec4@M$0A@@0@@Z ; glm::value_ptr<float,0>
	mov	QWORD PTR p$14[rsp], rax

; 20   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$13[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEAAAEAMH@Z	; glm::tvec4<float,0>::operator[]
	cmp	QWORD PTR p$14[rsp], rax
	jne	SHORT $LN7@test_value
	mov	DWORD PTR tv92[rsp], 0
	jmp	SHORT $LN8@test_value
$LN7@test_value:
	mov	DWORD PTR tv92[rsp], 1
$LN8@test_value:
	mov	eax, DWORD PTR tv92[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 21   : 	}
; 22   : 
; 23   : 	{
; 24   : 		glm::dvec2 v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$15[rsp]
	call	??0?$tvec2@N$0A@@glm@@QEAA@N@Z		; glm::tvec2<double,0>::tvec2<double,0>

; 25   : 		double * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$15[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec2@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$16[rsp], rax

; 26   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$15[rsp]
	call	??A?$tvec2@N$0A@@glm@@QEAAAEANH@Z	; glm::tvec2<double,0>::operator[]
	cmp	QWORD PTR p$16[rsp], rax
	jne	SHORT $LN9@test_value
	mov	DWORD PTR tv134[rsp], 0
	jmp	SHORT $LN10@test_value
$LN9@test_value:
	mov	DWORD PTR tv134[rsp], 1
$LN10@test_value:
	mov	eax, DWORD PTR tv134[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 27   : 	}
; 28   : 	{
; 29   : 		glm::dvec3 v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$17[rsp]
	call	??0?$tvec3@N$0A@@glm@@QEAA@N@Z		; glm::tvec3<double,0>::tvec3<double,0>

; 30   : 		double * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$17[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec3@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$18[rsp], rax

; 31   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$17[rsp]
	call	??A?$tvec3@N$0A@@glm@@QEAAAEANH@Z	; glm::tvec3<double,0>::operator[]
	cmp	QWORD PTR p$18[rsp], rax
	jne	SHORT $LN11@test_value
	mov	DWORD PTR tv144[rsp], 0
	jmp	SHORT $LN12@test_value
$LN11@test_value:
	mov	DWORD PTR tv144[rsp], 1
$LN12@test_value:
	mov	eax, DWORD PTR tv144[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 32   : 	}
; 33   : 	{
; 34   : 		glm::dvec4 v(1.0);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR v$19[rsp]
	call	??0?$tvec4@N$0A@@glm@@QEAA@N@Z		; glm::tvec4<double,0>::tvec4<double,0>

; 35   : 		double * p = glm::value_ptr(v);

	lea	rcx, QWORD PTR v$19[rsp]
	call	??$value_ptr@N$0A@@glm@@YAPEANAEAU?$tvec4@N$0A@@0@@Z ; glm::value_ptr<double,0>
	mov	QWORD PTR p$20[rsp], rax

; 36   : 		Error += p == &v[0] ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR v$19[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEAAAEANH@Z	; glm::tvec4<double,0>::operator[]
	cmp	QWORD PTR p$20[rsp], rax
	jne	SHORT $LN13@test_value
	mov	DWORD PTR tv154[rsp], 0
	jmp	SHORT $LN14@test_value
$LN13@test_value:
	mov	DWORD PTR tv154[rsp], 1
$LN14@test_value:
	mov	eax, DWORD PTR tv154[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 37   : 	}
; 38   : 
; 39   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 40   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_value_ptr_vec@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 368				; 00000170H
	pop	rdi
	ret	0
?test_value_ptr_vec@@YAHXZ ENDP				; test_value_ptr_vec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
tv67 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN5@vector
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN6@vector
$LN5@vector:
	mov	DWORD PTR tv67[rsp], 0
$LN6@vector:
	cmp	DWORD PTR tv67[rsp], 0
	je	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
