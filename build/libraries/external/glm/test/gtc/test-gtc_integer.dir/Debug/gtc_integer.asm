; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG67078 DB	'invalid argument', 00H
	ORG $+3
$SG67079 DB	'%s', 00H
	ORG $+1
$SG67083 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG67080 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.32.31326\include\xmemory', 00H
	ORG $+2
$SG67082 DB	00H, 00H
	ORG $+2
$SG61984 DB	'glm::log2<ivec4> inlined: %ld clocks', 0aH, 00H
	ORG $+2
$SG67081 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '3', 00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+4
$SG61982 DB	'glm::log2<int>: %ld clocks', 0aH, 00H
	ORG $+4
$SG61983 DB	'glm::log2<ivec4>: %ld clocks', 0aH, 00H
	ORG $+2
$SG61985 DB	'glm::log2<ivec4> inlined no cast: %ld clocks', 0aH, 00H
	ORG $+2
$SG61986 DB	'glm::log2<ivec4> reinterpret: %ld clocks', 0aH, 00H
	ORG $+6
$SG61987 DB	'glm::log2<float>: %ld clocks', 0aH, 00H
	ORG $+2
$SG61988 DB	'glm::log2<vec4>: %ld clocks', 0aH, 00H
	ORG $+11
$SG62008 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H
	DB	'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e'
	DB	00H, 's', 00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B'
	DB	00H, 'i', 00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H
	DB	'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's'
	DB	00H, '\', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm'
	DB	00H, '\', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, '\', 00H
	DB	'g', 00H, 't', 00H, 'c', 00H, '\', 00H, 'g', 00H, 't', 00H, 'c'
	DB	00H, '_', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG62009 DB	'!', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+10
$SG62027 DB	'C', 00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H
	DB	'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e'
	DB	00H, 's', 00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B'
	DB	00H, 'i', 00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H
	DB	'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's'
	DB	00H, '\', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm'
	DB	00H, '\', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, '\', 00H
	DB	'g', 00H, 't', 00H, 'c', 00H, '\', 00H, 'g', 00H, 't', 00H, 'c'
	DB	00H, '_', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H
	DB	'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG62028 DB	'!', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	00H, 00H
CONST	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?log2@@YAMM@Z					; log2
PUBLIC	?round@@YAMM@Z					; round
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@M@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@XZ			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@M@Z			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z		; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?test@log2_@@YAHXZ				; log2_::test
PUBLIC	??$log2@M@glm@@YAMM@Z				; glm::log2<float>
PUBLIC	??0?$tvec1@M$0A@@glm@@QEAA@M@Z			; glm::tvec1<float,0>::tvec1<float,0>
PUBLIC	??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec1>
PUBLIC	?length@?$tvec1@H$0A@@glm@@SAHXZ		; glm::tvec1<int,0>::length
PUBLIC	??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec1<int,0>::operator[]
PUBLIC	??0?$tvec1@H$0A@@glm@@QEAA@H@Z			; glm::tvec1<int,0>::tvec1<int,0>
PUBLIC	??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z ; glm::tvec1<int,0>::tvec1<int,0><float,0>
PUBLIC	??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec2>
PUBLIC	?length@?$tvec2@H$0A@@glm@@SAHXZ		; glm::tvec2<int,0>::length
PUBLIC	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec2<int,0>::operator[]
PUBLIC	??0?$tvec2@H$0A@@glm@@QEAA@H@Z			; glm::tvec2<int,0>::tvec2<int,0>
PUBLIC	??0?$tvec2@H$0A@@glm@@QEAA@HH@Z			; glm::tvec2<int,0>::tvec2<int,0>
PUBLIC	??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<int,0>::tvec2<int,0><float,0>
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@M@Z			; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z		; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec3>
PUBLIC	?length@?$tvec3@H$0A@@glm@@SAHXZ		; glm::tvec3<int,0>::length
PUBLIC	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec3<int,0>::operator[]
PUBLIC	??0?$tvec3@H$0A@@glm@@QEAA@H@Z			; glm::tvec3<int,0>::tvec3<int,0>
PUBLIC	??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<int,0>::tvec3<int,0>
PUBLIC	??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<int,0>::tvec3<int,0><float,0>
PUBLIC	??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec4>
PUBLIC	?length@?$tvec4@H$0A@@glm@@SAHXZ		; glm::tvec4<int,0>::length
PUBLIC	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec4<int,0>::operator[]
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@XZ			; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@H@Z			; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z		; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<int,0>::tvec4<int,0><float,0>
PUBLIC	??$log2@H@glm@@YAHH@Z				; glm::log2<int>
PUBLIC	??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec1>
PUBLIC	??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec2>
PUBLIC	??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec3>
PUBLIC	??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec4>
PUBLIC	??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec1>
PUBLIC	?length@?$tvec1@_N$0A@@glm@@SAHXZ		; glm::tvec1<bool,0>::length
PUBLIC	??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec1<bool,0>::operator[]
PUBLIC	??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec1<bool,0>::operator[]
PUBLIC	??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec1<bool,0>::tvec1<bool,0>
PUBLIC	??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z ; glm::all<0,glm::tvec1>
PUBLIC	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
PUBLIC	?length@?$tvec2@_N$0A@@glm@@SAHXZ		; glm::tvec2<bool,0>::length
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec2<bool,0>::tvec2<bool,0>
PUBLIC	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
PUBLIC	??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec3>
PUBLIC	?length@?$tvec3@_N$0A@@glm@@SAHXZ		; glm::tvec3<bool,0>::length
PUBLIC	??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec3<bool,0>::operator[]
PUBLIC	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec3<bool,0>::operator[]
PUBLIC	??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec3<bool,0>::tvec3<bool,0>
PUBLIC	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
PUBLIC	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
PUBLIC	?length@?$tvec4@_N$0A@@glm@@SAHXZ		; glm::tvec4<bool,0>::length
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
PUBLIC	??$log2@_K@glm@@YA_K_K@Z			; glm::log2<unsigned __int64>
PUBLIC	?length@?$tvec1@_K$0A@@glm@@SAHXZ		; glm::tvec1<unsigned __int64,0>::length
PUBLIC	??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z		; glm::tvec1<unsigned __int64,0>::operator[]
PUBLIC	??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z		; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>
PUBLIC	??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec1>
PUBLIC	?length@?$tvec2@_K$0A@@glm@@SAHXZ		; glm::tvec2<unsigned __int64,0>::length
PUBLIC	??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z		; glm::tvec2<unsigned __int64,0>::operator[]
PUBLIC	??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z		; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0>
PUBLIC	??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec2>
PUBLIC	?length@?$tvec3@_K$0A@@glm@@SAHXZ		; glm::tvec3<unsigned __int64,0>::length
PUBLIC	??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z		; glm::tvec3<unsigned __int64,0>::operator[]
PUBLIC	??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z		; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0>
PUBLIC	??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec3>
PUBLIC	?length@?$tvec4@_K$0A@@glm@@SAHXZ		; glm::tvec4<unsigned __int64,0>::length
PUBLIC	??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z		; glm::tvec4<unsigned __int64,0>::operator[]
PUBLIC	??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z		; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0>
PUBLIC	??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec4>
PUBLIC	??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec1>
PUBLIC	??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec2>
PUBLIC	??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec3>
PUBLIC	??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec4>
PUBLIC	?perf@log2_@@YAH_K@Z				; log2_::perf
PUBLIC	??0?$allocator@H@std@@QEAA@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z	; std::allocator<int>::deallocate
PUBLIC	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z	; std::allocator<int>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z ; std::vector<int,std::allocator<int> >::operator[]
PUBLIC	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<int,0> >::allocator<glm::tvec4<int,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
PUBLIC	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
PUBLIC	?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize
PUBLIC	?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::capacity
PUBLIC	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
PUBLIC	?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first
PUBLIC	??0?$tvec4@K$0A@@glm@@QEAA@XZ			; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>
PUBLIC	??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>
PUBLIC	??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z ; glm::tvec4<int,0>::tvec4<int,0><unsigned long,0>
PUBLIC	??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<unsigned long,0> >::allocator<glm::tvec4<unsigned long,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::resize
PUBLIC	?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::capacity
PUBLIC	??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
PUBLIC	?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first
PUBLIC	??0?$allocator@M@std@@QEAA@XZ			; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z	; std::allocator<float>::deallocate
PUBLIC	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z	; std::allocator<float>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::_Default_allocator_traits<std::allocator<float> >::max_size
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z ; std::vector<float,std::allocator<float> >::resize
PUBLIC	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
PUBLIC	?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::capacity
PUBLIC	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
PUBLIC	?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z ; std::vector<float,std::allocator<float> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z ; std::vector<float,std::allocator<float> >::_Change_array
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ; std::vector<float,std::allocator<float> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
PUBLIC	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
PUBLIC	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::resize
PUBLIC	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
PUBLIC	??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
PUBLIC	?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	?test@iround@@YAHXZ				; iround::test
PUBLIC	??$iround@M@glm@@YAHM@Z				; glm::iround<float>
PUBLIC	?test@uround@@YAHXZ				; uround::test
PUBLIC	??$uround@M@glm@@YAIM@Z				; glm::uround<float>
PUBLIC	main
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<float,std::allocator<float> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<unsigned long,0> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<int,0> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec1,1,0>::call
PUBLIC	?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec2,1,0>::call
PUBLIC	?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec3,1,0>::call
PUBLIC	?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec4,1,0>::call
PUBLIC	?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec1,0,0>::call
PUBLIC	?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec2,0,0>::call
PUBLIC	?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec3,0,0>::call
PUBLIC	?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
PUBLIC	?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec1,0,0>::call
PUBLIC	?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec2,0,0>::call
PUBLIC	?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec3,0,0>::call
PUBLIC	?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec4,0,0>::call
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<float> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
PUBLIC	?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec4,64>::call
PUBLIC	??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z ; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0><int,0>
PUBLIC	?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec3,64>::call
PUBLIC	??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z ; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0><int,0>
PUBLIC	?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec2,64>::call
PUBLIC	??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0><int,0>
PUBLIC	?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec1,64>::call
PUBLIC	??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z ; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0><int,0>
PUBLIC	?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec3,32>::call
PUBLIC	?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec2,32>::call
PUBLIC	?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec1,32>::call
PUBLIC	?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec4>::call
PUBLIC	?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec3>::call
PUBLIC	?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec2>::call
PUBLIC	?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec1>::call
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec1>::call
PUBLIC	??$compute_findMSB_32@H@detail@glm@@YAHH@Z	; glm::detail::compute_findMSB_32<int>
PUBLIC	?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec2>::call
PUBLIC	?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec3>::call
PUBLIC	?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec1>::call
PUBLIC	??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z	; glm::detail::compute_findMSB_64<unsigned __int64>
PUBLIC	?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec2>::call
PUBLIC	?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec3>::call
PUBLIC	?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec4>::call
PUBLIC	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z ; std::_Uninitialized_move<float *,std::allocator<float> >
PUBLIC	??$_Unfancy@M@std@@YAPEAMPEAM@Z			; std::_Unfancy<float>
PUBLIC	??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z		; std::_Zero_range<float *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z ; std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ ; std::_Uninitialized_backout_al<std::allocator<float> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
PUBLIC	??$_Unfancy@H@std@@YAPEAHPEAH@Z			; std::_Unfancy<int>
PUBLIC	??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z		; std::_Zero_range<int *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
PUBLIC	??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<float,0> &>
PUBLIC	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
PUBLIC	??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>
PUBLIC	??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >
PUBLIC	??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z	; std::_Get_unwrapped<float * const &>
PUBLIC	??$move@AEAM@std@@YA$$QEAMAEAM@Z		; std::move<float &>
PUBLIC	??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z	; std::_Copy_memmove<float *,float *>
PUBLIC	??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<float>
PUBLIC	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z	; std::_To_address<float *>
PUBLIC	??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z ; std::_Default_allocator_traits<std::allocator<float> >::construct<float>
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<unsigned long,0> * const &>
PUBLIC	??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<unsigned long,0> &>
PUBLIC	??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<unsigned long,0> >
PUBLIC	??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<unsigned long,0> *,glm::tvec4<unsigned long,0> *>
PUBLIC	??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<glm::tvec4<unsigned long,0> >
PUBLIC	??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<int,0> * const &>
PUBLIC	??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<int,0> &>
PUBLIC	??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<int,0> >
PUBLIC	??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<int,0> *,glm::tvec4<int,0> *>
PUBLIC	??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<glm::tvec4<int,0> >
PUBLIC	??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z	; std::_Get_unwrapped<int * const &>
PUBLIC	??$move@AEAH@std@@YA$$QEAHAEAH@Z		; std::move<int &>
PUBLIC	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>
PUBLIC	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z	; std::_To_address<int *>
PUBLIC	??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>
PUBLIC	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
PUBLIC	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
PUBLIC	??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
PUBLIC	??$forward@M@std@@YA$$QEAMAEAM@Z		; std::forward<float>
PUBLIC	??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z ; std::_Default_allocator_traits<std::allocator<float> >::construct<float,float>
PUBLIC	??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z		; std::_Voidify_iter<float *>
PUBLIC	??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_To_address<glm::tvec4<unsigned long,0> *>
PUBLIC	??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<unsigned long,0> >
PUBLIC	??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0>,glm::tvec4<unsigned long,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<unsigned long,0> *>
PUBLIC	??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_To_address<glm::tvec4<int,0> *>
PUBLIC	??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<int,0> >
PUBLIC	??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0>,glm::tvec4<int,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<int,0> *>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
PUBLIC	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z		; std::_Voidify_iter<int *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ ; `string'
PUBLIC	??_C@_1KM@JMCMAPOB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DO@OLOPJHDM@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAg?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@40466666
PUBLIC	__real@41800000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__wassert:PROC
EXTRN	__imp_log2f:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_clock:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	roundf:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+131
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?log2@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?log2@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?round@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?round@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+107
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test@log2_@@YAHXZ DD imagerel $LN23
	DD	imagerel $LN23+1446
	DD	imagerel $unwind$?test@log2_@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@M@glm@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$log2@M@glm@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec1@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??0?$tvec1@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec1@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec1@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec1@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??0?$tvec1@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??0?$tvec2@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$tvec3@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@H@glm@@YAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$log2@H@glm@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+264
	DD	imagerel $unwind$??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec1@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec1@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+265
	DD	imagerel $unwind$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+277
	DD	imagerel $unwind$??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+263
	DD	imagerel $unwind$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@_K@glm@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$log2@_K@glm@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec1@_K$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec1@_K$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_K$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_K$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_K$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_K$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_K$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_K$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+266
	DD	imagerel $unwind$??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+267
	DD	imagerel $unwind$??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+279
	DD	imagerel $unwind$??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+265
	DD	imagerel $unwind$??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?perf@log2_@@YAH_K@Z DD imagerel $LN33
	DD	imagerel $LN33+1922
	DD	imagerel $unwind$?perf@log2_@@YAH_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA
$pdata$?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA DD imagerel ?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA
	DD	imagerel ?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@H@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@H@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD imagerel $LN13
	DD	imagerel $LN13+183
	DD	imagerel $unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z DD imagerel $LN12
	DD	imagerel $LN12+200
	DD	imagerel $unwind$??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+246
	DD	imagerel $unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@K$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0?$tvec4@K$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@M@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@M@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z DD imagerel $LN13
	DD	imagerel $LN13+183
	DD	imagerel $unwind$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD imagerel $LN12
	DD	imagerel $LN12+200
	DD	imagerel $unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+246
	DD	imagerel $unwind$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test@iround@@YAHXZ DD imagerel $LN9
	DD	imagerel $LN9+188
	DD	imagerel $unwind$?test@iround@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$iround@M@glm@@YAHM@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??$iround@M@glm@@YAHM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test@uround@@YAHXZ DD imagerel $LN9
	DD	imagerel $LN9+188
	DD	imagerel $unwind$?test@uround@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$uround@M@glm@@YAIM@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??$uround@M@glm@@YAIM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+362
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+362
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+162
	DD	imagerel $unwind$?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+336
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+333
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+215
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+336
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+336
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+333
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+215
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$compute_findMSB_32@H@detail@glm@@YAHH@Z DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$??$compute_findMSB_32@H@detail@glm@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+278
	DD	imagerel $unwind$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@M@std@@YAPEAMPEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@M@std@@YAPEAMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+278
	DD	imagerel $unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAM@std@@YA$$QEAMAEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAM@std@@YA$$QEAMAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@M@std@@YA$$QEAMAEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@M@std@@YA$$QEAMAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z
pdata	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@40466666
CONST	SEGMENT
__real@40466666 DD 040466666r			; 3.1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'1', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@OLOPJHDM@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAg?$AAe?$AAn@
CONST	SEGMENT
??_C@_1DO@OLOPJHDM@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAg?$AAe?$AAn@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	'c', 00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'g', 00H, 'e'
	DB	00H, 'n', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '>', 00H
	DB	'(', 00H, '0', 00H, '.', 00H, '0', 00H, ')', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KM@JMCMAPOB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1KM@JMCMAPOB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'g', 00H, 't', 00H
	DB	'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'g'
	DB	00H, 'e', 00H, 'r', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
CONST	SEGMENT
??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ DB 'x'
	DB	00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'y', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 'f', 00H, 'u'
	DB	00H, 'n', 00H, 'c', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H
	DB	'l', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@M@std@@YA$$QEAMAEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAM@std@@YA$$QEAMAEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<int *,std::allocator<int> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<int *,std::allocator<int> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<int *,std::allocator<int> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@M@std@@YAPEAMPEAM@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<float *,std::allocator<float> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<float *,std::allocator<float> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<float *,std::allocator<float> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcName$0 DB 052H ; glm::detail::compute_findMSB_64<unsigned __int64>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcVarDesc DD 024H ; glm::detail::compute_findMSB_64<unsigned __int64>
	DD	04H
	DQ	FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcName$0
	ORG $+48
??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcFrameData DD 01H ; glm::detail::compute_findMSB_64<unsigned __int64>
	DD	00H
	DQ	FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$compute_findMSB_32@H@detail@glm@@YAHH@Z DD 021e01H
	DD	070057209H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcName$0 DB 052H ; glm::detail::compute_findMSB_32<int>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcVarDesc DD 024H ; glm::detail::compute_findMSB_32<int>
	DD	04H
	DQ	FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcName$0
	ORG $+48
??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcFrameData DD 01H ; glm::detail::compute_findMSB_32<int>
	DD	00H
	DQ	FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD 022a11H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'I', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DD 022a11H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'I', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z DD 032601H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcName$0 DB 052H ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcVarDesc DD 028H ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
	DD	010H
	DQ	FLAT:?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcName$0
	ORG $+48
?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcFrameData DD 01H ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$uround@M@glm@@YAIM@Z DD 020b01H
	DD	07007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$iround@M@glm@@YAHM@Z DD 020b01H
	DD	07007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcName$0 DB 05fH ; std::vector<float,std::allocator<float> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcVarDesc DD 024H ; std::vector<float,std::allocator<float> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcFrameData DD 01H ; std::vector<float,std::allocator<float> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	DD	01H
	DQ	FLAT:??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	DD	00H
	DQ	FLAT:??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@M@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@K$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	DB	053H
	DB	034H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0 DB 05fH ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc DD 024H ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	01H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	00H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@H@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA
	DD	00H
	DD	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<unsigned __int64,0,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<unsigned __int64,0,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<unsigned __int64,0,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<unsigned __int64,0,glm::tvec3>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<unsigned __int64,0,glm::tvec3>
	DD	03H
	DQ	FLAT:??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<unsigned __int64,0,glm::tvec3>
	DD	00H
	DQ	FLAT:??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<unsigned __int64,0,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<unsigned __int64,0,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<unsigned __int64,0,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<unsigned __int64,0,glm::tvec1>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<unsigned __int64,0,glm::tvec1>
	DD	01H
	DQ	FLAT:??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<unsigned __int64,0,glm::tvec1>
	DD	00H
	DQ	FLAT:??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_K$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_K$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_K$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec1@_K$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@_K@glm@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec3>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec3>
	DD	03H
	DQ	FLAT:??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec3>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec1@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec1>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec1>
	DD	01H
	DQ	FLAT:??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec1>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@H@glm@@YAHH@Z DD 020901H
	DD	070055209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec1@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec1@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec1@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$log2@M@glm@@YAMM@Z DD 020b01H
	DD	07007720bH
xdata	ENDS
xdata	SEGMENT
$unwind$?test@log2_@@YAHXZ DD 031a01H
	DD	0720109H
	DD	07002H
$unwind$?perf@log2_@@YAH_K@Z DD 042711H
	DD	05b010eH
	DD	060067007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?perf@log2_@@YAH_K@Z
$cppxdata$?perf@log2_@@YAH_K@Z DB 028H
	DD	imagerel $stateUnwindMap$?perf@log2_@@YAH_K@Z
	DD	imagerel $ip2state$?perf@log2_@@YAH_K@Z
$stateUnwindMap$?perf@log2_@@YAH_K@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA
	DB	0aeH
	DD	imagerel ?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA
	DB	0d6H
	DD	imagerel ?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA
	DB	0feH
	DD	imagerel ?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA
$ip2state$?perf@log2_@@YAH_K@Z DB 01eH
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'=', 02H
	DB	00H
	DB	'*'
	DB	04H
	DB	'I', 03H
	DB	00H
	DB	'0'
	DB	06H
	DB	099H, 04H
	DB	00H
	DB	'6'
	DB	08H
	DB	'q', 04H
	DB	00H
	DB	'6'
	DB	0aH
	DB	'q', 04H
	DB	00H
	DB	'6'
	DB	0cH
	DB	095H, 03H
	DB	00H
	DB	'6'
	DB	0eH
	DB	'u', 03H
	DB	00H
	ORG $+1
$unwind$?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?test@iround@@YAHXZ DD 020601H
	DD	070027206H
$unwind$?test@uround@@YAHXZ DD 020601H
	DD	070027206H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?test@log2_@@YAHXZ$rtcName$0 DB 042H			; log2_::test
	DB	030H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$1 DB 043H			; log2_::test
	DB	030H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$2 DB 044H			; log2_::test
	DB	030H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$3 DB 045H			; log2_::test
	DB	030H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$4 DB 042H			; log2_::test
	DB	031H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$5 DB 043H			; log2_::test
	DB	031H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$6 DB 044H			; log2_::test
	DB	031H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$7 DB 045H			; log2_::test
	DB	031H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$8 DB 042H			; log2_::test
	DB	032H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$9 DB 043H			; log2_::test
	DB	032H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$10 DB 044H			; log2_::test
	DB	032H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcName$11 DB 045H			; log2_::test
	DB	032H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcFrameData DD 0cH			; log2_::test
	DD	00H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcVarDesc
?perf@log2_@@YAH_K@Z$rtcName$0 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?test@log2_@@YAHXZ$rtcVarDesc DD 01f8H			; log2_::test
	DD	020H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$11
	DD	01c8H
	DD	018H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$10
	DD	0198H
	DD	010H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$9
	DD	0178H
	DD	08H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$8
	DD	0148H
	DD	010H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$7
	DD	0118H
	DD	0cH
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$6
	DD	0f8H
	DD	08H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$5
	DD	0d4H
	DD	04H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$4
	DD	0a8H
	DD	010H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$3
	DD	078H
	DD	0cH
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?test@log2_@@YAHXZ$rtcName$0
	ORG $+576
?perf@log2_@@YAH_K@Z$rtcName$1 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?perf@log2_@@YAH_K@Z$rtcName$2 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?perf@log2_@@YAH_K@Z$rtcName$3 DB 054H			; log2_::perf
	DB	06dH
	DB	070H
	DB	00H
?perf@log2_@@YAH_K@Z$rtcName$4 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?perf@log2_@@YAH_K@Z$rtcName$5 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?perf@log2_@@YAH_K@Z$rtcName$6 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?perf@log2_@@YAH_K@Z$rtcName$7 DB 052H			; log2_::perf
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+5
?perf@log2_@@YAH_K@Z$rtcFrameData DD 08H		; log2_::perf
	DD	00H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcVarDesc
	ORG $+8
?perf@log2_@@YAH_K@Z$rtcVarDesc DD 0218H		; log2_::perf
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$7
	DD	01c8H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$6
	DD	0178H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$5
	DD	0128H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$4
	DD	0f8H
	DD	010H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$3
	DD	0b8H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?perf@log2_@@YAH_K@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?round@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?log2@@YAMM@Z DD 020b01H
	DD	07007520bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 022f01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
printf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
printf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:printf$rtcName$0
	ORG $+48
printf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:printf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z PROC		; std::_Voidify_iter<int *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z ENDP		; std::_Voidify_iter<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z	; std::_Voidify_iter<int *>
	mov	rdx, rax
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@H@std@@YA$$QEAHAEAH@Z	; std::forward<int>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<int,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<int,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0>,glm::tvec4<int,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<int,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<int,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0>,glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec4<int,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<int,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<int,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<unsigned long,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<unsigned long,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0>,glm::tvec4<unsigned long,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<unsigned long,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<unsigned long,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0>,glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec4<unsigned long,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<unsigned long,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<unsigned long,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z PROC		; std::_Voidify_iter<float *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z ENDP		; std::_Voidify_iter<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z PROC ; std::_Default_allocator_traits<std::allocator<float> >::construct<float,float>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z	; std::_Voidify_iter<float *>
	mov	rdx, rax
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	rcx, QWORD PTR $T1[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx], xmm0

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z ENDP ; std::_Default_allocator_traits<std::allocator<float> >::construct<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QEAMAEAM@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@M@std@@YA$$QEAMAEAM@Z PROC			; std::forward<float>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@M@std@@YA$$QEAMAEAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<float,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec4<float,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<float,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__formal$ = 64
_Ptr$ = 72
??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], 4
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z	; std::_Voidify_iter<int *>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T2[rsp], rax
	mov	rdi, QWORD PTR $T2[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR $T1[rsp]
	rep stosb

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z PROC		; std::_To_address<int *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ENDP		; std::_To_address<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@H@std@@YA$$QEAHAEAH@Z	; std::forward<int>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z PROC	; std::_Copy_memmove<int *,int *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ENDP	; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAH@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAH@std@@YA$$QEAHAEAH@Z PROC			; std::move<int &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAH@std@@YA$$QEAHAEAH@Z ENDP			; std::move<int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z PROC	; std::_Get_unwrapped<int * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ENDP	; std::_Get_unwrapped<int * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@H$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@H$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<int,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@XZ		; glm::tvec4<int,0>::tvec4<int,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<glm::tvec4<int,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<int,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<int,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@H$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0>,glm::tvec4<int,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec4<int,0> *,glm::tvec4<int,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_To_address<glm::tvec4<int,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_To_address<glm::tvec4<int,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@H$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_To_address<glm::tvec4<int,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec4<int,0> *,glm::tvec4<int,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<int,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec4<int,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec4<int,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<int,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<int,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@K$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@K$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<unsigned long,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@K$0A@@glm@@QEAA@XZ		; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<glm::tvec4<unsigned long,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<unsigned long,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<unsigned long,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@K$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0>,glm::tvec4<unsigned long,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec4<unsigned long,0> *,glm::tvec4<unsigned long,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_To_address<glm::tvec4<unsigned long,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_To_address<glm::tvec4<unsigned long,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@K$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_To_address<glm::tvec4<unsigned long,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec4<unsigned long,0> *,glm::tvec4<unsigned long,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<unsigned long,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec4<unsigned long,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec4<unsigned long,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<unsigned long,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<unsigned long,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__formal$ = 64
_Ptr$ = 72
??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z PROC ; std::_Default_allocator_traits<std::allocator<float> >::construct<float>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], 4
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z	; std::_Voidify_iter<float *>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T2[rsp], rax
	mov	rdi, QWORD PTR $T2[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR $T1[rsp]
	rep stosb

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z ENDP ; std::_Default_allocator_traits<std::allocator<float> >::construct<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z PROC		; std::_To_address<float *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ENDP		; std::_To_address<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z PROC ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<float>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@MM@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM$$QEAM@Z ; std::_Default_allocator_traits<std::allocator<float> >::construct<float,float>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z PROC	; std::_Copy_memmove<float *,float *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z ENDP	; std::_Copy_memmove<float *,float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAM@std@@YA$$QEAMAEAM@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAM@std@@YA$$QEAMAEAM@Z PROC			; std::move<float &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAM@std@@YA$$QEAMAEAM@Z ENDP			; std::move<float &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z PROC	; std::_Get_unwrapped<float * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z ENDP	; std::_Get_unwrapped<float * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<float,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec4<float,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec4<float,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 2
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 67   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 130  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG67078
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG67079
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 135				; 00000087H
	lea	rdx, OFFSET FLAT:$SG67080
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 135				; 00000087H
	lea	r8, OFFSET FLAT:$SG67081
	lea	rdx, OFFSET FLAT:$SG67082
	lea	rcx, OFFSET FLAT:$SG67083
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 143  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_First$ = 64
_Last$ = 72
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z PROC		; std::_Zero_range<int *>, COMDAT

; 1824 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1825 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _First_ch$[rsp], rax

; 1826 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _Last_ch$[rsp], rax

; 1827 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR _First_ch$[rsp]
	call	memset

; 1828 :     return _Last;

	mov	rax, QWORD PTR _Last$[rsp]

; 1829 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z ENDP		; std::_Zero_range<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@H@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@H@std@@YAPEAHPEAH@Z PROC			; std::_Unfancy<int>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@H@std@@YAPEAHPEAH@Z ENDP			; std::_Unfancy<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,std::allocator<int> >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ; std::_Get_unwrapped<int * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ; std::_Get_unwrapped<int * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ; std::_Copy_memmove<int *,int *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	rcx, QWORD PTR _Dest$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 4
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAH@std@@YA$$QEAHAEAH@Z	; std::move<int &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_move<int *,std::allocator<int> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_move<int *,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<int,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@H$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@QEAU?$tvec4@H$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::construct<glm::tvec4<int,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<int,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@H$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@H$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<int,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@H$0A@@glm@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<int,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec4@H$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<int,0> *,glm::tvec4<int,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec4@H$0A@@glm@@@std@@YA$$QEAU?$tvec4@H$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<int,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec4@H$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@H$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<glm::tvec4<int,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<unsigned long,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@K$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@QEAU?$tvec4@K$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::construct<glm::tvec4<unsigned long,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<unsigned long,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@K$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@K$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<unsigned long,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@K$0A@@glm@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<unsigned long,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec4@K$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<unsigned long,0> *,glm::tvec4<unsigned long,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec4@K$0A@@glm@@@std@@YA$$QEAU?$tvec4@K$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<unsigned long,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec4@K$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@K$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<glm::tvec4<unsigned long,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z ; std::_Default_allocator_traits<std::allocator<float> >::construct<float>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ PROC ; std::_Uninitialized_backout_al<std::allocator<float> >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<float> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_First$ = 64
_Last$ = 72
??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z PROC		; std::_Zero_range<float *>, COMDAT

; 1824 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1825 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	mov	QWORD PTR _First_ch$[rsp], rax

; 1826 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	mov	QWORD PTR _Last_ch$[rsp], rax

; 1827 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR _First_ch$[rsp]
	call	memset

; 1828 :     return _Last;

	mov	rax, QWORD PTR _Last$[rsp]

; 1829 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z ENDP		; std::_Zero_range<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@M@std@@YAPEAMPEAM@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@M@std@@YAPEAMPEAM@Z PROC			; std::_Unfancy<float>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@M@std@@YAPEAMPEAM@Z ENDP			; std::_Unfancy<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z PROC ; std::_Uninitialized_move<float *,std::allocator<float> >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z ; std::_Get_unwrapped<float * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAM@std@@YA?A_TAEBQEAM@Z ; std::_Get_unwrapped<float * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z ; std::_Copy_memmove<float *,float *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	rcx, QWORD PTR _Dest$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z ; std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 4
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAM@std@@YA$$QEAMAEAM@Z	; std::move<float &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@M@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<float>

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ ; std::_Uninitialized_backout_al<std::allocator<float> >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z ENDP ; std::_Uninitialized_move<float *,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA PROC ; `std::_Uninitialized_move<float *,std::allocator<float> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z@4HA ENDP ; `std::_Uninitialized_move<float *,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 669  :         }
; 670  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<float,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z
_TEXT	SEGMENT
tv66 = 48
tv70 = 52
tv74 = 56
__$ReturnUdt$ = 80
Func$ = 88
v$ = 96
?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z PROC ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec4>::call, COMDAT

; 48   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 49   : 			return tvec4<R, P>(Func(v.x), Func(v.y), Func(v.z), Func(v.w));

	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv66[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv70[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv74[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR Func$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv70[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv74[rsp]
	mov	r8d, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<int,0>::tvec4<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 50   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z ENDP ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec4>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z
_TEXT	SEGMENT
tv66 = 32
tv70 = 36
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z PROC ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec3>::call, COMDAT

; 39   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 40   : 			return tvec3<R, P>(Func(v.x), Func(v.y), Func(v.z));

	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv66[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv70[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR Func$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv70[rsp]
	mov	r8d, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<int,0>::tvec3<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 41   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z ENDP ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec3>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z PROC ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec2>::call, COMDAT

; 30   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 31   : 			return tvec2<R, P>(Func(v.x), Func(v.y));

	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv66[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR Func$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	r8d, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@HH@Z		; glm::tvec2<int,0>::tvec2<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 32   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z ENDP ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec2>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z
_TEXT	SEGMENT
Result$ = 36
IsNotNull$ = 52
tv69 = 56
Value$ = 80
??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z PROC	; glm::detail::compute_findMSB_64<unsigned __int64>, COMDAT

; 162  : 		{

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 163  : 			unsigned long Result(0);

	mov	DWORD PTR Result$[rsp], 0

; 164  : 			unsigned char IsNotNull = _BitScanReverse64(&Result, *reinterpret_cast<unsigned __int64*>(&Value));

	mov	rax, QWORD PTR Value$[rsp]
	bsr	rax, rax
	mov	DWORD PTR Result$[rsp], eax
	setne	al
	mov	BYTE PTR IsNotNull$[rsp], al

; 165  : 			return IsNotNull ? int(Result) : -1;

	movzx	eax, BYTE PTR IsNotNull$[rsp]
	test	eax, eax
	je	SHORT $LN3@compute_fi
	mov	eax, DWORD PTR Result$[rsp]
	mov	DWORD PTR tv69[rsp], eax
	jmp	SHORT $LN4@compute_fi
$LN3@compute_fi:
	mov	DWORD PTR tv69[rsp], -1
$LN4@compute_fi:
	mov	eax, DWORD PTR tv69[rsp]

; 166  : 		}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z ENDP	; glm::detail::compute_findMSB_64<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
Func$ = 56
v$ = 64
?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z PROC ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec1>::call, COMDAT

; 21   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 22   : 			return tvec1<R, P>(Func(v.x));

	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec1@H$0A@@glm@@QEAA@H@Z		; glm::tvec1<int,0>::tvec1<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 23   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z ENDP ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec1>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z
_TEXT	SEGMENT
tv66 = 32
tv70 = 36
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z PROC ; glm::detail::functor1<int,int,0,glm::tvec3>::call, COMDAT

; 39   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 40   : 			return tvec3<R, P>(Func(v.x), Func(v.y), Func(v.z));

	mov	rax, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rax+8]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv66[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv70[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx]
	call	QWORD PTR Func$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv70[rsp]
	mov	r8d, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<int,0>::tvec3<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 41   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z ENDP ; glm::detail::functor1<int,int,0,glm::tvec3>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z PROC ; glm::detail::functor1<int,int,0,glm::tvec2>::call, COMDAT

; 30   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 31   : 			return tvec2<R, P>(Func(v.x), Func(v.y));

	mov	rax, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	call	QWORD PTR Func$[rsp]
	mov	DWORD PTR tv66[rsp], eax
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx]
	call	QWORD PTR Func$[rsp]
	mov	ecx, DWORD PTR tv66[rsp]
	mov	r8d, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@HH@Z		; glm::tvec2<int,0>::tvec2<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 32   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z ENDP ; glm::detail::functor1<int,int,0,glm::tvec2>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ??$compute_findMSB_32@H@detail@glm@@YAHH@Z
_TEXT	SEGMENT
Result$ = 36
IsNotNull$ = 52
tv69 = 56
Value$ = 80
??$compute_findMSB_32@H@detail@glm@@YAHH@Z PROC		; glm::detail::compute_findMSB_32<int>, COMDAT

; 144  : 		{

$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+80]

; 145  : 			unsigned long Result(0);

	mov	DWORD PTR Result$[rsp], 0

; 146  : 			unsigned char IsNotNull = _BitScanReverse(&Result, *reinterpret_cast<unsigned long*>(&Value));

	mov	eax, DWORD PTR Value$[rsp]
	bsr	eax, eax
	mov	DWORD PTR Result$[rsp], eax
	setne	al
	mov	BYTE PTR IsNotNull$[rsp], al

; 147  : 			return IsNotNull ? int(Result) : -1;

	movzx	eax, BYTE PTR IsNotNull$[rsp]
	test	eax, eax
	je	SHORT $LN3@compute_fi
	mov	eax, DWORD PTR Result$[rsp]
	mov	DWORD PTR tv69[rsp], eax
	jmp	SHORT $LN4@compute_fi
$LN3@compute_fi:
	mov	DWORD PTR tv69[rsp], -1
$LN4@compute_fi:
	mov	eax, DWORD PTR tv69[rsp]

; 148  : 		}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$compute_findMSB_32@H@detail@glm@@YAHH@Z ENDP		; glm::detail::compute_findMSB_32<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
Func$ = 56
v$ = 64
?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z PROC ; glm::detail::functor1<int,int,0,glm::tvec1>::call, COMDAT

; 21   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 22   : 			return tvec1<R, P>(Func(v.x));

	mov	rax, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec1@H$0A@@glm@@QEAA@H@Z		; glm::tvec1<int,0>::tvec1<int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 23   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z ENDP ; glm::detail::functor1<int,int,0,glm::tvec1>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
Func$ = 56
v$ = 64
?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z PROC ; glm::detail::functor1<float,float,0,glm::tvec1>::call, COMDAT

; 21   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 22   : 			return tvec1<R, P>(Func(v.x));

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec1@M$0A@@glm@@QEAA@M@Z		; glm::tvec1<float,0>::tvec1<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 23   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z ENDP ; glm::detail::functor1<float,float,0,glm::tvec1>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z PROC ; glm::detail::functor1<float,float,0,glm::tvec2>::call, COMDAT

; 30   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 31   : 			return tvec2<R, P>(Func(v.x), Func(v.y));

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv66[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	movss	xmm1, DWORD PTR tv66[rsp]
	movaps	xmm2, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 32   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z ENDP ; glm::detail::functor1<float,float,0,glm::tvec2>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z
_TEXT	SEGMENT
tv66 = 32
tv70 = 36
__$ReturnUdt$ = 64
Func$ = 72
v$ = 80
?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z PROC ; glm::detail::functor1<float,float,0,glm::tvec3>::call, COMDAT

; 39   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 40   : 			return tvec3<R, P>(Func(v.x), Func(v.y), Func(v.z));

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv66[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv70[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	movss	xmm1, DWORD PTR tv66[rsp]
	movaps	xmm3, xmm1
	movss	xmm1, DWORD PTR tv70[rsp]
	movaps	xmm2, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 41   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z ENDP ; glm::detail::functor1<float,float,0,glm::tvec3>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z
_TEXT	SEGMENT
tv66 = 48
tv70 = 52
tv74 = 56
__$ReturnUdt$ = 80
Func$ = 88
v$ = 96
?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z PROC ; glm::detail::functor1<float,float,0,glm::tvec4>::call, COMDAT

; 48   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 49   : 			return tvec4<R, P>(Func(v.x), Func(v.y), Func(v.z), Func(v.w));

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv66[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv70[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	QWORD PTR Func$[rsp]
	movss	DWORD PTR tv74[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	QWORD PTR Func$[rsp]
	movss	xmm1, DWORD PTR tv66[rsp]
	movss	DWORD PTR [rsp+32], xmm1
	movss	xmm1, DWORD PTR tv70[rsp]
	movaps	xmm3, xmm1
	movss	xmm1, DWORD PTR tv74[rsp]
	movaps	xmm2, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 50   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z ENDP ; glm::detail::functor1<float,float,0,glm::tvec4>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_findMSB_vec<int,0,glm::tvec1,32>::call, COMDAT

; 154  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 155  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_32, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z ; glm::detail::compute_findMSB_32<int>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@HH$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec1>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 156  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_findMSB_vec<int,0,glm::tvec1,32>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_findMSB_vec<int,0,glm::tvec2,32>::call, COMDAT

; 154  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 155  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_32, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z ; glm::detail::compute_findMSB_32<int>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@HH$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec2>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 156  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_findMSB_vec<int,0,glm::tvec2,32>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_findMSB_vec<int,0,glm::tvec3,32>::call, COMDAT

; 154  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 155  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_32, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_32@H@detail@glm@@YAHH@Z ; glm::detail::compute_findMSB_32<int>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@HH$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AHH@ZAEBU43@@Z ; glm::detail::functor1<int,int,0,glm::tvec3>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 156  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_findMSB_vec<int,0,glm::tvec3,32>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z PROC ; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0><int,0>, COMDAT

; 47   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 46   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 47   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z ENDP ; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z PROC ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec1,64>::call, COMDAT

; 172  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 173  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_64, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z ; glm::detail::compute_findMSB_64<unsigned __int64>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@H_K$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@H$0A@@3@P6AH_K@ZAEBU?$tvec1@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec1>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 174  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z ENDP ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec1,64>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z PROC ; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0><int,0>, COMDAT

; 82   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 80   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 81   : 		, y(static_cast<T>(v.y))

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 82   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ENDP ; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z PROC ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec2,64>::call, COMDAT

; 172  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 173  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_64, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z ; glm::detail::compute_findMSB_64<unsigned __int64>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@H_K$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@H$0A@@3@P6AH_K@ZAEBU?$tvec2@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec2>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 174  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z ENDP ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec2,64>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z PROC ; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0><int,0>, COMDAT

; 130  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 127  : 		x(static_cast<T>(v.x)),

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 128  : 		y(static_cast<T>(v.y)),

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 129  : 		z(static_cast<T>(v.z))

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 130  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z ENDP ; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z PROC ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec3,64>::call, COMDAT

; 172  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 173  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_64, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z ; glm::detail::compute_findMSB_64<unsigned __int64>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@H_K$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@H$0A@@3@P6AH_K@ZAEBU?$tvec3@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec3>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 174  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z ENDP ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec3,64>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z PROC ; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0><int,0>, COMDAT

; 323  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 319  : 		x(static_cast<T>(v.x)),

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 320  : 		y(static_cast<T>(v.y)),

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 321  : 		z(static_cast<T>(v.z)),

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 322  : 		w(static_cast<T>(v.w))

	mov	rax, QWORD PTR v$[rsp]
	movsxd	rax, DWORD PTR [rax+12]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 323  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z ENDP ; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0><int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_integer.inl
;	COMDAT ?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z PROC ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec4,64>::call, COMDAT

; 172  : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 173  : 				return detail::functor1<int, T, P, vecType>::call(compute_findMSB_64, x);

	mov	r8, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:??$compute_findMSB_64@_K@detail@glm@@YAH_K@Z ; glm::detail::compute_findMSB_64<unsigned __int64>
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@H_K$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@H$0A@@3@P6AH_K@ZAEBU?$tvec4@_K$0A@@3@@Z ; glm::detail::functor1<int,unsigned __int64,0,glm::tvec4>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 174  : 			}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z ENDP ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec4,64>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<int> >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	QWORD PTR _PFirst$4[rsp], rax

; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);

	mov	rax, QWORD PTR _PFirst$4[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rdx, rax
	mov	rcx, QWORD PTR _PFirst$4[rsp]
	call	??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z	; std::_Zero_range<int *>

; 1843 :             return _First + _Count;

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	jmp	SHORT $LN1@Uninitiali

; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
	mov	QWORD PTR $T5[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	mov	rax, QWORD PTR $T5[rsp]
$LN1@Uninitiali:

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<int> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Oldsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@H$0A@@glm@@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<int,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<int,0> *,std::allocator<glm::tvec4<int,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@K$0A@@glm@@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<unsigned long,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<unsigned long,0> *,std::allocator<glm::tvec4<unsigned long,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
_TEXT	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<float> >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	QWORD PTR _PFirst$4[rsp], rax

; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);

	mov	rax, QWORD PTR _PFirst$4[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rdx, rax
	mov	rcx, QWORD PTR _PFirst$4[rsp]
	call	??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z	; std::_Zero_range<float *>

; 1843 :             return _First + _Count;

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	jmp	SHORT $LN1@Uninitiali

; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z ; std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ ; std::_Uninitialized_backout_al<std::allocator<float> >::_Release
	mov	QWORD PTR $T5[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
	mov	rax, QWORD PTR $T5[rsp]
$LN1@Uninitiali:

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<float> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ; std::vector<float,std::allocator<float> >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z ; std::vector<float,std::allocator<float> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ; std::allocator<float>::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Oldsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAMV?$allocator@M@std@@@std@@YAPEAMQEAM0PEAMAEAV?$allocator@M@0@@Z ; std::_Uninitialized_move<float *,std::allocator<float> >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z ; std::vector<float,std::allocator<float> >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ; std::allocator<float>::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 150  :     }
; 151  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 972  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 973  :     // deallocate a plain pointer using an allocator
; 974  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 975  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 976  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 977  :     } else {
; 978  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 979  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 980  :     }
; 981  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
vec$ = 72
?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec4,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?call@?$compute_findMSB_vec@_K$0A@Utvec4@glm@@$0EA@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU?$tvec4@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec4,64>::call
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0H$0A@@?$tvec4@_K$0A@@glm@@QEAA@AEBU?$tvec4@H$0A@@1@@Z ; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0><int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec4,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
vec$ = 72
?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec3,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?call@?$compute_findMSB_vec@_K$0A@Utvec3@glm@@$0EA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU?$tvec3@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec3,64>::call
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0H$0A@@?$tvec3@_K$0A@@glm@@QEAA@AEBU?$tvec3@H$0A@@1@@Z ; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0><int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec3,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
vec$ = 72
?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec2,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?call@?$compute_findMSB_vec@_K$0A@Utvec2@glm@@$0EA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU?$tvec2@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec2,64>::call
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0H$0A@@?$tvec2@_K$0A@@glm@@QEAA@AEBU?$tvec2@H$0A@@1@@Z ; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0><int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec2,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
vec$ = 72
?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec1,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?call@?$compute_findMSB_vec@_K$0A@Utvec1@glm@@$0EA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU?$tvec1@_K$0A@@3@@Z ; glm::detail::compute_findMSB_vec<unsigned __int64,0,glm::tvec1,64>::call
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0H$0A@@?$tvec1@_K$0A@@glm@@QEAA@AEBU?$tvec1@H$0A@@1@@Z ; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0><int,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec1,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
Result$ = 40
__$ReturnUdt$ = 112
vec$ = 120
?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call, COMDAT

; 23   : 			{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 24   : 				tvec4<int, P> Result(glm::uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<int,0>::tvec4<int,0>

; 25   : 
; 26   : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result.x), vec.x);

	mov	rax, QWORD PTR vec$[rsp]
	mov	eax, DWORD PTR [rax]
	bsr	eax, eax
	mov	DWORD PTR Result$[rsp], eax

; 27   : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result.y), vec.y);

	mov	rax, QWORD PTR vec$[rsp]
	mov	eax, DWORD PTR [rax+4]
	bsr	eax, eax
	mov	DWORD PTR Result$[rsp+4], eax

; 28   : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result.z), vec.z);

	mov	rax, QWORD PTR vec$[rsp]
	mov	eax, DWORD PTR [rax+8]
	bsr	eax, eax
	mov	DWORD PTR Result$[rsp+8], eax

; 29   : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result.w), vec.w);

	mov	rax, QWORD PTR vec$[rsp]
	mov	eax, DWORD PTR [rax+12]
	bsr	eax, eax
	mov	DWORD PTR Result$[rsp+12], eax

; 30   : 
; 31   : 				return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 32   : 			}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<int,0,glm::tvec3,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_findMSB_vec@H$0A@Utvec3@glm@@$0CA@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec3,32>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<int,0,glm::tvec3,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<int,0,glm::tvec2,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_findMSB_vec@H$0A@Utvec2@glm@@$0CA@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec2,32>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<int,0,glm::tvec2,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<int,0,glm::tvec1,0,0>::call, COMDAT

; 11   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 12   : 			//Equivalent to return findMSB(vec); but save one function call in ASM with VC
; 13   : 			//return findMSB(vec);
; 14   : 			return vecType<T, P>(detail::compute_findMSB_vec<T, P, vecType, sizeof(T) * 8>::call(vec));

	mov	rdx, QWORD PTR vec$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_findMSB_vec@H$0A@Utvec1@glm@@$0CA@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ; glm::detail::compute_findMSB_vec<int,0,glm::tvec1,32>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 15   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<int,0,glm::tvec1,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<float,0,glm::tvec4,1,0>::call, COMDAT

; 27   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 28   : 			return detail::functor1<T, T, P, vecType>::call(log2, vec);

	mov	r8, QWORD PTR vec$[rsp]
	lea	rdx, OFFSET FLAT:?log2@@YAMM@Z		; log2
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@MM$0A@Utvec4@glm@@@detail@glm@@SA?AU?$tvec4@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec4>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 29   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<float,0,glm::tvec4,1,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<float,0,glm::tvec3,1,0>::call, COMDAT

; 27   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 28   : 			return detail::functor1<T, T, P, vecType>::call(log2, vec);

	mov	r8, QWORD PTR vec$[rsp]
	lea	rdx, OFFSET FLAT:?log2@@YAMM@Z		; log2
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@MM$0A@Utvec3@glm@@@detail@glm@@SA?AU?$tvec3@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec3>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 29   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<float,0,glm::tvec3,1,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<float,0,glm::tvec2,1,0>::call, COMDAT

; 27   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 28   : 			return detail::functor1<T, T, P, vecType>::call(log2, vec);

	mov	r8, QWORD PTR vec$[rsp]
	lea	rdx, OFFSET FLAT:?log2@@YAMM@Z		; log2
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@MM$0A@Utvec2@glm@@@detail@glm@@SA?AU?$tvec2@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec2>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 29   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<float,0,glm::tvec2,1,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
vec$ = 56
?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z PROC ; glm::detail::compute_log2<float,0,glm::tvec1,1,0>::call, COMDAT

; 27   : 		{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 28   : 			return detail::functor1<T, T, P, vecType>::call(log2, vec);

	mov	r8, QWORD PTR vec$[rsp]
	lea	rdx, OFFSET FLAT:?log2@@YAMM@Z		; log2
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$functor1@MM$0A@Utvec1@glm@@@detail@glm@@SA?AU?$tvec1@M$0A@@3@P6AMM@ZAEBU43@@Z ; glm::detail::functor1<float,float,0,glm::tvec1>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 29   : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z ENDP ; glm::detail::compute_log2<float,0,glm::tvec1,1,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 256  :     }
; 257  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z PROC ; std::_Destroy_range<std::allocator<float> >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ENDP ; std::_Destroy_range<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@H@std@@QEAA@XZ		; std::allocator<int>::allocator<int>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<int,0> >::allocator<glm::tvec4<int,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<int,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@H$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<int,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<unsigned long,0> >::allocator<glm::tvec4<unsigned long,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<unsigned long,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@K$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<unsigned long,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@M@std@@QEAA@XZ		; std::allocator<float>::allocator<float>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<float,std::allocator<float> >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<float,std::allocator<float> >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<float,std::allocator<float> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rsp], rax

; 1058 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1059 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	mov	QWORD PTR [rax], rcx

; 1060 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx

; 1061 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 984  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 985  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 986  :     using _Ty = typename _Alloc::value_type;
; 987  :     _Ptr->~_Ty();
; 988  :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 989  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 605  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 606  :     // assign _New_val to _Val, return previous _Val
; 607  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rsp], rax

; 608  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR _New_val$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 609  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rsp]

; 610  : }

	add	rsp, 16
	pop	rdi
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_integer.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 219  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 220  : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 221  : 
; 222  : 	Error += ::log2_::test();

	call	?test@log2_@@YAHXZ			; log2_::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 223  : 	Error += ::iround::test();

	call	?test@iround@@YAHXZ			; iround::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 224  : 	Error += ::uround::test();

	call	?test@uround@@YAHXZ			; uround::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 225  : 
; 226  : #	ifdef NDEBUG
; 227  : 		std::size_t const Samples(1000);
; 228  : 		Error += ::log2_::perf(Samples);
; 229  : #	endif//NDEBUG
; 230  : 
; 231  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 232  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ??$uround@M@glm@@YAIM@Z
_TEXT	SEGMENT
x$ = 48
??$uround@M@glm@@YAIM@Z PROC				; glm::uround<float>, COMDAT

; 56   : 	{

$LN4:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 32					; 00000020H

; 57   : 		GLM_STATIC_ASSERT(std::numeric_limits<genType>::is_iec559, "'uround' only accept floating-point inputs");
; 58   : 		assert(static_cast<genType>(0.0) <= x);

	movss	xmm0, DWORD PTR x$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN3@uround
	mov	r8d, 58					; 0000003aH
	lea	rdx, OFFSET FLAT:??_C@_1KM@JMCMAPOB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DO@OLOPJHDM@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAg?$AAe?$AAn@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@uround:

; 59   : 
; 60   : 		return static_cast<uint>(x + static_cast<genType>(0.5));

	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si rax, xmm0

; 61   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$uround@M@glm@@YAIM@Z ENDP				; glm::uround<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_integer.cpp
_TEXT	SEGMENT
Error$ = 32
f$1 = 36
RoundFast$2 = 40
RoundSTD$3 = 44
tv72 = 48
?test@uround@@YAHXZ PROC				; uround::test

; 203  : 	{

$LN9:
	push	rdi
	sub	rsp, 64					; 00000040H

; 204  : 		int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 205  : 
; 206  : 		for(float f = 0.0f; f < 3.1f; f += 0.05f)

	xorps	xmm0, xmm0
	movss	DWORD PTR f$1[rsp], xmm0
	jmp	SHORT $LN4@test
$LN2@test:
	movss	xmm0, DWORD PTR f$1[rsp]
	addss	xmm0, DWORD PTR __real@3d4ccccd
	movss	DWORD PTR f$1[rsp], xmm0
$LN4@test:
	movss	xmm0, DWORD PTR __real@40466666
	comiss	xmm0, DWORD PTR f$1[rsp]
	jbe	SHORT $LN3@test

; 207  : 		{
; 208  : 			int RoundFast = glm::uround(f);

	movss	xmm0, DWORD PTR f$1[rsp]
	call	??$uround@M@glm@@YAIM@Z			; glm::uround<float>
	mov	DWORD PTR RoundFast$2[rsp], eax

; 209  : 			int RoundSTD = glm::round(f);

	movss	xmm0, DWORD PTR f$1[rsp]
	call	?round@@YAMM@Z				; round
	cvttss2si eax, xmm0
	mov	DWORD PTR RoundSTD$3[rsp], eax

; 210  : 			Error += RoundFast == RoundSTD ? 0 : 1;

	mov	eax, DWORD PTR RoundSTD$3[rsp]
	cmp	DWORD PTR RoundFast$2[rsp], eax
	jne	SHORT $LN6@test
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN7@test
$LN6@test:
	mov	DWORD PTR tv72[rsp], 1
$LN7@test:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 211  : 			assert(!Error);

	cmp	DWORD PTR Error$[rsp], 0
	je	SHORT $LN8@test
	mov	r8d, 211				; 000000d3H
	lea	rdx, OFFSET FLAT:$SG62027
	lea	rcx, OFFSET FLAT:$SG62028
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@test:

; 212  : 		}

	jmp	$LN2@test
$LN3@test:

; 213  : 
; 214  : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 215  : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?test@uround@@YAHXZ ENDP				; uround::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\integer.inl
;	COMDAT ??$iround@M@glm@@YAHM@Z
_TEXT	SEGMENT
x$ = 48
??$iround@M@glm@@YAHM@Z PROC				; glm::iround<float>, COMDAT

; 38   : 	{

$LN4:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 32					; 00000020H

; 39   : 		GLM_STATIC_ASSERT(std::numeric_limits<genType>::is_iec559, "'iround' only accept floating-point inputs");
; 40   : 		assert(static_cast<genType>(0.0) <= x);

	movss	xmm0, DWORD PTR x$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN3@iround
	mov	r8d, 40					; 00000028H
	lea	rdx, OFFSET FLAT:??_C@_1KM@JMCMAPOB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DO@OLOPJHDM@?$AAs?$AAt?$AAa?$AAt?$AAi?$AAc?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAg?$AAe?$AAn@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@iround:

; 41   : 
; 42   : 		return static_cast<int>(x + static_cast<genType>(0.5));

	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0

; 43   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$iround@M@glm@@YAHM@Z ENDP				; glm::iround<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_integer.cpp
_TEXT	SEGMENT
Error$ = 32
f$1 = 36
RoundFast$2 = 40
RoundSTD$3 = 44
tv72 = 48
?test@iround@@YAHXZ PROC				; iround::test

; 185  : 	{

$LN9:
	push	rdi
	sub	rsp, 64					; 00000040H

; 186  : 		int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 187  : 
; 188  : 		for(float f = 0.0f; f < 3.1f; f += 0.05f)

	xorps	xmm0, xmm0
	movss	DWORD PTR f$1[rsp], xmm0
	jmp	SHORT $LN4@test
$LN2@test:
	movss	xmm0, DWORD PTR f$1[rsp]
	addss	xmm0, DWORD PTR __real@3d4ccccd
	movss	DWORD PTR f$1[rsp], xmm0
$LN4@test:
	movss	xmm0, DWORD PTR __real@40466666
	comiss	xmm0, DWORD PTR f$1[rsp]
	jbe	SHORT $LN3@test

; 189  : 		{
; 190  : 			int RoundFast = glm::iround(f);

	movss	xmm0, DWORD PTR f$1[rsp]
	call	??$iround@M@glm@@YAHM@Z			; glm::iround<float>
	mov	DWORD PTR RoundFast$2[rsp], eax

; 191  : 			int RoundSTD = glm::round(f);

	movss	xmm0, DWORD PTR f$1[rsp]
	call	?round@@YAMM@Z				; round
	cvttss2si eax, xmm0
	mov	DWORD PTR RoundSTD$3[rsp], eax

; 192  : 			Error += RoundFast == RoundSTD ? 0 : 1;

	mov	eax, DWORD PTR RoundSTD$3[rsp]
	cmp	DWORD PTR RoundFast$2[rsp], eax
	jne	SHORT $LN6@test
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN7@test
$LN6@test:
	mov	DWORD PTR tv72[rsp], 1
$LN7@test:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 193  : 			assert(!Error);

	cmp	DWORD PTR Error$[rsp], 0
	je	SHORT $LN8@test
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:$SG62008
	lea	rcx, OFFSET FLAT:$SG62009
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@test:

; 194  : 		}

	jmp	$LN2@test
$LN3@test:

; 195  : 
; 196  : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 197  : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?test@iround@@YAHXZ ENDP				; iround::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rsp], 16
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	lea	rax, QWORD PTR $S1$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ PROC ; std::vector<float,std::allocator<float> >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ENDP ; std::vector<float,std::allocator<float> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ PROC ; std::vector<float,std::allocator<float> >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ENDP ; std::vector<float,std::allocator<float> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@MV?$allocator@M@std@@@std@@AEBAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ PROC ; std::vector<float,std::allocator<float> >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ENDP ; std::vector<float,std::allocator<float> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ; std::allocator<float>::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z PROC ; std::vector<float,std::allocator<float> >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ; std::allocator<float>::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@MV?$allocator@M@std@@@std@@AEAAXQEAM_K1@Z ENDP ; std::vector<float,std::allocator<float> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z PROC ; std::vector<float,std::allocator<float> >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@MV?$allocator@M@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z PROC ; std::vector<float,std::allocator<float> >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 2
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Pos$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ENDP ; std::vector<float,std::allocator<float> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::_Default_allocator_traits<std::allocator<float> >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@MV?$allocator@M@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<float,std::allocator<float> >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
	lea	rax, QWORD PTR $S2$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<float> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 4611686018427387903		; 3fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z PROC		; std::allocator<float>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$03@std@@YA_K_K@Z	; std::_Get_size_of_n<4>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ENDP		; std::allocator<float>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z PROC	; std::allocator<float>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 2
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ENDP	; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@M@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@M@std@@QEAA@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@M@std@@QEAA@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@K$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@K$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@K$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<unsigned long,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@K$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rsp], 16
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S3$[rsp]
	call	??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<unsigned long,0> >
	lea	rax, QWORD PTR $S3$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@K$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<unsigned long,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<unsigned long,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@K$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec4@K$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@K$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<unsigned long,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@K$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<unsigned long,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<unsigned long,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAPEAU?$tvec4@K$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<unsigned long,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAAXQEAU?$tvec4@K$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<unsigned long,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<unsigned long,0> >::allocator<glm::tvec4<unsigned long,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@K$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<unsigned long,0> >::allocator<glm::tvec4<unsigned long,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z PROC ; glm::tvec4<int,0>::tvec4<int,0><unsigned long,0>, COMDAT

; 323  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 319  : 		x(static_cast<T>(v.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx

; 320  : 		y(static_cast<T>(v.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx

; 321  : 		z(static_cast<T>(v.z)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax+8], ecx

; 322  : 		w(static_cast<T>(v.w))

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	mov	ecx, DWORD PTR [rcx+12]
	mov	DWORD PTR [rax+12], ecx

; 323  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z ENDP ; glm::tvec4<int,0>::tvec4<int,0><unsigned long,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@K$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@K$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+12], 0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@K$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@H$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@H$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@H$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<int,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<int,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@H$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rsp], 16
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S4$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S4$[rsp]
	call	??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<int,0> >
	lea	rax, QWORD PTR $S4$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@H$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<int,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<int,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@H$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec4@H$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@H$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<int,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@H$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<int,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<int,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAPEAU?$tvec4@H$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<int,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<int,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAAXQEAU?$tvec4@H$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<int,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<int,0> >::allocator<glm::tvec4<int,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@H$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<int,0> >::allocator<glm::tvec4<int,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z PROC ; std::vector<int,std::allocator<int> >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ENDP ; std::vector<int,std::allocator<int> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z PROC ; std::vector<int,std::allocator<int> >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z PROC ; std::vector<int,std::allocator<int> >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 2
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Pos$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z ENDP ; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
$T4 = 68
this$ = 96
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S5$[rsp]
	call	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
	lea	rax, QWORD PTR $S5$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 4611686018427387903		; 3fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z PROC		; std::allocator<int>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$03@std@@YA_K_K@Z	; std::_Get_size_of_n<4>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z PROC	; std::allocator<int>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 2
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ENDP	; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@H@std@@QEAA@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@H@std@@QEAA@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_integer.cpp
_TEXT	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?perf@log2_@@YAH_K@Z PROC				; log2_::perf

; 56   : 	{

$LN33:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 728				; 000002d8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 174				; 000000aeH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+752]

; 57   : 		int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 58   : 
; 59   : 		{
; 60   : 			std::vector<int> Result;

	lea	rcx, QWORD PTR Result$11[rsp]
	call	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
	npad	1

; 61   : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$11[rsp]
	call	?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize

; 62   : 
; 63   : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$12[rsp], eax

; 64   : 
; 65   : 			for(int i = 0; i < static_cast<int>(Count); ++i)

	mov	DWORD PTR i$13[rsp], 0
	jmp	SHORT $LN4@perf
$LN2@perf:
	mov	eax, DWORD PTR i$13[rsp]
	inc	eax
	mov	DWORD PTR i$13[rsp], eax
$LN4@perf:
	mov	eax, DWORD PTR Count$[rsp]
	cmp	DWORD PTR i$13[rsp], eax
	jge	SHORT $LN3@perf

; 66   : 				Result[i] = glm::log2(static_cast<int>(i));

	mov	ecx, DWORD PTR i$13[rsp]
	call	??$log2@H@glm@@YAHH@Z			; glm::log2<int>
	mov	DWORD PTR tv76[rsp], eax
	movsxd	rcx, DWORD PTR i$13[rsp]
	mov	rdx, rcx
	lea	rcx, QWORD PTR Result$11[rsp]
	call	??A?$vector@HV?$allocator@H@std@@@std@@QEAAAEAH_K@Z ; std::vector<int,std::allocator<int> >::operator[]
	mov	ecx, DWORD PTR tv76[rsp]
	mov	DWORD PTR [rax], ecx
	jmp	SHORT $LN2@perf
$LN3@perf:

; 67   : 
; 68   : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$14[rsp], eax

; 69   : 
; 70   : 			printf("glm::log2<int>: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$12[rsp]
	mov	ecx, DWORD PTR End$14[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61982
	call	printf
	npad	1

; 71   : 		}

	lea	rcx, QWORD PTR Result$11[rsp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >

; 72   : 
; 73   : 		{
; 74   : 			std::vector<glm::ivec4> Result;

	lea	rcx, QWORD PTR Result$15[rsp]
	call	??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	npad	1

; 75   : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$15[rsp]
	call	?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize

; 76   : 
; 77   : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$16[rsp], eax

; 78   : 
; 79   : 			for(int i = 0; i < static_cast<int>(Count); ++i)

	mov	DWORD PTR i$17[rsp], 0
	jmp	SHORT $LN7@perf
$LN5@perf:
	mov	eax, DWORD PTR i$17[rsp]
	inc	eax
	mov	DWORD PTR i$17[rsp], eax
$LN7@perf:
	mov	eax, DWORD PTR Count$[rsp]
	cmp	DWORD PTR i$17[rsp], eax
	jge	SHORT $LN6@perf

; 80   : 				Result[i] = glm::log2(glm::ivec4(i));

	mov	edx, DWORD PTR i$17[rsp]
	lea	rcx, QWORD PTR $T40[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@H@Z		; glm::tvec4<int,0>::tvec4<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T41[rsp]
	call	??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec4>
	mov	QWORD PTR tv94[rsp], rax
	movsxd	rcx, DWORD PTR i$17[rsp]
	mov	rdx, rcx
	lea	rcx, QWORD PTR Result$15[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	mov	rdi, rax
	mov	rax, QWORD PTR tv94[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN5@perf
$LN6@perf:

; 81   : 
; 82   : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$18[rsp], eax

; 83   : 
; 84   : 			printf("glm::log2<ivec4>: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$16[rsp]
	mov	ecx, DWORD PTR End$18[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61983
	call	printf
	npad	1

; 85   : 		}

	lea	rcx, QWORD PTR Result$15[rsp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >

; 86   : 
; 87   : #		if GLM_HAS_BITSCAN_WINDOWS
; 88   : 		{
; 89   : 			std::vector<glm::ivec4> Result;

	lea	rcx, QWORD PTR Result$19[rsp]
	call	??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	npad	1

; 90   : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$19[rsp]
	call	?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize

; 91   : 
; 92   : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$20[rsp], eax

; 93   : 
; 94   : 			for(std::size_t i = 0; i < Count; ++i)

	mov	QWORD PTR i$21[rsp], 0
	jmp	SHORT $LN10@perf
$LN8@perf:
	mov	rax, QWORD PTR i$21[rsp]
	inc	rax
	mov	QWORD PTR i$21[rsp], rax
$LN10@perf:
	mov	rax, QWORD PTR Count$[rsp]
	cmp	QWORD PTR i$21[rsp], rax
	jae	$LN9@perf

; 95   : 			{
; 96   : 				glm::tvec4<unsigned long, glm::defaultp> Tmp(glm::uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Tmp$22[rsp]
	call	??0?$tvec4@K$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<unsigned long,0>::tvec4<unsigned long,0>

; 97   : 				_BitScanReverse(&Tmp.x, i);

	mov	eax, DWORD PTR i$21[rsp]
	bsr	eax, eax
	mov	DWORD PTR Tmp$22[rsp], eax

; 98   : 				_BitScanReverse(&Tmp.y, i);

	mov	eax, DWORD PTR i$21[rsp]
	bsr	eax, eax
	mov	DWORD PTR Tmp$22[rsp+4], eax

; 99   : 				_BitScanReverse(&Tmp.z, i);

	mov	eax, DWORD PTR i$21[rsp]
	bsr	eax, eax
	mov	DWORD PTR Tmp$22[rsp+8], eax

; 100  : 				_BitScanReverse(&Tmp.w, i);

	mov	eax, DWORD PTR i$21[rsp]
	bsr	eax, eax
	mov	DWORD PTR Tmp$22[rsp+12], eax

; 101  : 				Result[i] = glm::ivec4(Tmp);

	lea	rdx, QWORD PTR Tmp$22[rsp]
	lea	rcx, QWORD PTR $T42[rsp]
	call	??$?0K$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@K$0A@@1@@Z ; glm::tvec4<int,0>::tvec4<int,0><unsigned long,0>
	mov	QWORD PTR tv159[rsp], rax
	mov	rdx, QWORD PTR i$21[rsp]
	lea	rcx, QWORD PTR Result$19[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	mov	rdi, rax
	mov	rax, QWORD PTR tv159[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 102  : 			}

	jmp	$LN8@perf
$LN9@perf:

; 103  : 
; 104  : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$23[rsp], eax

; 105  : 
; 106  : 			printf("glm::log2<ivec4> inlined: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$20[rsp]
	mov	ecx, DWORD PTR End$23[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61984
	call	printf
	npad	1

; 107  : 		}

	lea	rcx, QWORD PTR Result$19[rsp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >

; 108  : 
; 109  : 
; 110  : 		{
; 111  : 			std::vector<glm::tvec4<unsigned long, glm::defaultp> > Result;

	lea	rcx, QWORD PTR Result$24[rsp]
	call	??0?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
	npad	1

; 112  : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$24[rsp]
	call	?resize@?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::resize

; 113  : 
; 114  : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$25[rsp], eax

; 115  : 
; 116  : 			for(std::size_t i = 0; i < Count; ++i)

	mov	QWORD PTR i$26[rsp], 0
	jmp	SHORT $LN13@perf
$LN11@perf:
	mov	rax, QWORD PTR i$26[rsp]
	inc	rax
	mov	QWORD PTR i$26[rsp], rax
$LN13@perf:
	mov	rax, QWORD PTR Count$[rsp]
	cmp	QWORD PTR i$26[rsp], rax
	jae	$LN12@perf

; 117  : 			{
; 118  : 				_BitScanReverse(&Result[i].x, i);

	mov	rdx, QWORD PTR i$26[rsp]
	lea	rcx, QWORD PTR Result$24[rsp]
	call	??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
	mov	ecx, DWORD PTR i$26[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 119  : 				_BitScanReverse(&Result[i].y, i);

	mov	rdx, QWORD PTR i$26[rsp]
	lea	rcx, QWORD PTR Result$24[rsp]
	call	??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
	add	rax, 4
	mov	ecx, DWORD PTR i$26[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 120  : 				_BitScanReverse(&Result[i].z, i);

	mov	rdx, QWORD PTR i$26[rsp]
	lea	rcx, QWORD PTR Result$24[rsp]
	call	??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
	add	rax, 8
	mov	ecx, DWORD PTR i$26[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 121  : 				_BitScanReverse(&Result[i].w, i);

	mov	rdx, QWORD PTR i$26[rsp]
	lea	rcx, QWORD PTR Result$24[rsp]
	call	??A?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@K$0A@@glm@@_K@Z ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::operator[]
	add	rax, 12
	mov	ecx, DWORD PTR i$26[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 122  : 			}

	jmp	$LN11@perf
$LN12@perf:

; 123  : 
; 124  : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$27[rsp], eax

; 125  : 
; 126  : 			printf("glm::log2<ivec4> inlined no cast: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$25[rsp]
	mov	ecx, DWORD PTR End$27[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61985
	call	printf
	npad	1

; 127  : 		}

	lea	rcx, QWORD PTR Result$24[rsp]
	call	??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >

; 128  : 
; 129  : 
; 130  : 		{
; 131  : 			std::vector<glm::ivec4> Result;

	lea	rcx, QWORD PTR Result$28[rsp]
	call	??0?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	npad	1

; 132  : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$28[rsp]
	call	?resize@?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::resize

; 133  : 
; 134  : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$29[rsp], eax

; 135  : 
; 136  : 			for(std::size_t i = 0; i < Count; ++i)

	mov	QWORD PTR i$30[rsp], 0
	jmp	SHORT $LN16@perf
$LN14@perf:
	mov	rax, QWORD PTR i$30[rsp]
	inc	rax
	mov	QWORD PTR i$30[rsp], rax
$LN16@perf:
	mov	rax, QWORD PTR Count$[rsp]
	cmp	QWORD PTR i$30[rsp], rax
	jae	$LN15@perf

; 137  : 			{
; 138  : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result[i].x), i);

	mov	rdx, QWORD PTR i$30[rsp]
	lea	rcx, QWORD PTR Result$28[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	mov	ecx, DWORD PTR i$30[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 139  : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result[i].y), i);

	mov	rdx, QWORD PTR i$30[rsp]
	lea	rcx, QWORD PTR Result$28[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	add	rax, 4
	mov	ecx, DWORD PTR i$30[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 140  : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result[i].z), i);

	mov	rdx, QWORD PTR i$30[rsp]
	lea	rcx, QWORD PTR Result$28[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	add	rax, 8
	mov	ecx, DWORD PTR i$30[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 141  : 				_BitScanReverse(reinterpret_cast<unsigned long*>(&Result[i].w), i);

	mov	rdx, QWORD PTR i$30[rsp]
	lea	rcx, QWORD PTR Result$28[rsp]
	call	??A?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@H$0A@@glm@@_K@Z ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::operator[]
	add	rax, 12
	mov	ecx, DWORD PTR i$30[rsp]
	bsr	ecx, ecx
	mov	DWORD PTR [rax], ecx

; 142  : 			}

	jmp	$LN14@perf
$LN15@perf:

; 143  : 
; 144  : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$31[rsp], eax

; 145  : 
; 146  : 			printf("glm::log2<ivec4> reinterpret: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$29[rsp]
	mov	ecx, DWORD PTR End$31[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61986
	call	printf
	npad	1

; 147  : 		}

	lea	rcx, QWORD PTR Result$28[rsp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >

; 148  : #		endif//GLM_HAS_BITSCAN_WINDOWS
; 149  : 
; 150  : 		{
; 151  : 			std::vector<float> Result;

	lea	rcx, QWORD PTR Result$32[rsp]
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	npad	1

; 152  : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$32[rsp]
	call	?resize@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z ; std::vector<float,std::allocator<float> >::resize

; 153  : 
; 154  : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$33[rsp], eax

; 155  : 
; 156  : 			for(std::size_t i = 0; i < Count; ++i)

	mov	QWORD PTR i$34[rsp], 0
	jmp	SHORT $LN19@perf
$LN17@perf:
	mov	rax, QWORD PTR i$34[rsp]
	inc	rax
	mov	QWORD PTR i$34[rsp], rax
$LN19@perf:
	mov	rax, QWORD PTR Count$[rsp]
	cmp	QWORD PTR i$34[rsp], rax
	jae	SHORT $LN18@perf

; 157  : 				Result[i] = glm::log2(static_cast<float>(i));

	mov	rax, QWORD PTR i$34[rsp]
	test	rax, rax
	jl	SHORT $LN31@perf
	cvtsi2ss xmm0, rax
	jmp	SHORT $LN32@perf
$LN31@perf:
	mov	rcx, rax
	shr	rcx, 1
	and	rax, 1
	or	rcx, rax
	cvtsi2ss xmm1, rcx
	addss	xmm1, xmm1
	movaps	xmm0, xmm1
$LN32@perf:
	call	??$log2@M@glm@@YAMM@Z			; glm::log2<float>
	movss	DWORD PTR tv281[rsp], xmm0
	mov	rdx, QWORD PTR i$34[rsp]
	lea	rcx, QWORD PTR Result$32[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR tv281[rsp]
	movss	DWORD PTR [rax], xmm0
	jmp	$LN17@perf
$LN18@perf:

; 158  : 
; 159  : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$35[rsp], eax

; 160  : 
; 161  : 			printf("glm::log2<float>: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$33[rsp]
	mov	ecx, DWORD PTR End$35[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61987
	call	printf
	npad	1

; 162  : 		}

	lea	rcx, QWORD PTR Result$32[rsp]
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >

; 163  : 
; 164  : 		{
; 165  : 			std::vector<glm::vec4> Result;

	lea	rcx, QWORD PTR Result$36[rsp]
	call	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	npad	1

; 166  : 			Result.resize(Count);

	mov	rdx, QWORD PTR Count$[rsp]
	lea	rcx, QWORD PTR Result$36[rsp]
	call	?resize@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::resize

; 167  : 
; 168  : 			std::clock_t Begin = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR Begin$37[rsp], eax

; 169  : 
; 170  : 			for(int i = 0; i < static_cast<int>(Count); ++i)

	mov	DWORD PTR i$38[rsp], 0
	jmp	SHORT $LN22@perf
$LN20@perf:
	mov	eax, DWORD PTR i$38[rsp]
	inc	eax
	mov	DWORD PTR i$38[rsp], eax
$LN22@perf:
	mov	eax, DWORD PTR Count$[rsp]
	cmp	DWORD PTR i$38[rsp], eax
	jge	SHORT $LN21@perf

; 171  : 				Result[i] = glm::log2(glm::vec4(i));

	cvtsi2ss xmm0, DWORD PTR i$38[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T43[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T44[rsp]
	call	??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec4>
	mov	QWORD PTR tv300[rsp], rax
	movsxd	rcx, DWORD PTR i$38[rsp]
	mov	rdx, rcx
	lea	rcx, QWORD PTR Result$36[rsp]
	call	??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
	mov	rdi, rax
	mov	rax, QWORD PTR tv300[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN20@perf
$LN21@perf:

; 172  : 
; 173  : 			std::clock_t End = clock();

	call	QWORD PTR __imp_clock
	mov	DWORD PTR End$39[rsp], eax

; 174  : 
; 175  : 			printf("glm::log2<vec4>: %ld clocks\n", End - Begin);

	mov	eax, DWORD PTR Begin$37[rsp]
	mov	ecx, DWORD PTR End$39[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG61988
	call	printf
	npad	1

; 176  : 		}

	lea	rcx, QWORD PTR Result$36[rsp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >

; 177  : 
; 178  : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 179  : 	}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?perf@log2_@@YAH_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 728				; 000002d8H
	pop	rdi
	pop	rsi
	ret	0
?perf@log2_@@YAH_K@Z ENDP				; log2_::perf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$11[rbp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$15[rbp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$19[rbp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$24[rbp]
	call	??1?$vector@U?$tvec4@K$0A@@glm@@V?$allocator@U?$tvec4@K$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >::~vector<glm::tvec4<unsigned long,0>,std::allocator<glm::tvec4<unsigned long,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$28[rbp]
	call	??1?$vector@U?$tvec4@H$0A@@glm@@V?$allocator@U?$tvec4@H$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >::~vector<glm::tvec4<int,0>,std::allocator<glm::tvec4<int,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$32[rbp]
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
Result$11 = 56
Begin$12 = 100
i$13 = 104
End$14 = 108
Result$15 = 120
Begin$16 = 164
i$17 = 168
End$18 = 172
Result$19 = 184
Begin$20 = 228
i$21 = 232
Tmp$22 = 248
End$23 = 276
Result$24 = 296
Begin$25 = 340
i$26 = 344
End$27 = 352
Result$28 = 376
Begin$29 = 420
i$30 = 424
End$31 = 432
Result$32 = 456
Begin$33 = 500
i$34 = 504
End$35 = 512
Result$36 = 536
Begin$37 = 580
i$38 = 584
End$39 = 588
$T40 = 592
$T41 = 608
$T42 = 624
$T43 = 640
$T44 = 656
tv76 = 672
tv94 = 680
tv159 = 688
tv281 = 696
tv300 = 704
Count$ = 752
?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA PROC		; `log2_::perf'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Result$36[rbp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??perf@log2_@@YAH_K@Z@4HA ENDP		; `log2_::perf'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z PROC ; glm::equal<unsigned __int64,0,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@_K$0A@@glm@@SAHXZ	; glm::tvec4<unsigned __int64,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@_K$0A@@glm@@SAHXZ	; glm::tvec4<unsigned __int64,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@_K$0A@@glm@@SAHXZ	; glm::tvec4<unsigned __int64,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec4<unsigned __int64,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec4<unsigned __int64,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z ENDP ; glm::equal<unsigned __int64,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 112
x$ = 120
y$ = 128
??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z PROC ; glm::equal<unsigned __int64,0,glm::tvec3>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec3@_K$0A@@glm@@SAHXZ	; glm::tvec3<unsigned __int64,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec3@_K$0A@@glm@@SAHXZ	; glm::tvec3<unsigned __int64,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec3<bool,0>::tvec3<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec3@_K$0A@@glm@@SAHXZ	; glm::tvec3<unsigned __int64,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec3<unsigned __int64,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec3<unsigned __int64,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z ENDP ; glm::equal<unsigned __int64,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z PROC ; glm::equal<unsigned __int64,0,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@_K$0A@@glm@@SAHXZ	; glm::tvec2<unsigned __int64,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@_K$0A@@glm@@SAHXZ	; glm::tvec2<unsigned __int64,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,0>::tvec2<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@_K$0A@@glm@@SAHXZ	; glm::tvec2<unsigned __int64,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec2<unsigned __int64,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec2<unsigned __int64,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z ENDP ; glm::equal<unsigned __int64,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z PROC ; glm::equal<unsigned __int64,0,glm::tvec1>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec1@_K$0A@@glm@@SAHXZ	; glm::tvec1<unsigned __int64,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec1@_K$0A@@glm@@SAHXZ	; glm::tvec1<unsigned __int64,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec1<bool,0>::tvec1<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec1@_K$0A@@glm@@SAHXZ	; glm::tvec1<unsigned __int64,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec1<unsigned __int64,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z	; glm::tvec1<unsigned __int64,0>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec1<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, BYTE PTR Result$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z ENDP ; glm::equal<unsigned __int64,0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z PROC ; glm::log2<unsigned __int64,0,glm::tvec4>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@_K$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec4,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z ENDP ; glm::log2<unsigned __int64,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z PROC			; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0>, COMDAT

; 188  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z ENDP			; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z PROC		; glm::tvec4<unsigned __int64,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_K$0A@@glm@@SAHXZ	; glm::tvec4<unsigned __int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_K$0A@@glm@@QEBAAEB_KH@Z ENDP		; glm::tvec4<unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_K$0A@@glm@@SAHXZ PROC			; glm::tvec4<unsigned __int64,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_K$0A@@glm@@SAHXZ ENDP			; glm::tvec4<unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z PROC ; glm::log2<unsigned __int64,0,glm::tvec3>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@_K$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec3,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z ENDP ; glm::log2<unsigned __int64,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z PROC			; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0>, COMDAT

; 65   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(scalar), y(scalar), z(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 65   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z ENDP			; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z PROC		; glm::tvec3<unsigned __int64,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_K$0A@@glm@@SAHXZ	; glm::tvec3<unsigned __int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_K$0A@@glm@@QEBAAEB_KH@Z ENDP		; glm::tvec3<unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_K$0A@@glm@@SAHXZ PROC			; glm::tvec3<unsigned __int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_K$0A@@glm@@SAHXZ ENDP			; glm::tvec3<unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z PROC ; glm::log2<unsigned __int64,0,glm::tvec2>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@_K$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec2,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z ENDP ; glm::log2<unsigned __int64,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z PROC			; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0>, COMDAT

; 52   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z ENDP			; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z PROC		; glm::tvec2<unsigned __int64,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_K$0A@@glm@@SAHXZ	; glm::tvec2<unsigned __int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_K$0A@@glm@@QEBAAEB_KH@Z ENDP		; glm::tvec2<unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_K$0A@@glm@@SAHXZ PROC			; glm::tvec2<unsigned __int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_K$0A@@glm@@SAHXZ ENDP			; glm::tvec2<unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z PROC ; glm::log2<unsigned __int64,0,glm::tvec1>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@_K$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@_K$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<unsigned __int64,0,glm::tvec1,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z ENDP ; glm::log2<unsigned __int64,0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z PROC			; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>, COMDAT

; 39   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 		: x(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR scalar$[rsp]
	mov	QWORD PTR [rax], rcx

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z ENDP			; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z PROC		; glm::tvec1<unsigned __int64,0>::operator[], COMDAT

; 78   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec1@_K$0A@@glm@@SAHXZ	; glm::tvec1<unsigned __int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 79					; 0000004fH
	lea	rdx, OFFSET FLAT:??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 80   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 81   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec1@_K$0A@@glm@@QEBAAEB_KH@Z ENDP		; glm::tvec1<unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.hpp
;	COMDAT ?length@?$tvec1@_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec1@_K$0A@@glm@@SAHXZ PROC			; glm::tvec1<unsigned __int64,0>::length, COMDAT

; 81   : 		GLM_FUNC_DECL static length_type length(){return 1;}

$LN3:
	push	rdi
	mov	eax, 1
	pop	rdi
	ret	0
?length@?$tvec1@_K$0A@@glm@@SAHXZ ENDP			; glm::tvec1<unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@_K@glm@@YA_K_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
x$ = 64
??$log2@_K@glm@@YA_K_K@Z PROC				; glm::log2<unsigned __int64>, COMDAT

; 109  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 110  : 		return log2(tvec1<genType>(x)).x;

	mov	rdx, QWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec1>
	mov	rax, QWORD PTR [rax]

; 111  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$log2@_K@glm@@YA_K_K@Z ENDP				; glm::log2<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec4>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$0A@@glm@@SAHXZ PROC			; glm::tvec4<bool,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec3>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec3<bool,0>::tvec3<bool,0>, COMDAT

; 60   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec3<bool,0>::tvec3<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec3<bool,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec3<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec3<bool,0>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec3<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_N$0A@@glm@@SAHXZ PROC			; glm::tvec3<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec3<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 112
x$ = 120
y$ = 128
??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec3>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec3@H$0A@@glm@@SAHXZ	; glm::tvec3<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec3@H$0A@@glm@@SAHXZ	; glm::tvec3<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec3<bool,0>::tvec3<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec3@H$0A@@glm@@SAHXZ	; glm::tvec3<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec3<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec3<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec2>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec2<bool,0>::tvec2<bool,0>, COMDAT

; 47   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec2<bool,0>::tvec2<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$0A@@glm@@SAHXZ PROC			; glm::tvec2<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,0>::tvec2<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec1>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec1@_N$0A@@glm@@SAHXZ	; glm::tvec1<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec1<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec1<bool,0>::tvec1<bool,0>, COMDAT

; 34   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec1<bool,0>::tvec1<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec1<bool,0>::operator[], COMDAT

; 78   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec1@_N$0A@@glm@@SAHXZ	; glm::tvec1<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 79					; 0000004fH
	lea	rdx, OFFSET FLAT:??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 80   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 81   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec1@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec1<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec1<bool,0>::operator[], COMDAT

; 71   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 72   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec1@_N$0A@@glm@@SAHXZ	; glm::tvec1<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 72					; 00000048H
	lea	rdx, OFFSET FLAT:??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 73   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 74   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec1<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.hpp
;	COMDAT ?length@?$tvec1@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec1@_N$0A@@glm@@SAHXZ PROC			; glm::tvec1<bool,0>::length, COMDAT

; 81   : 		GLM_FUNC_DECL static length_type length(){return 1;}

$LN3:
	push	rdi
	mov	eax, 1
	pop	rdi
	ret	0
?length@?$tvec1@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec1<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec1>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec1@H$0A@@glm@@SAHXZ	; glm::tvec1<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec1@H$0A@@glm@@SAHXZ	; glm::tvec1<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec1@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec1<bool,0>::tvec1<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec1@H$0A@@glm@@SAHXZ	; glm::tvec1<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec1<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec1<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec1@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec1<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, BYTE PTR Result$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z PROC ; glm::log2<int,0,glm::tvec4>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@H$0A@Utvec4@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec4@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec4,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z ENDP ; glm::log2<int,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z PROC ; glm::log2<int,0,glm::tvec3>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@H$0A@Utvec3@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec3@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec3,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z ENDP ; glm::log2<int,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z PROC ; glm::log2<int,0,glm::tvec2>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@H$0A@Utvec2@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec2@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec2,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z ENDP ; glm::log2<int,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z PROC ; glm::log2<int,0,glm::tvec1>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@H$0A@Utvec1@glm@@$0A@$0A@@detail@glm@@SA?AU?$tvec1@H$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<int,0,glm::tvec1,0,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z ENDP ; glm::log2<int,0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@H@glm@@YAHH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
x$ = 64
??$log2@H@glm@@YAHH@Z PROC				; glm::log2<int>, COMDAT

; 109  : 	{

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H

; 110  : 		return log2(tvec1<genType>(x)).x;

	mov	edx, DWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec1@H$0A@@glm@@QEAA@H@Z		; glm::tvec1<int,0>::tvec1<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec1>
	mov	eax, DWORD PTR [rax]

; 111  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$log2@H@glm@@YAHH@Z ENDP				; glm::log2<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z PROC ; glm::tvec4<int,0>::tvec4<int,0><float,0>, COMDAT

; 323  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 319  : 		x(static_cast<T>(v.x)),

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 320  : 		y(static_cast<T>(v.y)),

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+4], eax

; 321  : 		z(static_cast<T>(v.z)),

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax

; 322  : 		w(static_cast<T>(v.w))

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+12]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+12], eax

; 323  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ENDP ; glm::tvec4<int,0>::tvec4<int,0><float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 193  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR d$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 188  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@H$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+12], 0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec4<int,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec4<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@H$0A@@glm@@SAHXZ PROC			; glm::tvec4<int,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@H$0A@@glm@@SAHXZ ENDP			; glm::tvec4<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z PROC ; glm::log2<float,0,glm::tvec4>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@M$0A@Utvec4@glm@@$00$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec4,1,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ENDP ; glm::log2<float,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z PROC ; glm::tvec3<int,0>::tvec3<int,0><float,0>, COMDAT

; 130  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 127  : 		x(static_cast<T>(v.x)),

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 128  : 		y(static_cast<T>(v.y)),

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+4], eax

; 129  : 		z(static_cast<T>(v.z))

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax

; 130  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::tvec3<int,0>::tvec3<int,0><float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z PROC			; glm::tvec3<int,0>::tvec3<int,0>, COMDAT

; 70   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z ENDP			; glm::tvec3<int,0>::tvec3<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec3@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec3<int,0>::tvec3<int,0>, COMDAT

; 65   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(scalar), y(scalar), z(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 65   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec3<int,0>::tvec3<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec3<int,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@H$0A@@glm@@SAHXZ	; glm::tvec3<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec3<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@H$0A@@glm@@SAHXZ PROC			; glm::tvec3<int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@H$0A@@glm@@SAHXZ ENDP			; glm::tvec3<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z PROC ; glm::log2<float,0,glm::tvec3>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@M$0A@Utvec3@glm@@$00$0A@@detail@glm@@SA?AU?$tvec3@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec3,1,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z ENDP ; glm::log2<float,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 70   : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec3@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 65   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(scalar), y(scalar), z(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 65   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z PROC ; glm::tvec2<int,0>::tvec2<int,0><float,0>, COMDAT

; 82   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 80   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 81   : 		, y(static_cast<T>(v.y))

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+4], eax

; 82   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::tvec2<int,0>::tvec2<int,0><float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@H$0A@@glm@@QEAA@HH@Z PROC			; glm::tvec2<int,0>::tvec2<int,0>, COMDAT

; 57   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s1$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s2$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$0A@@glm@@QEAA@HH@Z ENDP			; glm::tvec2<int,0>::tvec2<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec2<int,0>::tvec2<int,0>, COMDAT

; 52   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec2<int,0>::tvec2<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec2<int,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec2<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@H$0A@@glm@@SAHXZ PROC			; glm::tvec2<int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@H$0A@@glm@@SAHXZ ENDP			; glm::tvec2<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z PROC ; glm::log2<float,0,glm::tvec2>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@M$0A@Utvec2@glm@@$00$0A@@detail@glm@@SA?AU?$tvec2@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec2,1,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z ENDP ; glm::log2<float,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z PROC ; glm::tvec1<int,0>::tvec1<int,0><float,0>, COMDAT

; 47   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 46   : 		: x(static_cast<T>(v.x))

	mov	rax, QWORD PTR v$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 47   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z ENDP ; glm::tvec1<int,0>::tvec1<int,0><float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$tvec1@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec1@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec1<int,0>::tvec1<int,0>, COMDAT

; 39   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 		: x(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec1@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec1<int,0>::tvec1<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec1<int,0>::operator[], COMDAT

; 78   : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec1@H$0A@@glm@@SAHXZ	; glm::tvec1<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 79					; 0000004fH
	lea	rdx, OFFSET FLAT:??_C@_1LG@CIKOIEGN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 80   : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 81   : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec1@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec1<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.hpp
;	COMDAT ?length@?$tvec1@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec1@H$0A@@glm@@SAHXZ PROC			; glm::tvec1<int,0>::length, COMDAT

; 81   : 		GLM_FUNC_DECL static length_type length(){return 1;}

$LN3:
	push	rdi
	mov	eax, 1
	pop	rdi
	ret	0
?length@?$tvec1@H$0A@@glm@@SAHXZ ENDP			; glm::tvec1<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
x$ = 56
??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z PROC ; glm::log2<float,0,glm::tvec1>, COMDAT

; 115  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 116  : 		return detail::compute_log2<T, P, vecType, std::numeric_limits<T>::is_iec559, detail::is_aligned<P>::value>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_log2@M$0A@Utvec1@glm@@$00$0A@@detail@glm@@SA?AU?$tvec1@M$0A@@3@AEBU43@@Z ; glm::detail::compute_log2<float,0,glm::tvec1,1,0>::call
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 117  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z ENDP ; glm::log2<float,0,glm::tvec1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$tvec1@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec1@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec1<float,0>::tvec1<float,0>, COMDAT

; 39   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 		: x(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0

; 39   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec1@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec1<float,0>::tvec1<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_exponential.inl
;	COMDAT ??$log2@M@glm@@YAMM@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
x$ = 80
??$log2@M@glm@@YAMM@Z PROC				; glm::log2<float>, COMDAT

; 109  : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 64					; 00000040H

; 110  : 		return log2(tvec1<genType>(x)).x;

	movss	xmm1, DWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec1@M$0A@@glm@@QEAA@M@Z		; glm::tvec1<float,0>::tvec1<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec1>
	movss	xmm0, DWORD PTR [rax]

; 111  : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$log2@M@glm@@YAMM@Z ENDP				; glm::log2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_integer.cpp
_TEXT	SEGMENT
Error$ = 32
A0$ = 36
B0$ = 52
C0$ = 88
D0$ = 120
E0$ = 168
A1$ = 196
B1$ = 212
C1$ = 248
D1$ = 280
E1$ = 328
A2$ = 360
B2$ = 376
C2$ = 408
D2$ = 456
E2$ = 504
$T15 = 548
$T16 = 552
$T17 = 556
$T18 = 564
$T19 = 572
$T20 = 584
$T21 = 596
$T22 = 612
$T23 = 628
$T24 = 632
$T25 = 640
$T26 = 652
$T27 = 668
$T28 = 669
$T29 = 671
$T30 = 674
$T31 = 680
$T32 = 688
$T33 = 704
$T34 = 728
$T35 = 760
$T36 = 768
$T37 = 776
$T38 = 792
$T39 = 800
$T40 = 824
$T41 = 832
$T42 = 864
tv154 = 868
tv164 = 872
tv174 = 876
tv184 = 880
tv194 = 884
tv219 = 888
tv264 = 892
tv277 = 896
tv290 = 900
tv303 = 904
?test@log2_@@YAHXZ PROC					; log2_::test

; 19   : 	{

$LN23:
	push	rdi
	sub	rsp, 912				; 00000390H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 220				; 000000dcH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 20   : 		int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 21   : 
; 22   : 		int A0 = static_cast<int>(glm::log2(16.f));

	movss	xmm0, DWORD PTR __real@41800000
	call	??$log2@M@glm@@YAMM@Z			; glm::log2<float>
	cvttss2si eax, xmm0
	mov	DWORD PTR A0$[rsp], eax

; 23   : 		glm::ivec1 B0(glm::log2(glm::vec1(16.f)));

	movss	xmm1, DWORD PTR __real@41800000
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0?$tvec1@M$0A@@glm@@QEAA@M@Z		; glm::tvec1<float,0>::tvec1<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$log2@M$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec1>
	mov	rdx, rax
	lea	rcx, QWORD PTR B0$[rsp]
	call	??$?0M$0A@@?$tvec1@H$0A@@glm@@QEAA@AEBU?$tvec1@M$0A@@1@@Z ; glm::tvec1<int,0>::tvec1<int,0><float,0>

; 24   : 		glm::ivec2 C0(glm::log2(glm::vec2(16.f)));

	movss	xmm1, DWORD PTR __real@41800000
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$log2@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec2>
	mov	rdx, rax
	lea	rcx, QWORD PTR C0$[rsp]
	call	??$?0M$0A@@?$tvec2@H$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<int,0>::tvec2<int,0><float,0>

; 25   : 		glm::ivec3 D0(glm::log2(glm::vec3(16.f)));

	movss	xmm1, DWORD PTR __real@41800000
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@M@Z		; glm::tvec3<float,0>::tvec3<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T20[rsp]
	call	??$log2@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec3>
	mov	rdx, rax
	lea	rcx, QWORD PTR D0$[rsp]
	call	??$?0M$0A@@?$tvec3@H$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<int,0>::tvec3<int,0><float,0>

; 26   : 		glm::ivec4 E0(glm::log2(glm::vec4(16.f)));

	movss	xmm1, DWORD PTR __real@41800000
	lea	rcx, QWORD PTR $T21[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T22[rsp]
	call	??$log2@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ; glm::log2<float,0,glm::tvec4>
	mov	rdx, rax
	lea	rcx, QWORD PTR E0$[rsp]
	call	??$?0M$0A@@?$tvec4@H$0A@@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<int,0>::tvec4<int,0><float,0>

; 27   : 
; 28   : 		int A1 = glm::log2(int(16));

	mov	ecx, 16
	call	??$log2@H@glm@@YAHH@Z			; glm::log2<int>
	mov	DWORD PTR A1$[rsp], eax

; 29   : 		glm::ivec1 B1 = glm::log2(glm::ivec1(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T23[rsp]
	call	??0?$tvec1@H$0A@@glm@@QEAA@H@Z		; glm::tvec1<int,0>::tvec1<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B1$[rsp]
	call	??$log2@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec1>

; 30   : 		glm::ivec2 C1 = glm::log2(glm::ivec2(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T24[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@H@Z		; glm::tvec2<int,0>::tvec2<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR C1$[rsp]
	call	??$log2@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec2>

; 31   : 		glm::ivec3 D1 = glm::log2(glm::ivec3(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$tvec3@H$0A@@glm@@QEAA@H@Z		; glm::tvec3<int,0>::tvec3<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR D1$[rsp]
	call	??$log2@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec3>

; 32   : 		glm::ivec4 E1 = glm::log2(glm::ivec4(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T26[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@H@Z		; glm::tvec4<int,0>::tvec4<int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR E1$[rsp]
	call	??$log2@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@H$0A@@0@AEBU10@@Z ; glm::log2<int,0,glm::tvec4>

; 33   : 
; 34   : 		Error += A0 == A1 ? 0 : 1;

	mov	eax, DWORD PTR A1$[rsp]
	cmp	DWORD PTR A0$[rsp], eax
	jne	SHORT $LN3@test
	mov	DWORD PTR tv154[rsp], 0
	jmp	SHORT $LN4@test
$LN3@test:
	mov	DWORD PTR tv154[rsp], 1
$LN4@test:
	mov	eax, DWORD PTR tv154[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 35   : 		Error += glm::all(glm::equal(B0, B1)) ? 0 : 1;

	lea	r8, QWORD PTR B1$[rsp]
	lea	rdx, QWORD PTR B0$[rsp]
	lea	rcx, QWORD PTR $T27[rsp]
	call	??$equal@H$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec1>
	mov	rcx, rax
	call	??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z ; glm::all<0,glm::tvec1>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test
	mov	DWORD PTR tv164[rsp], 0
	jmp	SHORT $LN6@test
$LN5@test:
	mov	DWORD PTR tv164[rsp], 1
$LN6@test:
	mov	eax, DWORD PTR tv164[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 36   : 		Error += glm::all(glm::equal(C0, C1)) ? 0 : 1;

	lea	r8, QWORD PTR C1$[rsp]
	lea	rdx, QWORD PTR C0$[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??$equal@H$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test
	mov	DWORD PTR tv174[rsp], 0
	jmp	SHORT $LN8@test
$LN7@test:
	mov	DWORD PTR tv174[rsp], 1
$LN8@test:
	mov	eax, DWORD PTR tv174[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 37   : 		Error += glm::all(glm::equal(D0, D1)) ? 0 : 1;

	lea	r8, QWORD PTR D1$[rsp]
	lea	rdx, QWORD PTR D0$[rsp]
	lea	rcx, QWORD PTR $T29[rsp]
	call	??$equal@H$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec3>
	mov	rcx, rax
	call	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test
	mov	DWORD PTR tv184[rsp], 0
	jmp	SHORT $LN10@test
$LN9@test:
	mov	DWORD PTR tv184[rsp], 1
$LN10@test:
	mov	eax, DWORD PTR tv184[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 38   : 		Error += glm::all(glm::equal(E0, E1)) ? 0 : 1;

	lea	r8, QWORD PTR E1$[rsp]
	lea	rdx, QWORD PTR E0$[rsp]
	lea	rcx, QWORD PTR $T30[rsp]
	call	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@test
	mov	DWORD PTR tv194[rsp], 0
	jmp	SHORT $LN12@test
$LN11@test:
	mov	DWORD PTR tv194[rsp], 1
$LN12@test:
	mov	eax, DWORD PTR tv194[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 39   : 
; 40   : 		glm::uint64 A2 = glm::log2(glm::uint64(16));

	mov	ecx, 16
	call	??$log2@_K@glm@@YA_K_K@Z		; glm::log2<unsigned __int64>
	mov	QWORD PTR A2$[rsp], rax

; 41   : 		glm::u64vec1 B2 = glm::log2(glm::u64vec1(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T31[rsp]
	call	??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B2$[rsp]
	call	??$log2@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec1>

; 42   : 		glm::u64vec2 C2 = glm::log2(glm::u64vec2(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T32[rsp]
	call	??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR C2$[rsp]
	call	??$log2@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec2>

; 43   : 		glm::u64vec3 D2 = glm::log2(glm::u64vec3(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T33[rsp]
	call	??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR D2$[rsp]
	call	??$log2@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec3>

; 44   : 		glm::u64vec4 E2 = glm::log2(glm::u64vec4(16));

	mov	edx, 16
	lea	rcx, QWORD PTR $T34[rsp]
	call	??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR E2$[rsp]
	call	??$log2@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_K$0A@@0@AEBU10@@Z ; glm::log2<unsigned __int64,0,glm::tvec4>

; 45   : 
; 46   : 		Error += A2 == glm::uint64(4) ? 0 : 1;

	cmp	QWORD PTR A2$[rsp], 4
	jne	SHORT $LN13@test
	mov	DWORD PTR tv219[rsp], 0
	jmp	SHORT $LN14@test
$LN13@test:
	mov	DWORD PTR tv219[rsp], 1
$LN14@test:
	mov	eax, DWORD PTR tv219[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 47   : 		Error += glm::all(glm::equal(B2, glm::u64vec1(4))) ? 0 : 1;

	mov	edx, 4
	lea	rcx, QWORD PTR $T35[rsp]
	call	??0?$tvec1@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec1<unsigned __int64,0>::tvec1<unsigned __int64,0>
	mov	r8, rax
	lea	rdx, QWORD PTR B2$[rsp]
	lea	rcx, QWORD PTR $T36[rsp]
	call	??$equal@_K$0A@Utvec1@glm@@@glm@@YA?AU?$tvec1@_N$0A@@0@AEBU?$tvec1@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec1>
	mov	rcx, rax
	call	??$all@$0A@Utvec1@glm@@@glm@@YA_NAEBU?$tvec1@_N$0A@@0@@Z ; glm::all<0,glm::tvec1>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@test
	mov	DWORD PTR tv264[rsp], 0
	jmp	SHORT $LN16@test
$LN15@test:
	mov	DWORD PTR tv264[rsp], 1
$LN16@test:
	mov	eax, DWORD PTR tv264[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 48   : 		Error += glm::all(glm::equal(C2, glm::u64vec2(4))) ? 0 : 1;

	mov	edx, 4
	lea	rcx, QWORD PTR $T37[rsp]
	call	??0?$tvec2@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec2<unsigned __int64,0>::tvec2<unsigned __int64,0>
	mov	r8, rax
	lea	rdx, QWORD PTR C2$[rsp]
	lea	rcx, QWORD PTR $T38[rsp]
	call	??$equal@_K$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@test
	mov	DWORD PTR tv277[rsp], 0
	jmp	SHORT $LN18@test
$LN17@test:
	mov	DWORD PTR tv277[rsp], 1
$LN18@test:
	mov	eax, DWORD PTR tv277[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 49   : 		Error += glm::all(glm::equal(D2, glm::u64vec3(4))) ? 0 : 1;

	mov	edx, 4
	lea	rcx, QWORD PTR $T39[rsp]
	call	??0?$tvec3@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec3<unsigned __int64,0>::tvec3<unsigned __int64,0>
	mov	r8, rax
	lea	rdx, QWORD PTR D2$[rsp]
	lea	rcx, QWORD PTR $T40[rsp]
	call	??$equal@_K$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec3>
	mov	rcx, rax
	call	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@test
	mov	DWORD PTR tv290[rsp], 0
	jmp	SHORT $LN20@test
$LN19@test:
	mov	DWORD PTR tv290[rsp], 1
$LN20@test:
	mov	eax, DWORD PTR tv290[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 50   : 		Error += glm::all(glm::equal(E2, glm::u64vec4(4))) ? 0 : 1;

	mov	edx, 4
	lea	rcx, QWORD PTR $T41[rsp]
	call	??0?$tvec4@_K$0A@@glm@@QEAA@_K@Z	; glm::tvec4<unsigned __int64,0>::tvec4<unsigned __int64,0>
	mov	r8, rax
	lea	rdx, QWORD PTR E2$[rsp]
	lea	rcx, QWORD PTR $T42[rsp]
	call	??$equal@_K$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@_K$0A@@0@0@Z ; glm::equal<unsigned __int64,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@test
	mov	DWORD PTR tv303[rsp], 0
	jmp	SHORT $LN22@test
$LN21@test:
	mov	DWORD PTR tv303[rsp], 1
$LN22@test:
	mov	eax, DWORD PTR tv303[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 51   : 
; 52   : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 53   : 	}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test@log2_@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 912				; 00000390H
	pop	rdi
	ret	0
?test@log2_@@YAHXZ ENDP					; log2_::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1078 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1079 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1080 :         _Orphan_all_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1081 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1219 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1220 :     if (!_Myproxy) { // no proxy, already done

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all

; 1221 :         return;

	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1222 :     }
; 1223 : 
; 1224 :     // proxy allocated, drain it
; 1225 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1226 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1227 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1228 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:

; 1229 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1231 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1232 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1233 : #if _HAS_CXX20
; 1234 :     if (_STD is_constant_evaluated()) {
; 1235 :         _Orphan_all_unlocked_v3();
; 1236 :     } else
; 1237 : #endif // _HAS_CXX20
; 1238 :     {
; 1239 :         _Orphan_all_locked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1240 :     }
; 1241 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1242 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1048 : 
; 1049 :     _Container_base12(const _Container_base12&) = delete;
; 1050 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1051 : 
; 1052 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1053 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1054 : 
; 1055 :     template <class _Alloc>
; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1058 :         _Construct_in_place(*_New_proxy, this);
; 1059 :         _Myproxy            = _New_proxy;
; 1060 :         _New_proxy->_Mycont = this;
; 1061 :     }
; 1062 : 
; 1063 :     template <class _Alloc>
; 1064 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1065 :         // pre: no iterators refer to the existing proxy
; 1066 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1067 :         _Construct_in_place(*_New_proxy, this);
; 1068 :         _New_proxy->_Mycont = this;
; 1069 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1070 :     }
; 1071 : 
; 1072 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1040 : 
; 1041 :     const _Container_base12* _Mycont       = nullptr;
; 1042 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 154				; 0000009aH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 154				; 0000009aH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 164				; 000000a4H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 164				; 000000a4H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 166  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 78   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 80   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 317  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 318  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 319  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 193  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 188  : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 57   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s1$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 52   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\cmath
;	COMDAT ?round@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?round@@YAMM@Z PROC					; round, COMDAT

; 238  : _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H

; 239  : #if _HAS_CMATH_INTRINSICS
; 240  :     return __roundf(_Xx);

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	roundf

; 241  : #elif defined(__clang__)
; 242  :     return __builtin_roundf(_Xx);
; 243  : #else // ^^^ defined(__clang__) ^^^ / vvv intrinsics unavailable vvv
; 244  :     return _CSTD roundf(_Xx);
; 245  : #endif // ^^^ intrinsics unavailable ^^^
; 246  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?round@@YAMM@Z ENDP					; round
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\cmath
;	COMDAT ?log2@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 64
?log2@@YAMM@Z PROC					; log2, COMDAT

; 190  : _NODISCARD _Check_return_ inline float log2(_In_ float _Xx) noexcept /* strengthened */ {

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H

; 191  :     return _CSTD log2f(_Xx);

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_log2f

; 192  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?log2@@YAMM@Z ENDP					; log2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 641  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 642  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 643  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Format$ = 96
printf	PROC						; COMDAT

; 956  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax

; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rsp], eax

; 961  :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rsp], 0

; 962  :         return _Result;

	mov	eax, DWORD PTR _Result$[rsp]

; 963  :     }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:printf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 644  :     {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _Stream$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf

; 646  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 90   :     {

$LN3:
	push	rdi

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

	pop	rdi
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
