; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

PUBLIC	?epsilon@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::epsilon
PUBLIC	?epsilon@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::epsilon
PUBLIC	?test_epsilon@@YAHXZ				; test_epsilon
PUBLIC	??$epsilon@M@glm@@YAMXZ				; glm::epsilon<float>
PUBLIC	??$epsilon@N@glm@@YANXZ				; glm::epsilon<double>
PUBLIC	main
PUBLIC	__real@34000000
PUBLIC	__real@3cb0000000000000
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?epsilon@?$numeric_limits@M@std@@SAMXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?epsilon@?$numeric_limits@M@std@@SAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?epsilon@?$numeric_limits@N@std@@SANXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?epsilon@?$numeric_limits@N@std@@SANXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test_epsilon@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?test_epsilon@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$epsilon@M@glm@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$epsilon@M@glm@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$epsilon@N@glm@@YANXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$epsilon@N@glm@@YANXZ
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __real@3cb0000000000000
CONST	SEGMENT
__real@3cb0000000000000 DQ 03cb0000000000000r	; 2.22045e-16
CONST	ENDS
;	COMDAT __real@34000000
CONST	SEGMENT
__real@34000000 DD 034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$epsilon@N@glm@@YANXZ DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$epsilon@M@glm@@YAMXZ DD 020601H
	DD	070025206H
xdata	ENDS
xdata	SEGMENT
$unwind$?test_epsilon@@YAHXZ DD 020601H
	DD	070025206H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?epsilon@?$numeric_limits@N@std@@SANXZ DD 020601H
	DD	070021206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?epsilon@?$numeric_limits@M@std@@SAMXZ DD 020601H
	DD	070021206H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_constants.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 19   : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 20   : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 21   : 
; 22   : 	//float MinHalf = 0.0f;
; 23   : 	//while (glm::half(MinHalf) == glm::half(0.0f))
; 24   : 	//	MinHalf += std::numeric_limits<float>::epsilon();
; 25   : 	Error += test_epsilon();

	call	?test_epsilon@@YAHXZ			; test_epsilon
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 26   : 	
; 27   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 28   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\constants.inl
;	COMDAT ??$epsilon@N@glm@@YANXZ
_TEXT	SEGMENT
??$epsilon@N@glm@@YANXZ PROC				; glm::epsilon<double>, COMDAT

; 10   : 	{

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 11   : 		return std::numeric_limits<genType>::epsilon();

	call	?epsilon@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::epsilon

; 12   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$epsilon@N@glm@@YANXZ ENDP				; glm::epsilon<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtc\constants.inl
;	COMDAT ??$epsilon@M@glm@@YAMXZ
_TEXT	SEGMENT
??$epsilon@M@glm@@YAMXZ PROC				; glm::epsilon<float>, COMDAT

; 10   : 	{

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 11   : 		return std::numeric_limits<genType>::epsilon();

	call	?epsilon@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::epsilon

; 12   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$epsilon@M@glm@@YAMXZ ENDP				; glm::epsilon<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtc\gtc_constants.cpp
_TEXT	SEGMENT
Error$ = 32
Test$1 = 36
Test$2 = 40
?test_epsilon@@YAHXZ PROC				; test_epsilon

; 4    : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 5    : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 6    : 
; 7    : 	{
; 8    : 		float Test = glm::epsilon<float>();

	call	??$epsilon@M@glm@@YAMXZ			; glm::epsilon<float>
	movss	DWORD PTR Test$1[rsp], xmm0

; 9    : 	}
; 10   : 
; 11   : 	{
; 12   : 		double Test = glm::epsilon<double>();

	call	??$epsilon@N@glm@@YANXZ			; glm::epsilon<double>
	movsd	QWORD PTR Test$2[rsp], xmm0

; 13   : 	}
; 14   : 
; 15   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 16   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?test_epsilon@@YAHXZ ENDP				; test_epsilon
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?epsilon@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?epsilon@?$numeric_limits@N@std@@SANXZ PROC		; std::numeric_limits<double>::epsilon, COMDAT

; 920  :     _NODISCARD static constexpr double epsilon() noexcept {

$LN3:
	push	rdi
	sub	rsp, 16

; 921  :         return DBL_EPSILON;

	movsd	xmm0, QWORD PTR __real@3cb0000000000000

; 922  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?epsilon@?$numeric_limits@N@std@@SANXZ ENDP		; std::numeric_limits<double>::epsilon
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?epsilon@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?epsilon@?$numeric_limits@M@std@@SAMXZ PROC		; std::numeric_limits<float>::epsilon, COMDAT

; 872  :     _NODISCARD static constexpr float epsilon() noexcept {

$LN3:
	push	rdi
	sub	rsp, 16

; 873  :         return FLT_EPSILON;

	movss	xmm0, DWORD PTR __real@34000000

; 874  :     }

	add	rsp, 16
	pop	rdi
	ret	0
?epsilon@?$numeric_limits@M@std@@SAMXZ ENDP		; std::numeric_limits<float>::epsilon
_TEXT	ENDS
END
