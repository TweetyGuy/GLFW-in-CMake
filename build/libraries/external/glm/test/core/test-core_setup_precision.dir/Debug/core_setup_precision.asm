; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG75899 DB	'invalid argument', 00H
	ORG $+3
$SG75900 DB	'%s', 00H
	ORG $+1
$SG75904 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG75901 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.32.31326\include\xmemory', 00H
	ORG $+2
$SG75903 DB	00H, 00H
	ORG $+2
$SG70071 DB	'true', 00H
	ORG $+3
$SG75902 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '3', 00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG70073 DB	'false', 00H
CONST	ENDS
PUBLIC	main
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
pdata	SEGMENT
$pdata$?test_mat@@YAHXZ DD imagerel ?test_mat@@YAHXZ
	DD	imagerel ?test_mat@@YAHXZ+94
	DD	imagerel $unwind$?test_mat@@YAHXZ
$pdata$?test_vec@@YAHXZ DD imagerel ?test_vec@@YAHXZ
	DD	imagerel ?test_vec@@YAHXZ+40
	DD	imagerel $unwind$?test_vec@@YAHXZ
$pdata$?test_dvec@@YAHXZ DD imagerel ?test_dvec@@YAHXZ
	DD	imagerel ?test_dvec@@YAHXZ+40
	DD	imagerel $unwind$?test_dvec@@YAHXZ
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
xdata	SEGMENT
$unwind$?test_mat@@YAHXZ DD 020601H
	DD	070021206H
$unwind$?test_vec@@YAHXZ DD 020601H
	DD	070021206H
$unwind$?test_dvec@@YAHXZ DD 020601H
	DD	070021206H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_setup_precision.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 50   : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 51   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 52   : 
; 53   : 	Error += test_mat();

	call	?test_mat@@YAHXZ			; test_mat
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 54   : 	Error += test_vec();

	call	?test_vec@@YAHXZ			; test_vec
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 55   : 	Error += test_dvec();

	call	?test_dvec@@YAHXZ			; test_dvec
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 56   : 	
; 57   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 58   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_setup_precision.cpp
_TEXT	SEGMENT
Error$ = 0
?test_dvec@@YAHXZ PROC					; test_dvec

; 39   : {

	push	rdi
	sub	rsp, 16

; 40   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 41   : 	
; 42   : 	Error += sizeof(glm::dvec2) == sizeof(glm::highp_dvec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 43   : 	Error += sizeof(glm::dvec3) == sizeof(glm::highp_dvec3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 44   : 	Error += sizeof(glm::dvec4) == sizeof(glm::highp_dvec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 45   : 	
; 46   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 47   : }

	add	rsp, 16
	pop	rdi
	ret	0
?test_dvec@@YAHXZ ENDP					; test_dvec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_setup_precision.cpp
_TEXT	SEGMENT
Error$ = 0
?test_vec@@YAHXZ PROC					; test_vec

; 28   : {

	push	rdi
	sub	rsp, 16

; 29   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 30   : 
; 31   : 	Error += sizeof(glm::vec2) == sizeof(glm::highp_vec2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 32   : 	Error += sizeof(glm::vec3) == sizeof(glm::highp_vec3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 33   : 	Error += sizeof(glm::vec4) == sizeof(glm::highp_vec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 34   : 
; 35   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 36   : }

	add	rsp, 16
	pop	rdi
	ret	0
?test_vec@@YAHXZ ENDP					; test_vec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_setup_precision.cpp
_TEXT	SEGMENT
Error$ = 0
?test_mat@@YAHXZ PROC					; test_mat

; 7    : {

	push	rdi
	sub	rsp, 16

; 8    : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 9    : 
; 10   : 	Error += sizeof(glm::mat2) == sizeof(glm::highp_mat2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 11   : 	Error += sizeof(glm::mat3) == sizeof(glm::highp_mat3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 12   : 	Error += sizeof(glm::mat4) == sizeof(glm::highp_mat4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 13   : 
; 14   : 	Error += sizeof(glm::mat2x2) == sizeof(glm::highp_mat2x2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 15   : 	Error += sizeof(glm::mat2x3) == sizeof(glm::highp_mat2x3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 16   : 	Error += sizeof(glm::mat2x4) == sizeof(glm::highp_mat2x4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 17   : 	Error += sizeof(glm::mat3x2) == sizeof(glm::highp_mat3x2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 18   : 	Error += sizeof(glm::mat3x3) == sizeof(glm::highp_mat3x3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 19   : 	Error += sizeof(glm::mat3x4) == sizeof(glm::highp_mat3x4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 20   : 	Error += sizeof(glm::mat4x2) == sizeof(glm::highp_mat4x2) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 21   : 	Error += sizeof(glm::mat4x3) == sizeof(glm::highp_mat4x3) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 22   : 	Error += sizeof(glm::mat4x4) == sizeof(glm::highp_mat4x4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 23   : 
; 24   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 25   : }

	add	rsp, 16
	pop	rdi
	ret	0
?test_mat@@YAHXZ ENDP					; test_mat
_TEXT	ENDS
END
