; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG34985 DB	'invalid argument', 00H
	ORG $+3
$SG34986 DB	'%s', 00H
	ORG $+1
$SG34990 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG34987 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.32.31326\include\xmemory', 00H
	ORG $+2
$SG34989 DB	00H, 00H
	ORG $+10
$SG34988 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '3', 00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
CONST	ENDS
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	?test_vec4_ctor@@YAHXZ				; test_vec4_ctor
PUBLIC	?length@?$tvec4@H$0A@@glm@@SAHXZ		; glm::tvec4<int,0>::length
PUBLIC	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec4<int,0>::operator[]
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@H@Z			; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z		; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec4<int,0>::operator++
PUBLIC	??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec4<int,0>::operator++
PUBLIC	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
PUBLIC	?length@?$tvec4@_N$0A@@glm@@SAHXZ		; glm::tvec4<bool,0>::length
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
PUBLIC	?length@?$tvec4@M$0A@@glm@@SAHXZ		; glm::tvec4<float,0>::length
PUBLIC	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@XZ			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@M@Z			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z		; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec4<float,0>::operator++
PUBLIC	??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ		; glm::tvec4<float,0>::operator--
PUBLIC	??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec4<float,0>::operator++
PUBLIC	??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z		; glm::tvec4<float,0>::operator--
PUBLIC	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
PUBLIC	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back
PUBLIC	?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::size
PUBLIC	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
PUBLIC	??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
PUBLIC	?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero
PUBLIC	?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z ; std::initializer_list<glm::tvec4<float,0> >::initializer_list<glm::tvec4<float,0> >
PUBLIC	?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<float,0> >::begin
PUBLIC	?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<float,0> >::end
PUBLIC	?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ ; std::initializer_list<glm::tvec4<float,0> >::size
PUBLIC	?length@?$tvec4@N$0A@@glm@@SAHXZ		; glm::tvec4<double,0>::length
PUBLIC	??0?$tvec4@N$0A@@glm@@QEAA@XZ			; glm::tvec4<double,0>::tvec4<double,0>
PUBLIC	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
PUBLIC	??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
PUBLIC	??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
PUBLIC	?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
PUBLIC	?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z ; std::initializer_list<glm::tvec4<double,0> >::initializer_list<glm::tvec4<double,0> >
PUBLIC	?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<double,0> >::begin
PUBLIC	?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<double,0> >::end
PUBLIC	?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ ; std::initializer_list<glm::tvec4<double,0> >::size
PUBLIC	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z	; glm::operator==<float,0>
PUBLIC	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z		; glm::tvec2<float,0>::tvec2<float,0><int,int>
PUBLIC	??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,0>
PUBLIC	??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,0>
PUBLIC	??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,0>
PUBLIC	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
PUBLIC	??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,0>
PUBLIC	??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,0>
PUBLIC	??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ; glm::tvec4<float,0>::tvec4<float,0><float,float,0>
PUBLIC	?test_bvec4_ctor@@YAHXZ				; test_bvec4_ctor
PUBLIC	??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z	; glm::operator&&<0>
PUBLIC	??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z	; glm::operator||<0>
PUBLIC	??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z	; glm::operator==<bool,0>
PUBLIC	??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z	; glm::operator!=<bool,0>
PUBLIC	?test_vec4_operators@@YAHXZ			; test_vec4_operators
PUBLIC	??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z	; glm::operator!=<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z	; glm::operator+<float,0>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z	; glm::operator-<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z	; glm::operator*<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z	; glm::operator/<float,0>
PUBLIC	??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z	; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator+<float,0>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator-<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator*<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator/<float,0>
PUBLIC	??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z	; glm::tvec4<float,0>::tvec4<float,0><int,double,int,double>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z	; glm::operator+<float,0>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z	; glm::operator-<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z	; glm::operator*<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z	; glm::operator/<float,0>
PUBLIC	??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z	; glm::tvec4<float,0>::tvec4<float,0><double,double,double,double>
PUBLIC	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec4<float,0>::operator+=<float>
PUBLIC	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator+=<float>
PUBLIC	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec4<float,0>::operator-=<float>
PUBLIC	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator-=<float>
PUBLIC	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec4<float,0>::operator*=<float>
PUBLIC	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator*=<float>
PUBLIC	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec4<float,0>::operator/=<float>
PUBLIC	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator/=<float>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z	; glm::operator-<float,0>
PUBLIC	?test_vec4_equal@@YAHXZ				; test_vec4_equal
PUBLIC	??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z	; glm::operator==<int,0>
PUBLIC	??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z	; glm::operator!=<int,0>
PUBLIC	?test_vec4_size@@YAHXZ				; test_vec4_size
PUBLIC	?test_vec4_swizzle_partial@@YAHXZ		; test_vec4_swizzle_partial
PUBLIC	?test_operator_increment@@YAHXZ			; test_operator_increment
PUBLIC	??0B@heap@@QEAA@XZ				; heap::B::B
PUBLIC	?test@heap@@YAHXZ				; heap::test
PUBLIC	?test_vec4_simd@@YAHXZ				; test_vec4_simd
PUBLIC	??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z	; glm::tvec4<float,0>::tvec4<float,0><long,long,long,long>
PUBLIC	??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ; glm::greaterThanEqual<float,0,glm::tvec4>
PUBLIC	main
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><std::allocator<glm::tvec4<double,0> > const &>
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
PUBLIC	??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<float,0> &>
PUBLIC	??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::emplace_back<glm::tvec4<float,0> >
PUBLIC	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
PUBLIC	??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_one_at_back<glm::tvec4<float,0> >
PUBLIC	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>
PUBLIC	??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ; glm::detail::compute_vec4_equal<float,0,0,32,0>::call
PUBLIC	?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ; glm::detail::compute_vec4_equal<bool,0,0,8,0>::call
PUBLIC	?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<bool,0,0,8,0>::call
PUBLIC	?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<float,0,0,32,0>::call
PUBLIC	?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_add<float,0,0>::call
PUBLIC	?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_sub<float,0,0>::call
PUBLIC	?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_mul<float,0,0>::call
PUBLIC	?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_div<float,0,0>::call
PUBLIC	?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ; glm::detail::compute_vec4_equal<int,0,-1,32,0>::call
PUBLIC	?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<int,0,-1,32,0>::call
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<double,0> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >
PUBLIC	??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<double,0> const *>
PUBLIC	??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
PUBLIC	??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_back_with_unused_capacity<glm::tvec4<float,0> >
PUBLIC	??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >
PUBLIC	??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
PUBLIC	??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<float,0> const *>
PUBLIC	??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z		; std::_Get_size_of_n<32>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> const * const &>
PUBLIC	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
PUBLIC	??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z ; std::_Copy_memmove<glm::tvec4<double,0> const *,glm::tvec4<double,0> *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> const &>
PUBLIC	??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z ; std::_Construct_in_place<glm::tvec4<float,0>,glm::tvec4<float,0> >
PUBLIC	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
PUBLIC	??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >
PUBLIC	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> const * const &>
PUBLIC	??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z ; std::_Copy_memmove<glm::tvec4<float,0> const *,glm::tvec4<float,0> *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> const &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> const *>
PUBLIC	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
PUBLIC	??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<double,0> const &>
PUBLIC	??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> const &>
PUBLIC	??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::addressof<glm::tvec4<float,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
PUBLIC	??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>
PUBLIC	??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >
PUBLIC	??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> const *>
PUBLIC	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
PUBLIC	??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<float,0> const &>
PUBLIC	??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> const &>
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<double,0> *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f600000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd2492492492492
PUBLIC	__real@3fd5555555555555
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe00000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff4000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@400c000000000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@40e00000
PUBLIC	__real@bf800000
PUBLIC	__real@c0000000
PUBLIC	__real@c0400000
PUBLIC	__real@c0800000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__wassert:PROC
EXTRN	memmove:PROC
EXTRN	__imp_clock:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+107
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_ctor@@YAHXZ DD imagerel $LN15
	DD	imagerel $LN15+1667
	DD	imagerel $unwind$?test_vec4_ctor@@YAHXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA DD imagerel ?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA
	DD	imagerel ?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+263
	DD	imagerel $unwind$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_bvec4_ctor@@YAHXZ DD imagerel $LN9
	DD	imagerel $LN9+458
	DD	imagerel $unwind$?test_bvec4_ctor@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z DD imagerel $LN11
	DD	imagerel $LN11+217
	DD	imagerel $unwind$??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z DD imagerel $LN11
	DD	imagerel $LN11+217
	DD	imagerel $unwind$??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_operators@@YAHXZ DD imagerel $LN61
	DD	imagerel $LN61+4697
	DD	imagerel $unwind$?test_vec4_operators@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_equal@@YAHXZ DD imagerel $LN11
	DD	imagerel $LN11+484
	DD	imagerel $unwind$?test_vec4_equal@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_size@@YAHXZ DD imagerel $LN7
	DD	imagerel $LN7+196
	DD	imagerel $unwind$?test_vec4_size@@YAHXZ
$pdata$?test_vec4_swizzle_partial@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?test_vec4_swizzle_partial@@YAHXZ
$pdata$?test_operator_increment@@YAHXZ DD imagerel $LN15
	DD	imagerel $LN15+715
	DD	imagerel $unwind$?test_operator_increment@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0B@heap@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0B@heap@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test@heap@@YAHXZ DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$?test@heap@@YAHXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??test@heap@@YAHXZ@4HA DD imagerel ?dtor$0@?0??test@heap@@YAHXZ@4HA
	DD	imagerel ?dtor$0@?0??test@heap@@YAHXZ@4HA+40
	DD	imagerel $unwind$?dtor$0@?0??test@heap@@YAHXZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_simd@@YAHXZ DD imagerel $LN5
	DD	imagerel $LN5+389
	DD	imagerel $unwind$?test_vec4_simd@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+266
	DD	imagerel $unwind$??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+177
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z DD imagerel $LN6
	DD	imagerel $LN6+328
	DD	imagerel $unwind$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z DD imagerel $LN6
	DD	imagerel $LN6+328
	DD	imagerel $unwind$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+131
	DD	imagerel $unwind$?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+127
	DD	imagerel $unwind$?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+127
	DD	imagerel $unwind$?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+131
	DD	imagerel $unwind$?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+292
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DD imagerel $LN13
	DD	imagerel $LN13+530
	DD	imagerel $unwind$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+292
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@400c000000000000
CONST	SEGMENT
__real@400c000000000000 DQ 0400c000000000000r	; 3.5
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff4000000000000
CONST	SEGMENT
__real@3ff4000000000000 DQ 03ff4000000000000r	; 1.25
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fe00000
CONST	SEGMENT
__real@3fe00000 DD 03fe00000r			; 1.75
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd5555555555555
CONST	SEGMENT
__real@3fd5555555555555 DQ 03fd5555555555555r	; 0.333333
CONST	ENDS
;	COMDAT __real@3fd2492492492492
CONST	SEGMENT
__real@3fd2492492492492 DQ 03fd2492492492492r	; 0.285714
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f600000
CONST	SEGMENT
__real@3f600000 DD 03f600000r			; 0.875
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
CONST	SEGMENT
??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ DB 'x'
	DB	00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'y', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 'f', 00H, 'u'
	DB	00H, 'n', 00H, 'c', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H
	DB	'l', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z DD 031001H
	DD	0700c6210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DB 06H
	DB	00H
	DB	00H
	DB	0f5H, 03H
	DB	02H
	DB	'u', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z DD 021719H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z DB 0aH
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	'h'
	DB	04H
	DB	0b0H
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z
	DD	imagerel $ip2state$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z DD 033511H
	DD	014011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$0 DB 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
	DB	053H
	DB	034H
	DB	00H
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$2 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcVarDesc DD 088H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
	DD	08H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcName$0
	ORG $+144
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcFrameData DD 03H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
	DD	00H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z DB 0aH
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	'h'
	DB	04H
	DB	0b0H
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z
	DD	imagerel $ip2state$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z DD 033511H
	DD	014011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$0 DB 024H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
	DB	053H
	DB	033H
	DB	00H
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$2 DB 05fH ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcVarDesc DD 088H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
	DD	08H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcName$0
	ORG $+144
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcFrameData DD 03H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
	DD	00H
	DQ	FLAT:??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcName$0 DB 052H ; glm::greaterThanEqual<float,0,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::greaterThanEqual<float,0,glm::tvec4>
	DD	04H
	DQ	FLAT:??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcName$0
	ORG $+48
??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcFrameData DD 01H ; glm::greaterThanEqual<float,0,glm::tvec4>
	DD	00H
	DQ	FLAT:??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0B@heap@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z DD 031001H
	DD	0700c6210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec4<float,0>::operator--
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec4<float,0>::operator--
	DD	010H
	DQ	FLAT:??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec4<float,0>::operator--
	DD	00H
	DQ	FLAT:??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec4<float,0>::operator++
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec4<float,0>::operator++
	DD	010H
	DQ	FLAT:??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec4<float,0>::operator++
	DD	00H
	DQ	FLAT:??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<int,0,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<int,0,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<int,0,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcName$0 DB 052H	; glm::tvec4<int,0>::operator++
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc DD 028H	; glm::tvec4<int,0>::operator++
	DD	010H
	DQ	FLAT:??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcName$0
	ORG $+48
??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData DD 01H	; glm::tvec4<int,0>::operator++
	DD	00H
	DQ	FLAT:??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@H@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??test@heap@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA
	DD	00H
	DD	05H
voltbl	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_vec4_ctor@@YAHXZ
	DD	025H
	DD	0669H
voltbl	ENDS
xdata	SEGMENT
$unwind$?test_vec4_ctor@@YAHXZ DD 042d19H
	DD	089010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?test_vec4_ctor@@YAHXZ
	DD	043aH
$cppxdata$?test_vec4_ctor@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?test_vec4_ctor@@YAHXZ
	DD	imagerel $ip2state$?test_vec4_ctor@@YAHXZ
$stateUnwindMap$?test_vec4_ctor@@YAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA
$ip2state$?test_vec4_ctor@@YAHXZ DB 06H
	DB	00H
	DB	00H
	DB	'q', 0dH
	DB	02H
	DB	0a5H, 0bH
	DB	00H
$unwind$?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?test_bvec4_ctor@@YAHXZ DD 031a01H
	DD	0200109H
	DD	07002H
$unwind$?test_vec4_operators@@YAHXZ DD 041b01H
	DD	0121010aH
	DD	060027003H
$unwind$?test_vec4_equal@@YAHXZ DD 031a01H
	DD	0220109H
	DD	07002H
$unwind$?test_vec4_size@@YAHXZ DD 020601H
	DD	07002b206H
$unwind$?test_vec4_swizzle_partial@@YAHXZ DD 021701H
	DD	07002d206H
$unwind$?test_operator_increment@@YAHXZ DD 041b01H
	DD	02b010aH
	DD	060027003H
$unwind$?test@heap@@YAHXZ DD 020611H
	DD	070029206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?test@heap@@YAHXZ
$cppxdata$?test@heap@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?test@heap@@YAHXZ
	DD	imagerel $ip2state$?test@heap@@YAHXZ
$stateUnwindMap$?test@heap@@YAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??test@heap@@YAHXZ@4HA
$ip2state$?test@heap@@YAHXZ DB 06H
	DB	00H
	DB	00H
	DB	':'
	DB	02H
	DB	'X'
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0??test@heap@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?test_vec4_simd@@YAHXZ DD 031a01H
	DD	0260109H
	DD	07002H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
?test_vec4_ctor@@YAHXZ$rtcName$0 DB 041H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$1 DB 042H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$2 DB 061H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$3 DB 076H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$4 DB 061H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$5 DB 076H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$6 DB 041H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$7 DB 042H		; test_vec4_ctor
	DB	00H
	ORG $+2
?test_vec4_ctor@@YAHXZ$rtcName$8 DB 054H		; test_vec4_ctor
	DB	065H
	DB	073H
	DB	074H
	DB	073H
	DB	00H
	ORG $+6
?test_vec4_ctor@@YAHXZ$rtcVarDesc DD 0298H		; test_vec4_ctor
	DD	020H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$8
	DD	0268H
	DD	010H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$7
	DD	0238H
	DD	010H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$6
	DD	0188H
	DD	020H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$5
	DD	0148H
	DD	020H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$4
	DD	0d8H
	DD	020H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$3
	DD	0a8H
	DD	010H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcName$0
	ORG $+432
?test_vec4_ctor@@YAHXZ$rtcFrameData DD 09H		; test_vec4_ctor
	DD	00H
	DQ	FLAT:?test_vec4_ctor@@YAHXZ$rtcVarDesc
?test_bvec4_ctor@@YAHXZ$rtcName$0 DB 041H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcName$1 DB 042H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcName$2 DB 043H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcName$3 DB 044H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcName$4 DB 045H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcName$5 DB 046H		; test_bvec4_ctor
	DB	00H
	ORG $+2
?test_bvec4_ctor@@YAHXZ$rtcFrameData DD 06H		; test_bvec4_ctor
	DD	00H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcVarDesc
?test_vec4_operators@@YAHXZ$rtcName$0 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+6
?test_bvec4_ctor@@YAHXZ$rtcVarDesc DD 0d4H		; test_bvec4_ctor
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$5
	DD	0b4H
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$4
	DD	094H
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$3
	DD	074H
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$2
	DD	054H
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?test_bvec4_ctor@@YAHXZ$rtcName$0
	ORG $+288
?test_vec4_operators@@YAHXZ$rtcName$1 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$2 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$3 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$4 DB 043H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$5 DB 044H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$6 DB 045H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$7 DB 046H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$8 DB 047H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$9 DB 048H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$10 DB 049H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$11 DB 04aH		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$12 DB 04bH		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$13 DB 04cH		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$14 DB 04dH		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$15 DB 04eH		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$16 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$17 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$18 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$19 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$20 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$21 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$22 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$23 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$24 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$25 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$26 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$27 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$28 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$29 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$30 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$31 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$32 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$33 DB 041H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcName$34 DB 042H		; test_vec4_operators
	DB	00H
	ORG $+2
?test_vec4_operators@@YAHXZ$rtcFrameData DD 023H	; test_vec4_operators
	DD	00H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcVarDesc
?test_vec4_equal@@YAHXZ$rtcName$0 DB 041H		; test_vec4_equal
	DB	00H
	ORG $+6
?test_vec4_operators@@YAHXZ$rtcVarDesc DD 06a8H		; test_vec4_operators
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$34
	DD	0678H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$33
	DD	0648H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$32
	DD	0618H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$31
	DD	05e8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$30
	DD	05b8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$29
	DD	0588H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$28
	DD	0558H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$27
	DD	0528H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$26
	DD	04f8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$25
	DD	04c8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$24
	DD	0498H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$23
	DD	0468H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$22
	DD	0438H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$21
	DD	0408H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$20
	DD	03d8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$19
	DD	03a8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$18
	DD	0378H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$17
	DD	0348H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$16
	DD	0318H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$15
	DD	02e8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$14
	DD	02b8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$13
	DD	0288H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$12
	DD	0258H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$11
	DD	0228H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$10
	DD	01f8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$9
	DD	01c8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$8
	DD	0198H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$7
	DD	0168H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$6
	DD	0138H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$5
	DD	0108H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$4
	DD	0d8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$3
	DD	0a8H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?test_vec4_operators@@YAHXZ$rtcName$0
	ORG $+1680
?test_vec4_equal@@YAHXZ$rtcName$1 DB 042H		; test_vec4_equal
	DB	00H
	ORG $+2
?test_vec4_equal@@YAHXZ$rtcName$2 DB 041H		; test_vec4_equal
	DB	00H
	ORG $+2
?test_vec4_equal@@YAHXZ$rtcName$3 DB 042H		; test_vec4_equal
	DB	00H
	ORG $+6
?test_vec4_equal@@YAHXZ$rtcVarDesc DD 0d8H		; test_vec4_equal
	DD	010H
	DQ	FLAT:?test_vec4_equal@@YAHXZ$rtcName$3
	DD	0a8H
	DD	010H
	DQ	FLAT:?test_vec4_equal@@YAHXZ$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:?test_vec4_equal@@YAHXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?test_vec4_equal@@YAHXZ$rtcName$0
	ORG $+192
?test_vec4_equal@@YAHXZ$rtcFrameData DD 04H		; test_vec4_equal
	DD	00H
	DQ	FLAT:?test_vec4_equal@@YAHXZ$rtcVarDesc
?test_vec4_swizzle_partial@@YAHXZ$rtcName$0 DB 041H	; test_vec4_swizzle_partial
	DB	00H
	ORG $+6
?test_vec4_swizzle_partial@@YAHXZ$rtcFrameData DD 01H	; test_vec4_swizzle_partial
	DD	00H
	DQ	FLAT:?test_vec4_swizzle_partial@@YAHXZ$rtcVarDesc
?test_operator_increment@@YAHXZ$rtcName$0 DB 076H	; test_operator_increment
	DB	030H
	DB	00H
	ORG $+5
?test_vec4_swizzle_partial@@YAHXZ$rtcVarDesc DD 048H	; test_vec4_swizzle_partial
	DD	010H
	DQ	FLAT:?test_vec4_swizzle_partial@@YAHXZ$rtcName$0
	ORG $+48
?test_operator_increment@@YAHXZ$rtcName$1 DB 076H	; test_operator_increment
	DB	031H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$2 DB 076H	; test_operator_increment
	DB	032H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$3 DB 076H	; test_operator_increment
	DB	033H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcName$4 DB 076H	; test_operator_increment
	DB	034H
	DB	00H
	ORG $+1
?test_operator_increment@@YAHXZ$rtcVarDesc DD 0f8H	; test_operator_increment
	DD	010H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$4
	DD	0c8H
	DD	010H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$3
	DD	098H
	DD	010H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcName$0
	ORG $+240
?test_operator_increment@@YAHXZ$rtcFrameData DD 05H	; test_operator_increment
	DD	00H
	DQ	FLAT:?test_operator_increment@@YAHXZ$rtcVarDesc
?test_vec4_simd@@YAHXZ$rtcName$0 DB 061H		; test_vec4_simd
	DB	00H
	ORG $+2
?test_vec4_simd@@YAHXZ$rtcName$1 DB 062H		; test_vec4_simd
	DB	00H
	ORG $+2
?test_vec4_simd@@YAHXZ$rtcName$2 DB 063H		; test_vec4_simd
	DB	00H
	ORG $+2
?test_vec4_simd@@YAHXZ$rtcName$3 DB 064H		; test_vec4_simd
	DB	00H
	ORG $+2
?test_vec4_simd@@YAHXZ$rtcVarDesc DD 0d8H		; test_vec4_simd
	DD	010H
	DQ	FLAT:?test_vec4_simd@@YAHXZ$rtcName$3
	DD	0a8H
	DD	010H
	DQ	FLAT:?test_vec4_simd@@YAHXZ$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:?test_vec4_simd@@YAHXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?test_vec4_simd@@YAHXZ$rtcName$0
	ORG $+192
?test_vec4_simd@@YAHXZ$rtcFrameData DD 04H		; test_vec4_simd
	DD	00H
	DQ	FLAT:?test_vec4_simd@@YAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<double,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> const &>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<float,0> const &>
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z PROC ; std::forward<glm::tvec4<float,0> const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z ENDP ; std::forward<glm::tvec4<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<float,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<float,0> const *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<float,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<float,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z PROC ; std::addressof<glm::tvec4<float,0> >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ENDP ; std::addressof<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> const &>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<double,0> *>
	mov	rdx, rax
	mov	ecx, 32					; 00000020H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<double,0> const &>
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z PROC ; std::forward<glm::tvec4<double,0> const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z ENDP ; std::forward<glm::tvec4<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<double,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<double,0> const *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<double,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 130  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG34985
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG34986
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 135				; 00000087H
	lea	rdx, OFFSET FLAT:$SG34987
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 135				; 00000087H
	lea	r8, OFFSET FLAT:$SG34988
	lea	rdx, OFFSET FLAT:$SG34989
	lea	rcx, OFFSET FLAT:$SG34990
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 143  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> const &>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@AEBU?$tvec4@M$0A@@glm@@@std@@YAAEBU?$tvec4@M$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<float,0> const &>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@M$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> const &>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z PROC ; std::_Copy_memmove<glm::tvec4<float,0> const *,glm::tvec4<float,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> const *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEBU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> const *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@M$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_To_address<glm::tvec4<float,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z ENDP ; std::_Copy_memmove<glm::tvec4<float,0> const *,glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<float,0> const * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<float,0> const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<float,0> *,glm::tvec4<float,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<float,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<float,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 80
<_Args_0>$ = 88
??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z PROC ; std::_Construct_in_place<glm::tvec4<float,0>,glm::tvec4<float,0> >, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::addressof<glm::tvec4<float,0> >
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 150  :     }
; 151  : }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z ENDP ; std::_Construct_in_place<glm::tvec4<float,0>,glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> const &>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@AEBU?$tvec4@N$0A@@glm@@@std@@YAAEBU?$tvec4@N$0A@@glm@@AEBU12@@Z ; std::forward<glm::tvec4<double,0> const &>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@N$0A@@glm@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@AEBU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> const &>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z PROC ; std::_Copy_memmove<glm::tvec4<double,0> const *,glm::tvec4<double,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> const *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEBU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> const *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z ENDP ; std::_Copy_memmove<glm::tvec4<double,0> const *,glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<double,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<double,0> const * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<double,0> const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 669  :         }
; 670  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 32		; 00000020H
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 67   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 150  :     }
; 151  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1673 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1674 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1675 :     // note: only called internally from elsewhere in the STL
; 1676 :     using _Ptrval = typename _Alloc::value_type*;
; 1677 : 
; 1678 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> const * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1679 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec4@M$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@M$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<float,0> const * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1680 : 
; 1681 :     if constexpr (conjunction_v<bool_constant<_Iter_copy_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1682 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1683 : #if _HAS_CXX20
; 1684 :         if (!_STD is_constant_evaluated())
; 1685 : #endif // _HAS_CXX20
; 1686 :         {
; 1687 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEBU?$tvec4@M$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEBU12@0PEAU12@@Z ; std::_Copy_memmove<glm::tvec4<float,0> const *,glm::tvec4<float,0> *>

; 1688 :             _Dest += _ULast - _UFirst;

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Dest$[rsp], rax

; 1689 :             return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]
	jmp	SHORT $LN1@Uninitiali

; 1690 :         }
; 1691 :     }
; 1692 : 
; 1693 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >

; 1694 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1695 :         _Backout._Emplace_back(*_UFirst);

	mov	rdx, QWORD PTR _UFirst$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@AEBU?$tvec4@M$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@M$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<glm::tvec4<float,0> const &>

; 1696 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1697 : 
; 1698 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1699 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z PROC ; std::forward<glm::tvec4<float,0> const *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z ENDP ; std::forward<glm::tvec4<float,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec4<float,0> > const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >, COMDAT

; 836  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H

; 837  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 838  :         _Alty& _Al        = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 839  :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 840  :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 841  :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 842  : 
; 843  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 844  : 
; 845  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Whereoff$[rsp], rax

; 846  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 847  : 
; 848  :         if (_Oldsize == max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	cmp	QWORD PTR _Oldsize$[rsp], rax
	jne	SHORT $LN2@Emplace_re

; 849  :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
$LN2@Emplace_re:

; 850  :         }
; 851  : 
; 852  :         const size_type _Newsize     = _Oldsize + 1;

	mov	rax, QWORD PTR _Oldsize$[rsp]
	inc	rax
	mov	QWORD PTR _Newsize$[rsp], rax

; 853  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 854  : 
; 855  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 856  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	imul	rax, QWORD PTR _Whereoff$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	QWORD PTR _Constructed_last$[rsp], rax

; 857  :         pointer _Constructed_first      = _Constructed_last;

	mov	rax, QWORD PTR _Constructed_last$[rsp]
	mov	QWORD PTR _Constructed_first$[rsp], rax

; 858  : 
; 859  :         _TRY_BEGIN
; 860  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	QWORD PTR tv90[rsp], rax
	imul	rcx, QWORD PTR _Whereoff$[rsp], 16
	mov	rdx, QWORD PTR _Newvec$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@U?$tvec4@M$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0>,glm::tvec4<float,0> >

; 861  :         _Constructed_first = _Newvec + _Whereoff;

	imul	rax, QWORD PTR _Whereoff$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Constructed_first$[rsp], rax

; 862  : 
; 863  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rsp], rax
	jne	SHORT $LN4@Emplace_re

; 864  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 865  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >

; 866  :             } else {
; 867  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 868  :             }
; 869  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 870  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rdx, QWORD PTR _Whereptr$[rsp]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >

; 871  :             _Constructed_first = _Newvec;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR _Constructed_first$[rsp], rax

; 872  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	imul	rax, QWORD PTR _Whereoff$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, rax
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rsp]
	call	??$_Uninitialized_move@PEAU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<float,0> *,std::allocator<glm::tvec4<float,0> > >
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 873  :         }
; 874  :         _CATCH_ALL
; 875  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 876  :         _Al.deallocate(_Newvec, _Newcapacity);
; 877  :         _RERAISE;
; 878  :         _CATCH_END
; 879  : 
; 880  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array

; 881  :         return _Newvec + _Whereoff;

	imul	rax, QWORD PTR _Whereoff$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 882  :     }

	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >'::`1'::catch$0

; 874  :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z$0:

; 875  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Constructed_last$[rbp]
	mov	rcx, QWORD PTR _Constructed_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 876  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate

; 877  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 878  :         _CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_back_with_unused_capacity<glm::tvec4<float,0> >, COMDAT

; 813  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 814  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 815  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 816  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 817  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 818  :         if constexpr (conjunction_v<is_nothrow_constructible<_Ty, _Valty...>,
; 819  :                           _Uses_default_construct<_Alloc, _Ty*, _Valty...>>) {
; 820  :             _ASAN_VECTOR_MODIFY(1);
; 821  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U?$tvec4@M$0A@@glm@@U12@@std@@YAXAEAU?$tvec4@M$0A@@glm@@$$QEAU12@@Z ; std::_Construct_in_place<glm::tvec4<float,0>,glm::tvec4<float,0> >

; 822  :         } else {
; 823  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 824  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 825  :             _ASAN_VECTOR_RELEASE_GUARD;
; 826  :         }
; 827  : 
; 828  :         _Orphan_range(_Mylast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range

; 829  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rsp], rax

; 830  :         ++_Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 831  : 
; 832  :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 833  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_back_with_unused_capacity<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1673 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1674 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1675 :     // note: only called internally from elsewhere in the STL
; 1676 :     using _Ptrval = typename _Alloc::value_type*;
; 1677 : 
; 1678 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> const * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1679 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEBU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEBU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> const * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1680 : 
; 1681 :     if constexpr (conjunction_v<bool_constant<_Iter_copy_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1682 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1683 : #if _HAS_CXX20
; 1684 :         if (!_STD is_constant_evaluated())
; 1685 : #endif // _HAS_CXX20
; 1686 :         {
; 1687 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEBU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEBU12@0PEAU12@@Z ; std::_Copy_memmove<glm::tvec4<double,0> const *,glm::tvec4<double,0> *>

; 1688 :             _Dest += _ULast - _UFirst;

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 5
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Dest$[rsp], rax

; 1689 :             return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]
	jmp	SHORT $LN1@Uninitiali

; 1690 :         }
; 1691 :     }
; 1692 : 
; 1693 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >

; 1694 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1695 :         _Backout._Emplace_back(*_UFirst);

	mov	rdx, QWORD PTR _UFirst$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@AEBU?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXAEBU?$tvec4@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> const &>

; 1696 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1697 : 
; 1698 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1699 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z PROC ; std::forward<glm::tvec4<double,0> const *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z ENDP ; std::forward<glm::tvec4<double,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1334 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1335 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1336 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1337 :         }
; 1338 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1320 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 1321 :         // create a new _Container_proxy pointing at _Mycont
; 1322 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 1323 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rsp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1324 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1325 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec4<double,0> > const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec4<double,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 972  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 973  :     // deallocate a plain pointer using an allocator
; 974  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 975  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 976  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 977  :     } else {
; 978  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 979  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 980  :     }
; 981  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z
_TEXT	SEGMENT
tv76 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z PROC ; glm::detail::compute_vec4_nequal<int,0,-1,32,0>::call, COMDAT

; 140  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 141  : 			return (v1.x != v2.x) || (v1.y != v2.y) || (v1.z != v2.z) || (v1.w != v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax+8], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+12]
	cmp	DWORD PTR [rax+12], ecx
	jne	SHORT $LN3@call
	mov	DWORD PTR tv76[rsp], 0
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv76[rsp], 1
$LN4@call:
	movzx	eax, BYTE PTR tv76[rsp]

; 142  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_nequal<int,0,-1,32,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z
_TEXT	SEGMENT
tv76 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z PROC ; glm::detail::compute_vec4_equal<int,0,-1,32,0>::call, COMDAT

; 131  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 132  : 			return (v1.x == v2.x) && (v1.y == v2.y) && (v1.z == v2.z) && (v1.w == v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax+8], ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	mov	ecx, DWORD PTR [rcx+12]
	cmp	DWORD PTR [rax+12], ecx
	jne	SHORT $LN3@call
	mov	DWORD PTR tv76[rsp], 1
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv76[rsp], 0
$LN4@call:
	movzx	eax, BYTE PTR tv76[rsp]

; 133  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_equal<int,0,-1,32,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_div<float,0,0>::call, COMDAT

; 68   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 69   : 			return tvec4<T, P>(a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	divss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	divss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	divss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	divss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 70   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_div<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_mul<float,0,0>::call, COMDAT

; 59   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 60   : 			return tvec4<T, P>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	mulss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	mulss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 61   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_mul<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_sub<float,0,0>::call, COMDAT

; 50   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 51   : 			return tvec4<T, P>(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	subss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	subss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	subss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 52   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_sub<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_add<float,0,0>::call, COMDAT

; 41   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 42   : 			return tvec4<T, P>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	addss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	addss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	addss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 43   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_add<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z
_TEXT	SEGMENT
tv76 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z PROC ; glm::detail::compute_vec4_nequal<float,0,0,32,0>::call, COMDAT

; 140  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 141  : 			return (v1.x != v2.x) || (v1.y != v2.y) || (v1.z != v2.z) || (v1.w != v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR [rcx]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR [rcx+4]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	ucomiss	xmm0, DWORD PTR [rcx+8]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	ucomiss	xmm0, DWORD PTR [rcx+12]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	DWORD PTR tv76[rsp], 0
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv76[rsp], 1
$LN4@call:
	movzx	eax, BYTE PTR tv76[rsp]

; 142  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_nequal<float,0,0,32,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z
_TEXT	SEGMENT
tv84 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z PROC ; glm::detail::compute_vec4_nequal<bool,0,0,8,0>::call, COMDAT

; 140  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 141  : 			return (v1.x != v2.x) || (v1.y != v2.y) || (v1.z != v2.z) || (v1.w != v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+1]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+2]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+3]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	DWORD PTR tv84[rsp], 0
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv84[rsp], 1
$LN4@call:
	movzx	eax, BYTE PTR tv84[rsp]

; 142  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_nequal<bool,0,0,8,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z
_TEXT	SEGMENT
tv84 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z PROC ; glm::detail::compute_vec4_equal<bool,0,0,8,0>::call, COMDAT

; 131  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 132  : 			return (v1.x == v2.x) && (v1.y == v2.y) && (v1.z == v2.z) && (v1.w == v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+1]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+2]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	mov	rcx, QWORD PTR v2$[rsp]
	movzx	ecx, BYTE PTR [rcx+3]
	cmp	eax, ecx
	jne	SHORT $LN3@call
	mov	DWORD PTR tv84[rsp], 1
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv84[rsp], 0
$LN4@call:
	movzx	eax, BYTE PTR tv84[rsp]

; 133  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_equal<bool,0,0,8,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z
_TEXT	SEGMENT
tv76 = 0
v1$ = 32
v2$ = 40
?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z PROC ; glm::detail::compute_vec4_equal<float,0,0,32,0>::call, COMDAT

; 131  : 		{

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 132  : 			return (v1.x == v2.x) && (v1.y == v2.y) && (v1.z == v2.z) && (v1.w == v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR [rcx]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR [rcx+4]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	ucomiss	xmm0, DWORD PTR [rcx+8]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	ucomiss	xmm0, DWORD PTR [rcx+12]
	jp	SHORT $LN3@call
	jne	SHORT $LN3@call
	mov	DWORD PTR tv76[rsp], 1
	jmp	SHORT $LN4@call
$LN3@call:
	mov	DWORD PTR tv76[rsp], 0
$LN4@call:
	movzx	eax, BYTE PTR tv76[rsp]

; 133  : 		}

	add	rsp, 16
	pop	rdi
	ret	0
?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ENDP ; glm::detail::compute_vec4_equal<float,0,0,32,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 256  :     }
; 257  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rsp], rax

; 1058 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1059 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	mov	QWORD PTR [rax], rcx

; 1060 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx

; 1061 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S4$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S4$[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	lea	rax, QWORD PTR $S4$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	$LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	rcx, QWORD PTR <_Val_1>$[rsp]
	call	??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<float,0> const *>
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@PEBU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@M$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<float,0> const *>
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	r8, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR tv88[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_copy@PEBU?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec4<float,0> const *,std::allocator<glm::tvec4<float,0> > >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S4$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S4$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
this$ = 64
<_Val_0>$ = 72
??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_one_at_back<glm::tvec4<float,0> >, COMDAT

; 800  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 801  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 802  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 803  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 804  : 
; 805  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@Emplace_on

; 806  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Emplace_back_with_unused_capacity@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_back_with_unused_capacity<glm::tvec4<float,0> >
	jmp	SHORT $LN1@Emplace_on
$LN2@Emplace_on:

; 807  :         }
; 808  : 
; 809  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	r8, rax
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Emplace_reallocate@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAPEAU?$tvec4@M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_reallocate<glm::tvec4<float,0> >
$LN1@Emplace_on:

; 810  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_one_at_back<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec4<float,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
<_Val_0>$ = 72
??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::emplace_back<glm::tvec4<float,0> >, COMDAT

; 886  :     _CONSTEXPR20 decltype(auto) emplace_back(_Valty&&... _Val) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 887  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 888  :         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@U?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<float,0> >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Emplace_one_at_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAU?$tvec4@M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Emplace_one_at_back<glm::tvec4<float,0> >
	mov	QWORD PTR _Result$[rsp], rax

; 889  : #if _HAS_CXX17
; 890  :         return _Result;
; 891  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 892  :         (void) _Result;
; 893  : #endif // _HAS_CXX17
; 894  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::emplace_back<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec4<float,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec4<float,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S3$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S3$[rsp]
	call	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
	lea	rax, QWORD PTR $S3$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	$LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	rcx, QWORD PTR <_Val_1>$[rsp]
	call	??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<double,0> const *>
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR <_Val_0>$[rsp]
	call	??$forward@PEBU?$tvec4@N$0A@@glm@@@std@@YA$$QEAPEBU?$tvec4@N$0A@@glm@@AEAPEBU12@@Z ; std::forward<glm::tvec4<double,0> const *>
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	r8, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR tv88[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_copy@PEBU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEBU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_copy<glm::tvec4<double,0> const *,std::allocator<glm::tvec4<double,0> > >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S3$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA PROC ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA ENDP ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S3$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
tv88 = 152
this$ = 176
_Count$ = 184
<_Val_0>$ = 192
<_Val_1>$ = 200
?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA PROC ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z@4HA ENDP ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 960  : _NODISCARD constexpr _Size_type _Convert_size(const size_t _Len) noexcept(is_same_v<_Size_type, size_t>) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 961  :     // convert size_t to _Size_type, avoiding truncation
; 962  :     if constexpr (!is_same_v<_Size_type, size_t>) {
; 963  :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 964  :             _Xlength_error("size_t too long for _Size_type");
; 965  :         }
; 966  :     }
; 967  : 
; 968  :     return static_cast<_Size_type>(_Len);

	mov	rax, QWORD PTR _Len$[rsp]

; 969  : }

	pop	rdi
	ret	0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><std::allocator<glm::tvec4<double,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<double,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><std::allocator<glm::tvec4<double,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 984  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 985  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 986  :     using _Ty = typename _Alloc::value_type;
; 987  :     _Ptr->~_Ty();
; 988  :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 989  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 605  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 606  :     // assign _New_val to _Val, return previous _Val
; 607  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rsp], rax

; 608  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR _New_val$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 609  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rsp]

; 610  : }

	add	rsp, 16
	pop	rdi
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 408  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 409  : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 410  : 
; 411  : 	Error += test_vec4_ctor();

	call	?test_vec4_ctor@@YAHXZ			; test_vec4_ctor
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 412  : 	Error += test_bvec4_ctor();

	call	?test_bvec4_ctor@@YAHXZ			; test_bvec4_ctor
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 413  : 	Error += test_vec4_size();

	call	?test_vec4_size@@YAHXZ			; test_vec4_size
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 414  : 	Error += test_vec4_operators();

	call	?test_vec4_operators@@YAHXZ		; test_vec4_operators
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 415  : 	Error += test_vec4_equal();

	call	?test_vec4_equal@@YAHXZ			; test_vec4_equal
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 416  : 	Error += test_vec4_swizzle_partial();

	call	?test_vec4_swizzle_partial@@YAHXZ	; test_vec4_swizzle_partial
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 417  : 	Error += test_vec4_simd();

	call	?test_vec4_simd@@YAHXZ			; test_vec4_simd
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 418  : 	Error += test_operator_increment();

	call	?test_operator_increment@@YAHXZ		; test_operator_increment
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 419  : 	Error += heap::test();

	call	?test@heap@@YAHXZ			; heap::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 420  : 
; 421  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 422  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z PROC ; glm::greaterThanEqual<float,0,glm::tvec4>, COMDAT

; 44   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 45   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@greaterTha
	mov	r8d, 45					; 0000002dH
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@greaterTha:

; 46   : 
; 47   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 48   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@greaterTha
$LN2@greaterTha:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@greaterTha:
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@greaterTha

; 49   : 			Result[i] = x[i] >= y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	comiss	xmm0, DWORD PTR [rax]
	jb	SHORT $LN7@greaterTha
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@greaterTha
$LN7@greaterTha:
	mov	DWORD PTR tv86[rsp], 0
$LN8@greaterTha:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@greaterTha
$LN3@greaterTha:

; 50   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 51   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ENDP ; glm::greaterThanEqual<float,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><long,long,long,long>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><long,long,long,long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 48
a$ = 72
b$ = 120
c$ = 168
d$ = 216
$T7 = 244
$T8 = 260
tv66 = 264
tv68 = 268
tv70 = 272
tv75 = 276
tv77 = 280
tv79 = 284
tv131 = 288
?test_vec4_simd@@YAHXZ PROC				; test_vec4_simd

; 393  : {

$LN5:
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 394  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 395  : 
; 396  : 	glm::vec4 const a(std::clock(), std::clock(), std::clock(), std::clock());

	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv66[rsp], eax
	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv68[rsp], eax
	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv70[rsp], eax
	call	QWORD PTR __imp_clock
	mov	ecx, DWORD PTR tv66[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv68[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv70[rsp]
	mov	r8d, ecx
	mov	edx, eax
	lea	rcx, QWORD PTR a$[rsp]
	call	??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z ; glm::tvec4<float,0>::tvec4<float,0><long,long,long,long>

; 397  : 	glm::vec4 const b(std::clock(), std::clock(), std::clock(), std::clock());

	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv75[rsp], eax
	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv77[rsp], eax
	call	QWORD PTR __imp_clock
	mov	DWORD PTR tv79[rsp], eax
	call	QWORD PTR __imp_clock
	mov	ecx, DWORD PTR tv75[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv77[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv79[rsp]
	mov	r8d, ecx
	mov	edx, eax
	lea	rcx, QWORD PTR b$[rsp]
	call	??$?0JJJJ@?$tvec4@M$0A@@glm@@QEAA@JJJJ@Z ; glm::tvec4<float,0>::tvec4<float,0><long,long,long,long>

; 398  : 
; 399  : 	glm::vec4 const c(b * a);

	lea	r8, QWORD PTR a$[rsp]
	lea	rdx, QWORD PTR b$[rsp]
	lea	rcx, QWORD PTR c$[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator*<float,0>

; 400  : 	glm::vec4 const d(a + c);

	lea	r8, QWORD PTR c$[rsp]
	lea	rdx, QWORD PTR a$[rsp]
	lea	rcx, QWORD PTR d$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>

; 401  : 
; 402  : 	Error += glm::all(glm::greaterThanEqual(d, glm::vec4(0))) ? 0 : 1;

	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	lea	rdx, QWORD PTR d$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$greaterThanEqual@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ; glm::greaterThanEqual<float,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec4_
	mov	DWORD PTR tv131[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN3@test_vec4_:
	mov	DWORD PTR tv131[rsp], 1
$LN4@test_vec4_:
	mov	eax, DWORD PTR tv131[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 403  : 
; 404  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 405  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_simd@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
?test_vec4_simd@@YAHXZ ENDP				; test_vec4_simd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 32
p$ = 40
$T1 = 48
$T2 = 56
$T3 = 64
tv78 = 72
?test@heap@@YAHXZ PROC					; heap::test

; 382  : 	{

$LN6:
	push	rdi
	sub	rsp, 80					; 00000050H

; 383  : 		int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 384  : 
; 385  : 		A* p = new B;

	mov	ecx, 24
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN3@test
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0B@heap@@QEAA@XZ
	mov	QWORD PTR tv78[rsp], rax
	jmp	SHORT $LN4@test
$LN3@test:
	mov	QWORD PTR tv78[rsp], 0
$LN4@test:
	mov	rax, QWORD PTR tv78[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR p$[rsp], rax

; 386  : 		delete p;

	mov	rax, QWORD PTR p$[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	edx, 4
	mov	rcx, QWORD PTR $T3[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete

; 387  : 
; 388  : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 389  : 	}

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?test@heap@@YAHXZ ENDP					; heap::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
p$ = 40
$T1 = 48
$T2 = 56
$T3 = 64
tv78 = 72
?dtor$0@?0??test@heap@@YAHXZ@4HA PROC			; `heap::test'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	edx, 24
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??test@heap@@YAHXZ@4HA ENDP			; `heap::test'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0B@heap@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0B@heap@@QEAA@XZ PROC					; heap::B::B, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0B@heap@@QEAA@XZ ENDP					; heap::B::B
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 32
v0$ = 56
v1$ = 104
v2$ = 152
v3$ = 200
v4$ = 248
i0$ = 276
i1$ = 280
i2$ = 284
i3$ = 288
i4$ = 292
$T8 = 296
$T9 = 300
$T10 = 304
tv80 = 308
tv90 = 312
tv132 = 316
tv137 = 320
tv140 = 324
tv143 = 328
?test_operator_increment@@YAHXZ PROC			; test_operator_increment

; 342  : {

$LN15:
	push	rsi
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 343  : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 344  : 
; 345  : 	glm::ivec4 v0(1);

	mov	edx, 1
	lea	rcx, QWORD PTR v0$[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@H@Z		; glm::tvec4<int,0>::tvec4<int,0>

; 346  : 	glm::ivec4 v1(v0);

	lea	rax, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR v0$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 347  : 	glm::ivec4 v2(v0);

	lea	rax, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR v0$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 348  : 	glm::ivec4 v3 = ++v1;

	lea	rcx, QWORD PTR v1$[rsp]
	call	??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<int,0>::operator++
	lea	rcx, QWORD PTR v3$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 349  : 	glm::ivec4 v4 = v2++;

	xor	r8d, r8d
	lea	rdx, QWORD PTR v4$[rsp]
	lea	rcx, QWORD PTR v2$[rsp]
	call	??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec4<int,0>::operator++

; 350  : 
; 351  : 	Error += glm::all(glm::equal(v0, v4)) ? 0 : 1;

	lea	r8, QWORD PTR v4$[rsp]
	lea	rdx, QWORD PTR v0$[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_opera
	mov	DWORD PTR tv80[rsp], 0
	jmp	SHORT $LN4@test_opera
$LN3@test_opera:
	mov	DWORD PTR tv80[rsp], 1
$LN4@test_opera:
	mov	eax, DWORD PTR tv80[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 352  : 	Error += glm::all(glm::equal(v1, v2)) ? 0 : 1;

	lea	r8, QWORD PTR v2$[rsp]
	lea	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_opera
	mov	DWORD PTR tv90[rsp], 0
	jmp	SHORT $LN6@test_opera
$LN5@test_opera:
	mov	DWORD PTR tv90[rsp], 1
$LN6@test_opera:
	mov	eax, DWORD PTR tv90[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 353  : 	Error += glm::all(glm::equal(v1, v3)) ? 0 : 1;

	lea	r8, QWORD PTR v3$[rsp]
	lea	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_opera
	mov	DWORD PTR tv132[rsp], 0
	jmp	SHORT $LN8@test_opera
$LN7@test_opera:
	mov	DWORD PTR tv132[rsp], 1
$LN8@test_opera:
	mov	eax, DWORD PTR tv132[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 354  : 
; 355  : 	int i0(1);

	mov	DWORD PTR i0$[rsp], 1

; 356  : 	int i1(i0);

	mov	eax, DWORD PTR i0$[rsp]
	mov	DWORD PTR i1$[rsp], eax

; 357  : 	int i2(i0);

	mov	eax, DWORD PTR i0$[rsp]
	mov	DWORD PTR i2$[rsp], eax

; 358  : 	int i3 = ++i1;

	mov	eax, DWORD PTR i1$[rsp]
	inc	eax
	mov	DWORD PTR i1$[rsp], eax
	mov	eax, DWORD PTR i1$[rsp]
	mov	DWORD PTR i3$[rsp], eax

; 359  : 	int i4 = i2++;

	mov	eax, DWORD PTR i2$[rsp]
	mov	DWORD PTR i4$[rsp], eax
	mov	eax, DWORD PTR i2$[rsp]
	inc	eax
	mov	DWORD PTR i2$[rsp], eax

; 360  : 
; 361  : 	Error += i0 == i4 ? 0 : 1;

	mov	eax, DWORD PTR i4$[rsp]
	cmp	DWORD PTR i0$[rsp], eax
	jne	SHORT $LN9@test_opera
	mov	DWORD PTR tv137[rsp], 0
	jmp	SHORT $LN10@test_opera
$LN9@test_opera:
	mov	DWORD PTR tv137[rsp], 1
$LN10@test_opera:
	mov	eax, DWORD PTR tv137[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 362  : 	Error += i1 == i2 ? 0 : 1;

	mov	eax, DWORD PTR i2$[rsp]
	cmp	DWORD PTR i1$[rsp], eax
	jne	SHORT $LN11@test_opera
	mov	DWORD PTR tv140[rsp], 0
	jmp	SHORT $LN12@test_opera
$LN11@test_opera:
	mov	DWORD PTR tv140[rsp], 1
$LN12@test_opera:
	mov	eax, DWORD PTR tv140[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 363  : 	Error += i1 == i3 ? 0 : 1;

	mov	eax, DWORD PTR i3$[rsp]
	cmp	DWORD PTR i1$[rsp], eax
	jne	SHORT $LN13@test_opera
	mov	DWORD PTR tv143[rsp], 0
	jmp	SHORT $LN14@test_opera
$LN13@test_opera:
	mov	DWORD PTR tv143[rsp], 1
$LN14@test_opera:
	mov	eax, DWORD PTR tv143[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 364  : 
; 365  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 366  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_operator_increment@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 344				; 00000158H
	pop	rdi
	pop	rsi
	ret	0
?test_operator_increment@@YAHXZ ENDP			; test_operator_increment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 48
A$ = 72
?test_vec4_swizzle_partial@@YAHXZ PROC			; test_vec4_swizzle_partial

; 305  : {

$LN3:
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 306  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 307  : 
; 308  : 	glm::vec4 A(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR A$[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 309  : 
; 310  : #	if GLM_HAS_UNRESTRICTED_UNIONS && defined(GLM_SWIZZLE_RELAX)
; 311  : 	{
; 312  : 		glm::vec4 B(A.xy, A.zw);
; 313  : 		Error += A == B ? 0 : 1;
; 314  : 	}
; 315  : 	{
; 316  : 		glm::vec4 B(A.xy, 3.0f, 4.0f);
; 317  : 		Error += A == B ? 0 : 1;
; 318  : 	}
; 319  : 	{
; 320  : 		glm::vec4 B(1.0f, A.yz, 4.0f);
; 321  : 		Error += A == B ? 0 : 1;
; 322  : 	}
; 323  : 	{
; 324  : 		glm::vec4 B(1.0f, 2.0f, A.zw);
; 325  : 		Error += A == B ? 0 : 1;
; 326  : 	}
; 327  : 
; 328  : 	{
; 329  : 		glm::vec4 B(A.xyz, 4.0f);
; 330  : 		Error += A == B ? 0 : 1;
; 331  : 	}
; 332  : 	{
; 333  : 		glm::vec4 B(1.0f, A.yzw);
; 334  : 		Error += A == B ? 0 : 1;
; 335  : 	}
; 336  : #	endif
; 337  : 
; 338  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 339  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_swizzle_partial@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?test_vec4_swizzle_partial@@YAHXZ ENDP			; test_vec4_swizzle_partial
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 32
$T1 = 36
$T2 = 56
tv67 = 88
tv72 = 92
?test_vec4_size@@YAHXZ PROC				; test_vec4_size

; 287  : {

$LN7:
	push	rdi
	sub	rsp, 96					; 00000060H

; 288  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 289  : 
; 290  : 	Error += sizeof(glm::vec4) == sizeof(glm::lowp_vec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 291  : 	Error += sizeof(glm::vec4) == sizeof(glm::mediump_vec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 292  : 	Error += sizeof(glm::vec4) == sizeof(glm::highp_vec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 293  : 	Error += 16 == sizeof(glm::mediump_vec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 294  : 	Error += sizeof(glm::dvec4) == sizeof(glm::lowp_dvec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 295  : 	Error += sizeof(glm::dvec4) == sizeof(glm::mediump_dvec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 296  : 	Error += sizeof(glm::dvec4) == sizeof(glm::highp_dvec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 297  : 	Error += 32 == sizeof(glm::highp_dvec4) ? 0 : 1;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR Error$[rsp], eax

; 298  : 	Error += glm::vec4().length() == 4 ? 0 : 1;

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	eax, 4
	jne	SHORT $LN3@test_vec4_
	mov	DWORD PTR tv67[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN3@test_vec4_:
	mov	DWORD PTR tv67[rsp], 1
$LN4@test_vec4_:
	mov	eax, DWORD PTR tv67[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 299  : 	Error += glm::dvec4().length() == 4 ? 0 : 1;

	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$tvec4@N$0A@@glm@@QEAA@XZ		; glm::tvec4<double,0>::tvec4<double,0>
	call	?length@?$tvec4@N$0A@@glm@@SAHXZ	; glm::tvec4<double,0>::length
	cmp	eax, 4
	jne	SHORT $LN5@test_vec4_
	mov	DWORD PTR tv72[rsp], 0
	jmp	SHORT $LN6@test_vec4_
$LN5@test_vec4_:
	mov	DWORD PTR tv72[rsp], 1
$LN6@test_vec4_:
	mov	eax, DWORD PTR tv72[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 300  : 
; 301  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 302  : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?test_vec4_size@@YAHXZ ENDP				; test_vec4_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z PROC	; glm::operator!=<int,0>, COMDAT

; 950  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 951  : 		return detail::compute_vec4_nequal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_nequal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<int,0,-1,32,0>::call

; 952  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z ENDP	; glm::operator!=<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z PROC	; glm::operator==<int,0>, COMDAT

; 944  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 945  : 		return detail::compute_vec4_equal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_equal@H$0A@$0?0$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@H$0A@@3@0@Z ; glm::detail::compute_vec4_equal<int,0,-1,32,0>::call

; 946  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z ENDP	; glm::operator==<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 48
A$7 = 72
B$8 = 120
A$9 = 168
B$10 = 216
tv79 = 244
tv86 = 248
tv135 = 252
tv142 = 256
?test_vec4_equal@@YAHXZ PROC				; test_vec4_equal

; 266  : {

$LN11:
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 267  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 268  : 
; 269  : 	{
; 270  : 		glm::vec4 const A(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR A$7[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 271  : 		glm::vec4 const B(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR B$8[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 272  : 		Error += A == B ? 0 : 1;

	lea	rdx, QWORD PTR B$8[rsp]
	lea	rcx, QWORD PTR A$7[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec4_
	mov	DWORD PTR tv79[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN3@test_vec4_:
	mov	DWORD PTR tv79[rsp], 1
$LN4@test_vec4_:
	mov	eax, DWORD PTR tv79[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 273  : 		Error += A != B ? 1 : 0;

	lea	rdx, QWORD PTR B$8[rsp]
	lea	rcx, QWORD PTR A$7[rsp]
	call	??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator!=<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec4_
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN6@test_vec4_
$LN5@test_vec4_:
	mov	DWORD PTR tv86[rsp], 0
$LN6@test_vec4_:
	mov	eax, DWORD PTR tv86[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 274  : 	}
; 275  : 
; 276  : 	{
; 277  : 		glm::ivec4 const A(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR A$9[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<int,0>::tvec4<int,0>

; 278  : 		glm::ivec4 const B(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR B$10[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<int,0>::tvec4<int,0>

; 279  : 		Error += A == B ? 0 : 1;

	lea	rdx, QWORD PTR B$10[rsp]
	lea	rcx, QWORD PTR A$9[rsp]
	call	??$?8H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z ; glm::operator==<int,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_vec4_
	mov	DWORD PTR tv135[rsp], 0
	jmp	SHORT $LN8@test_vec4_
$LN7@test_vec4_:
	mov	DWORD PTR tv135[rsp], 1
$LN8@test_vec4_:
	mov	eax, DWORD PTR tv135[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 280  : 		Error += A != B ? 1 : 0;

	lea	rdx, QWORD PTR B$10[rsp]
	lea	rcx, QWORD PTR A$9[rsp]
	call	??$?9H$0A@@glm@@YA_NAEBU?$tvec4@H$0A@@0@0@Z ; glm::operator!=<int,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_vec4_
	mov	DWORD PTR tv142[rsp], 1
	jmp	SHORT $LN10@test_vec4_
$LN9@test_vec4_:
	mov	DWORD PTR tv142[rsp], 0
$LN10@test_vec4_:
	mov	eax, DWORD PTR tv142[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 281  : 	}
; 282  : 
; 283  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 284  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_equal@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 272				; 00000110H
	pop	rdi
	ret	0
?test_vec4_equal@@YAHXZ ENDP				; test_vec4_equal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z PROC	; glm::operator-<float,0>, COMDAT

; 626  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 627  : 		return tvec4<T, P>(0) -= v;

	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, QWORD PTR v$[rsp]
	mov	rcx, rax
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator-=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 628  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator/=<float>, COMDAT

; 432  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 433  : 		return (*this = detail::compute_vec4_div<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_div<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 434  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator/=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
v$ = 104
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec4<float,0>::operator/=<float>, COMDAT

; 446  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 447  : 		return (*this = detail::compute_vec4_div<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(v)));

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_div<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 448  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec4<float,0>::operator/=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator*=<float>, COMDAT

; 411  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 412  : 		return (*this = detail::compute_vec4_mul<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_mul<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 413  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
v$ = 104
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec4<float,0>::operator*=<float>, COMDAT

; 425  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 426  : 		return (*this = detail::compute_vec4_mul<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(v)));

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_mul<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 427  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec4<float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator-=<float>, COMDAT

; 390  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 391  : 		return (*this = detail::compute_vec4_sub<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_sub<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 392  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator-=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
v$ = 104
??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec4<float,0>::operator-=<float>, COMDAT

; 404  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 405  : 		return (*this = detail::compute_vec4_sub<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(v)));

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_sub@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_sub<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 406  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec4<float,0>::operator-=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator+=<float>, COMDAT

; 369  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 370  : 		return (*this = detail::compute_vec4_add<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_add<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 371  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator+=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
v$ = 104
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec4<float,0>::operator+=<float>, COMDAT

; 383  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 384  : 		return (*this = detail::compute_vec4_add<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(v)));

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_add<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 385  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec4<float,0>::operator+=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><double,double,double,double>, COMDAT

; 204  : 	{}

$LN3:
	movsd	QWORD PTR [rsp+32], xmm3
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsd2ss xmm0, QWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsd2ss xmm0, QWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsd2ss xmm0, QWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><double,double,double,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
scalar$ = 88
v$ = 96
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z PROC	; glm::operator/<float,0>, COMDAT

; 736  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 737  : 		return tvec4<T, P>(scalar) /= v;

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, QWORD PTR v$[rsp]
	mov	rcx, rax
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator/=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 738  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
scalar$ = 88
v$ = 96
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z PROC	; glm::operator*<float,0>, COMDAT

; 706  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 707  : 		return tvec4<T, P>(v) *= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator*=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 708  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
scalar$ = 88
v$ = 96
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z PROC	; glm::operator-<float,0>, COMDAT

; 676  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 677  : 		return tvec4<T, P>(scalar) -= v;

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, QWORD PTR v$[rsp]
	mov	rcx, rax
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator-=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 678  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
scalar$ = 88
v$ = 96
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z PROC	; glm::operator+<float,0>, COMDAT

; 646  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 647  : 		return tvec4<T, P>(v) += scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator+=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 648  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,double,int,double>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	movsd	QWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsd2ss xmm0, QWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,double,int,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator/<float,0>, COMDAT

; 724  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 725  : 		return tvec4<T, P>(v) /= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator/=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 726  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 694  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 695  : 		return tvec4<T, P>(v) *= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator*=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 696  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator-<float,0>, COMDAT

; 664  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 665  : 		return tvec4<T, P>(v) -= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator-=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 666  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator+<float,0>, COMDAT

; 634  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 635  : 		return tvec4<T, P>(v) += scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator+=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 636  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	movsd	QWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsd2ss xmm0, QWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z PROC	; glm::operator/<float,0>, COMDAT

; 748  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 749  : 		return tvec4<T, P>(v1) /= v2;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdx, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator/=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 750  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z PROC	; glm::operator*<float,0>, COMDAT

; 718  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 719  : 		return tvec4<T, P>(v1) *= v2;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdx, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator*=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 720  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z PROC	; glm::operator-<float,0>, COMDAT

; 688  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 689  : 		return tvec4<T, P>(v1) -= v2;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdx, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator-=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 690  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator-<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z PROC	; glm::operator+<float,0>, COMDAT

; 658  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 659  : 		return tvec4<T, P>(v1) += v2;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdx, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator+=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 660  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z PROC	; glm::operator!=<float,0>, COMDAT

; 950  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 951  : 		return detail::compute_vec4_nequal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_nequal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<float,0,0,32,0>::call

; 952  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ENDP	; glm::operator!=<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 48
A$38 = 72
B$39 = 120
R$40 = 148
S$41 = 149
A$42 = 168
B$43 = 216
C$44 = 264
D$45 = 312
E$46 = 360
F$47 = 408
G$48 = 456
H$49 = 504
I$50 = 552
J$51 = 600
K$52 = 648
L$53 = 696
M$54 = 744
N$55 = 792
A$56 = 840
B$57 = 888
A$58 = 936
B$59 = 984
A$60 = 1032
B$61 = 1080
A$62 = 1128
B$63 = 1176
B$64 = 1224
A$65 = 1272
B$66 = 1320
A$67 = 1368
B$68 = 1416
A$69 = 1464
B$70 = 1512
A$71 = 1560
B$72 = 1608
A$73 = 1656
B$74 = 1704
$T75 = 1732
$T76 = 1748
$T77 = 1764
$T78 = 1780
$T79 = 1796
$T80 = 1812
$T81 = 1828
$T82 = 1844
$T83 = 1860
$T84 = 1876
$T85 = 1892
$T86 = 1908
$T87 = 1924
$T88 = 1940
$T89 = 1956
$T90 = 1972
$T91 = 1988
$T92 = 2004
$T93 = 2020
$T94 = 2036
$T95 = 2052
$T96 = 2068
$T97 = 2084
$T98 = 2100
$T99 = 2116
$T100 = 2132
$T101 = 2148
$T102 = 2164
tv78 = 2180
tv136 = 2184
tv152 = 2188
tv168 = 2192
tv184 = 2196
tv200 = 2200
tv216 = 2204
tv232 = 2208
tv248 = 2212
tv264 = 2216
tv280 = 2220
tv296 = 2224
tv312 = 2228
tv369 = 2232
tv384 = 2236
tv409 = 2240
tv424 = 2244
tv449 = 2248
tv464 = 2252
tv489 = 2256
tv504 = 2260
tv518 = 2264
tv538 = 2268
tv559 = 2272
tv580 = 2276
tv593 = 2280
tv646 = 2284
tv667 = 2288
tv680 = 2292
?test_vec4_operators@@YAHXZ PROC			; test_vec4_operators

; 130  : {

$LN61:
	push	rsi
	push	rdi
	sub	rsp, 2312				; 00000908H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 566				; 00000236H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 131  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 132  : 	
; 133  : 	{
; 134  : 		glm::vec4 A(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$38[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 135  : 		glm::vec4 B(1.0f);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR B$39[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 136  : 		bool R = A != B;

	lea	rdx, QWORD PTR B$39[rsp]
	lea	rcx, QWORD PTR A$38[rsp]
	call	??$?9M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator!=<float,0>
	mov	BYTE PTR R$40[rsp], al

; 137  : 		bool S = A == B;

	lea	rdx, QWORD PTR B$39[rsp]
	lea	rcx, QWORD PTR A$38[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	mov	BYTE PTR S$41[rsp], al

; 138  : 
; 139  : 		Error += (S && !R) ? 0 : 1;

	movzx	eax, BYTE PTR S$41[rsp]
	test	eax, eax
	je	SHORT $LN3@test_vec4_
	movzx	eax, BYTE PTR R$40[rsp]
	test	eax, eax
	jne	SHORT $LN3@test_vec4_
	mov	DWORD PTR tv78[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN3@test_vec4_:
	mov	DWORD PTR tv78[rsp], 1
$LN4@test_vec4_:
	mov	eax, DWORD PTR tv78[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 140  : 	}
; 141  : 
; 142  : 	{
; 143  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$42[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 144  : 		glm::vec4 B(4.0f, 5.0f, 6.0f, 7.0f);

	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40c00000
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$43[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 145  : 
; 146  : 		glm::vec4 C = A + B;

	lea	r8, QWORD PTR B$43[rsp]
	lea	rdx, QWORD PTR A$42[rsp]
	lea	rcx, QWORD PTR C$44[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>

; 147  : 		Error += C == glm::vec4(5, 7, 9, 11) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 11
	mov	r9d, 9
	mov	r8d, 7
	mov	edx, 5
	lea	rcx, QWORD PTR $T75[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR C$44[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec4_
	mov	DWORD PTR tv136[rsp], 0
	jmp	SHORT $LN6@test_vec4_
$LN5@test_vec4_:
	mov	DWORD PTR tv136[rsp], 1
$LN6@test_vec4_:
	mov	eax, DWORD PTR tv136[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 148  : 
; 149  : 		glm::vec4 D = B - A;

	lea	r8, QWORD PTR A$42[rsp]
	lea	rdx, QWORD PTR B$43[rsp]
	lea	rcx, QWORD PTR D$45[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator-<float,0>

; 150  : 		Error += D == glm::vec4(3, 3, 3, 3) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 3
	mov	r8d, 3
	mov	edx, 3
	lea	rcx, QWORD PTR $T76[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR D$45[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_vec4_
	mov	DWORD PTR tv152[rsp], 0
	jmp	SHORT $LN8@test_vec4_
$LN7@test_vec4_:
	mov	DWORD PTR tv152[rsp], 1
$LN8@test_vec4_:
	mov	eax, DWORD PTR tv152[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 151  : 
; 152  : 		glm::vec4 E = A * B;

	lea	r8, QWORD PTR B$43[rsp]
	lea	rdx, QWORD PTR A$42[rsp]
	lea	rcx, QWORD PTR E$46[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator*<float,0>

; 153  : 		Error += E == glm::vec4(4, 10, 18, 28) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 28
	mov	r9d, 18
	mov	r8d, 10
	mov	edx, 4
	lea	rcx, QWORD PTR $T77[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR E$46[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_vec4_
	mov	DWORD PTR tv168[rsp], 0
	jmp	SHORT $LN10@test_vec4_
$LN9@test_vec4_:
	mov	DWORD PTR tv168[rsp], 1
$LN10@test_vec4_:
	mov	eax, DWORD PTR tv168[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 154  : 
; 155  : 		glm::vec4 F = B / A;

	lea	r8, QWORD PTR A$42[rsp]
	lea	rdx, QWORD PTR B$43[rsp]
	lea	rcx, QWORD PTR F$47[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator/<float,0>

; 156  : 		Error += F == glm::vec4(4, 2.5, 2, 7.0f / 4.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@3fe00000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, 2
	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 4
	lea	rcx, QWORD PTR $T78[rsp]
	call	??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z ; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>
	mov	rdx, rax
	lea	rcx, QWORD PTR F$47[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@test_vec4_
	mov	DWORD PTR tv184[rsp], 0
	jmp	SHORT $LN12@test_vec4_
$LN11@test_vec4_:
	mov	DWORD PTR tv184[rsp], 1
$LN12@test_vec4_:
	mov	eax, DWORD PTR tv184[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 157  : 
; 158  : 		glm::vec4 G = A + 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR A$42[rsp]
	lea	rcx, QWORD PTR G$48[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator+<float,0>

; 159  : 		Error += G == glm::vec4(2, 3, 4, 5) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 5
	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T79[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR G$48[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@test_vec4_
	mov	DWORD PTR tv200[rsp], 0
	jmp	SHORT $LN14@test_vec4_
$LN13@test_vec4_:
	mov	DWORD PTR tv200[rsp], 1
$LN14@test_vec4_:
	mov	eax, DWORD PTR tv200[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 160  : 
; 161  : 		glm::vec4 H = B - 1.0f;

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, QWORD PTR B$43[rsp]
	lea	rcx, QWORD PTR H$49[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator-<float,0>

; 162  : 		Error += H == glm::vec4(3, 4, 5, 6) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 5
	mov	r8d, 4
	mov	edx, 3
	lea	rcx, QWORD PTR $T80[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR H$49[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@test_vec4_
	mov	DWORD PTR tv216[rsp], 0
	jmp	SHORT $LN16@test_vec4_
$LN15@test_vec4_:
	mov	DWORD PTR tv216[rsp], 1
$LN16@test_vec4_:
	mov	eax, DWORD PTR tv216[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 163  : 
; 164  : 		glm::vec4 I = A * 2.0f;

	movss	xmm2, DWORD PTR __real@40000000
	lea	rdx, QWORD PTR A$42[rsp]
	lea	rcx, QWORD PTR I$50[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>

; 165  : 		Error += I == glm::vec4(2, 4, 6, 8) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 6
	mov	r8d, 4
	mov	edx, 2
	lea	rcx, QWORD PTR $T81[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR I$50[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@test_vec4_
	mov	DWORD PTR tv232[rsp], 0
	jmp	SHORT $LN18@test_vec4_
$LN17@test_vec4_:
	mov	DWORD PTR tv232[rsp], 1
$LN18@test_vec4_:
	mov	eax, DWORD PTR tv232[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 166  : 
; 167  : 		glm::vec4 J = B / 2.0f;

	movss	xmm2, DWORD PTR __real@40000000
	lea	rdx, QWORD PTR B$43[rsp]
	lea	rcx, QWORD PTR J$51[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator/<float,0>

; 168  : 		Error += J == glm::vec4(2, 2.5, 3, 3.5) ? 0 : 1;

	movsd	xmm0, QWORD PTR __real@400c000000000000
	movsd	QWORD PTR [rsp+32], xmm0
	mov	r9d, 3
	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 2
	lea	rcx, QWORD PTR $T82[rsp]
	call	??$?0HNHN@?$tvec4@M$0A@@glm@@QEAA@HNHN@Z ; glm::tvec4<float,0>::tvec4<float,0><int,double,int,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR J$51[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@test_vec4_
	mov	DWORD PTR tv248[rsp], 0
	jmp	SHORT $LN20@test_vec4_
$LN19@test_vec4_:
	mov	DWORD PTR tv248[rsp], 1
$LN20@test_vec4_:
	mov	eax, DWORD PTR tv248[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 169  : 
; 170  : 		glm::vec4 K = 1.0f + A;

	lea	r8, QWORD PTR A$42[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR K$52[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator+<float,0>

; 171  : 		Error += K == glm::vec4(2, 3, 4, 5) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 5
	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T83[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR K$52[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@test_vec4_
	mov	DWORD PTR tv264[rsp], 0
	jmp	SHORT $LN22@test_vec4_
$LN21@test_vec4_:
	mov	DWORD PTR tv264[rsp], 1
$LN22@test_vec4_:
	mov	eax, DWORD PTR tv264[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 172  : 
; 173  : 		glm::vec4 L = 1.0f - B;

	lea	r8, QWORD PTR B$43[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR L$53[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator-<float,0>

; 174  : 		Error += L == glm::vec4(-3, -4, -5, -6) ? 0 : 1;

	mov	DWORD PTR [rsp+32], -6
	mov	r9d, -5
	mov	r8d, -4
	mov	edx, -3
	lea	rcx, QWORD PTR $T84[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR L$53[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@test_vec4_
	mov	DWORD PTR tv280[rsp], 0
	jmp	SHORT $LN24@test_vec4_
$LN23@test_vec4_:
	mov	DWORD PTR tv280[rsp], 1
$LN24@test_vec4_:
	mov	eax, DWORD PTR tv280[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 175  : 
; 176  : 		glm::vec4 M = 2.0f * A;

	lea	r8, QWORD PTR A$42[rsp]
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR M$54[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>

; 177  : 		Error += M == glm::vec4(2, 4, 6, 8) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 6
	mov	r8d, 4
	mov	edx, 2
	lea	rcx, QWORD PTR $T85[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR M$54[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@test_vec4_
	mov	DWORD PTR tv296[rsp], 0
	jmp	SHORT $LN26@test_vec4_
$LN25@test_vec4_:
	mov	DWORD PTR tv296[rsp], 1
$LN26@test_vec4_:
	mov	eax, DWORD PTR tv296[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 178  : 
; 179  : 		glm::vec4 N = 2.0f / B;

	lea	r8, QWORD PTR B$43[rsp]
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR N$55[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator/<float,0>

; 180  : 		Error += N == glm::vec4(0.5, 2.0 / 5.0, 2.0 / 6.0, 2.0 / 7.0) ? 0 : 1;

	movsd	xmm0, QWORD PTR __real@3fd2492492492492
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm3, QWORD PTR __real@3fd5555555555555
	movsd	xmm2, QWORD PTR __real@3fd999999999999a
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	lea	rcx, QWORD PTR $T86[rsp]
	call	??$?0NNNN@?$tvec4@M$0A@@glm@@QEAA@NNNN@Z ; glm::tvec4<float,0>::tvec4<float,0><double,double,double,double>
	mov	rdx, rax
	lea	rcx, QWORD PTR N$55[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@test_vec4_
	mov	DWORD PTR tv312[rsp], 0
	jmp	SHORT $LN28@test_vec4_
$LN27@test_vec4_:
	mov	DWORD PTR tv312[rsp], 1
$LN28@test_vec4_:
	mov	eax, DWORD PTR tv312[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 181  : 	}
; 182  : 
; 183  : 	{
; 184  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$56[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 185  : 		glm::vec4 B(4.0f, 5.0f, 6.0f, 7.0f);

	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40c00000
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$57[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 186  : 
; 187  : 		A += B;

	lea	rdx, QWORD PTR B$57[rsp]
	lea	rcx, QWORD PTR A$56[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator+=<float>

; 188  : 		Error += A == glm::vec4(5, 7, 9, 11) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 11
	mov	r9d, 9
	mov	r8d, 7
	mov	edx, 5
	lea	rcx, QWORD PTR $T87[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$56[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@test_vec4_
	mov	DWORD PTR tv369[rsp], 0
	jmp	SHORT $LN30@test_vec4_
$LN29@test_vec4_:
	mov	DWORD PTR tv369[rsp], 1
$LN30@test_vec4_:
	mov	eax, DWORD PTR tv369[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 189  : 
; 190  : 		A += 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$56[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator+=<float>

; 191  : 		Error += A == glm::vec4(6, 8, 10, 12) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 12
	mov	r9d, 10
	mov	r8d, 8
	mov	edx, 6
	lea	rcx, QWORD PTR $T88[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$56[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@test_vec4_
	mov	DWORD PTR tv384[rsp], 0
	jmp	SHORT $LN32@test_vec4_
$LN31@test_vec4_:
	mov	DWORD PTR tv384[rsp], 1
$LN32@test_vec4_:
	mov	eax, DWORD PTR tv384[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 192  : 	}
; 193  : 	{
; 194  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$58[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 195  : 		glm::vec4 B(4.0f, 5.0f, 6.0f, 7.0f);

	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40c00000
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$59[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 196  : 
; 197  : 		B -= A;

	lea	rdx, QWORD PTR A$58[rsp]
	lea	rcx, QWORD PTR B$59[rsp]
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator-=<float>

; 198  : 		Error += B == glm::vec4(3, 3, 3, 3) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 3
	mov	r8d, 3
	mov	edx, 3
	lea	rcx, QWORD PTR $T89[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$59[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@test_vec4_
	mov	DWORD PTR tv409[rsp], 0
	jmp	SHORT $LN34@test_vec4_
$LN33@test_vec4_:
	mov	DWORD PTR tv409[rsp], 1
$LN34@test_vec4_:
	mov	eax, DWORD PTR tv409[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 199  : 
; 200  : 		B -= 1.0f;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR B$59[rsp]
	call	??$?ZM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator-=<float>

; 201  : 		Error += B == glm::vec4(2, 2, 2, 2) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 2
	mov	r9d, 2
	mov	r8d, 2
	mov	edx, 2
	lea	rcx, QWORD PTR $T90[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$59[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN35@test_vec4_
	mov	DWORD PTR tv424[rsp], 0
	jmp	SHORT $LN36@test_vec4_
$LN35@test_vec4_:
	mov	DWORD PTR tv424[rsp], 1
$LN36@test_vec4_:
	mov	eax, DWORD PTR tv424[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 202  : 	}
; 203  : 	{
; 204  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$60[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 205  : 		glm::vec4 B(4.0f, 5.0f, 6.0f, 7.0f);

	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40c00000
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$61[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 206  : 
; 207  : 		A *= B;

	lea	rdx, QWORD PTR B$61[rsp]
	lea	rcx, QWORD PTR A$60[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator*=<float>

; 208  : 		Error += A == glm::vec4(4, 10, 18, 28) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 28
	mov	r9d, 18
	mov	r8d, 10
	mov	edx, 4
	lea	rcx, QWORD PTR $T91[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$60[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN37@test_vec4_
	mov	DWORD PTR tv449[rsp], 0
	jmp	SHORT $LN38@test_vec4_
$LN37@test_vec4_:
	mov	DWORD PTR tv449[rsp], 1
$LN38@test_vec4_:
	mov	eax, DWORD PTR tv449[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 209  : 
; 210  : 		A *= 2.0f;

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR A$60[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator*=<float>

; 211  : 		Error += A == glm::vec4(8, 20, 36, 56) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 56			; 00000038H
	mov	r9d, 36					; 00000024H
	mov	r8d, 20
	mov	edx, 8
	lea	rcx, QWORD PTR $T92[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$60[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@test_vec4_
	mov	DWORD PTR tv464[rsp], 0
	jmp	SHORT $LN40@test_vec4_
$LN39@test_vec4_:
	mov	DWORD PTR tv464[rsp], 1
$LN40@test_vec4_:
	mov	eax, DWORD PTR tv464[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 212  : 	}
; 213  : 	{
; 214  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$62[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 215  : 		glm::vec4 B(4.0f, 5.0f, 6.0f, 7.0f);

	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40c00000
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR B$63[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 216  : 
; 217  : 		B /= A;

	lea	rdx, QWORD PTR A$62[rsp]
	lea	rcx, QWORD PTR B$63[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator/=<float>

; 218  : 		Error += B == glm::vec4(4, 2.5, 2, 7.0f / 4.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@3fe00000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, 2
	movsd	xmm2, QWORD PTR __real@4004000000000000
	mov	edx, 4
	lea	rcx, QWORD PTR $T93[rsp]
	call	??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z ; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$63[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN41@test_vec4_
	mov	DWORD PTR tv489[rsp], 0
	jmp	SHORT $LN42@test_vec4_
$LN41@test_vec4_:
	mov	DWORD PTR tv489[rsp], 1
$LN42@test_vec4_:
	mov	eax, DWORD PTR tv489[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 219  : 
; 220  : 		B /= 2.0f;

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$63[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator/=<float>

; 221  : 		Error += B == glm::vec4(2, 1.25, 1, 7.0f / 4.0f / 2.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@3f600000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, 1
	movsd	xmm2, QWORD PTR __real@3ff4000000000000
	mov	edx, 2
	lea	rcx, QWORD PTR $T94[rsp]
	call	??$?0HNHM@?$tvec4@M$0A@@glm@@QEAA@HNHM@Z ; glm::tvec4<float,0>::tvec4<float,0><int,double,int,float>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$63[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN43@test_vec4_
	mov	DWORD PTR tv504[rsp], 0
	jmp	SHORT $LN44@test_vec4_
$LN43@test_vec4_:
	mov	DWORD PTR tv504[rsp], 1
$LN44@test_vec4_:
	mov	eax, DWORD PTR tv504[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 222  : 	}
; 223  : 	{
; 224  : 		glm::vec4 B(2.0f);

	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR B$64[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 225  : 
; 226  : 		B /= B.y;

	movss	xmm1, DWORD PTR B$64[rsp+4]
	lea	rcx, QWORD PTR B$64[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator/=<float>

; 227  : 		Error += B == glm::vec4(1.0f) ? 0 : 1;

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T95[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$64[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN45@test_vec4_
	mov	DWORD PTR tv518[rsp], 0
	jmp	SHORT $LN46@test_vec4_
$LN45@test_vec4_:
	mov	DWORD PTR tv518[rsp], 1
$LN46@test_vec4_:
	mov	eax, DWORD PTR tv518[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 228  : 	}
; 229  : 
; 230  : 	{
; 231  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$65[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 232  : 		glm::vec4 B = -A;

	lea	rdx, QWORD PTR A$65[rsp]
	lea	rcx, QWORD PTR B$66[rsp]
	call	??$?GM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@@Z ; glm::operator-<float,0>

; 233  : 		Error += B == glm::vec4(-1.0f, -2.0f, -3.0f, -4.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@c0800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0400000
	movss	xmm2, DWORD PTR __real@c0000000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR $T96[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$66[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN47@test_vec4_
	mov	DWORD PTR tv538[rsp], 0
	jmp	SHORT $LN48@test_vec4_
$LN47@test_vec4_:
	mov	DWORD PTR tv538[rsp], 1
$LN48@test_vec4_:
	mov	eax, DWORD PTR tv538[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 234  : 	}
; 235  : 
; 236  : 	{
; 237  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$67[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 238  : 		glm::vec4 B = --A;

	lea	rcx, QWORD PTR A$67[rsp]
	call	??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<float,0>::operator--
	lea	rcx, QWORD PTR B$68[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 239  : 		Error += B == glm::vec4(0.0f, 1.0f, 2.0f, 3.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40000000
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T97[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$68[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN49@test_vec4_
	mov	DWORD PTR tv559[rsp], 0
	jmp	SHORT $LN50@test_vec4_
$LN49@test_vec4_:
	mov	DWORD PTR tv559[rsp], 1
$LN50@test_vec4_:
	mov	eax, DWORD PTR tv559[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 240  : 	}
; 241  : 
; 242  : 	{
; 243  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$69[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 244  : 		glm::vec4 B = A--;

	xor	r8d, r8d
	lea	rdx, QWORD PTR B$70[rsp]
	lea	rcx, QWORD PTR A$69[rsp]
	call	??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec4<float,0>::operator--

; 245  : 		Error += B == glm::vec4(1.0f, 2.0f, 3.0f, 4.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T98[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$70[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN51@test_vec4_
	mov	DWORD PTR tv580[rsp], 0
	jmp	SHORT $LN52@test_vec4_
$LN51@test_vec4_:
	mov	DWORD PTR tv580[rsp], 1
$LN52@test_vec4_:
	mov	eax, DWORD PTR tv580[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 246  : 		Error += A == glm::vec4(0.0f, 1.0f, 2.0f, 3.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40000000
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T99[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$69[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN53@test_vec4_
	mov	DWORD PTR tv593[rsp], 0
	jmp	SHORT $LN54@test_vec4_
$LN53@test_vec4_:
	mov	DWORD PTR tv593[rsp], 1
$LN54@test_vec4_:
	mov	eax, DWORD PTR tv593[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 247  : 	}
; 248  : 
; 249  : 	{
; 250  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$71[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 251  : 		glm::vec4 B = ++A;

	lea	rcx, QWORD PTR A$71[rsp]
	call	??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<float,0>::operator++
	lea	rcx, QWORD PTR B$72[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 252  : 		Error += B == glm::vec4(2.0f, 3.0f, 4.0f, 5.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40800000
	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T100[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$72[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN55@test_vec4_
	mov	DWORD PTR tv646[rsp], 0
	jmp	SHORT $LN56@test_vec4_
$LN55@test_vec4_:
	mov	DWORD PTR tv646[rsp], 1
$LN56@test_vec4_:
	mov	eax, DWORD PTR tv646[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 253  : 	}
; 254  : 
; 255  : 	{
; 256  : 		glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$73[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 257  : 		glm::vec4 B = A++;

	xor	r8d, r8d
	lea	rdx, QWORD PTR B$74[rsp]
	lea	rcx, QWORD PTR A$73[rsp]
	call	??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z	; glm::tvec4<float,0>::operator++

; 258  : 		Error += B == glm::vec4(1.0f, 2.0f, 3.0f, 4.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T101[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR B$74[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN57@test_vec4_
	mov	DWORD PTR tv667[rsp], 0
	jmp	SHORT $LN58@test_vec4_
$LN57@test_vec4_:
	mov	DWORD PTR tv667[rsp], 1
$LN58@test_vec4_:
	mov	eax, DWORD PTR tv667[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 259  : 		Error += A == glm::vec4(2.0f, 3.0f, 4.0f, 5.0f) ? 0 : 1;

	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40800000
	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T102[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR A$73[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN59@test_vec4_
	mov	DWORD PTR tv680[rsp], 0
	jmp	SHORT $LN60@test_vec4_
$LN59@test_vec4_:
	mov	DWORD PTR tv680[rsp], 1
$LN60@test_vec4_:
	mov	eax, DWORD PTR tv680[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 260  : 	}
; 261  : 
; 262  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 263  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_operators@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 2312				; 00000908H
	pop	rdi
	pop	rsi
	ret	0
?test_vec4_operators@@YAHXZ ENDP			; test_vec4_operators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z PROC	; glm::operator!=<bool,0>, COMDAT

; 950  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 951  : 		return detail::compute_vec4_nequal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_nequal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ; glm::detail::compute_vec4_nequal<bool,0,0,8,0>::call

; 952  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ENDP	; glm::operator!=<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z PROC	; glm::operator==<bool,0>, COMDAT

; 944  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 945  : 		return detail::compute_vec4_equal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_equal@_N$0A@$0A@$07$0A@@detail@glm@@SA_NAEBU?$tvec4@_N$0A@@3@0@Z ; glm::detail::compute_vec4_equal<bool,0,0,8,0>::call

; 946  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ENDP	; glm::operator==<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
tv72 = 48
tv80 = 49
tv88 = 50
tv128 = 51
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z PROC	; glm::operator||<0>, COMDAT

; 962  : 	{

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 963  : 		return tvec4<bool, P>(v1.x || v2.x, v1.y || v2.y, v1.z || v2.z, v1.w || v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv72[rsp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv72[rsp], 1
$LN4@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	jne	SHORT $LN5@operator
	mov	BYTE PTR tv80[rsp], 0
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv80[rsp], 1
$LN6@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	jne	SHORT $LN7@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	jne	SHORT $LN7@operator
	mov	BYTE PTR tv88[rsp], 0
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	BYTE PTR tv88[rsp], 1
$LN8@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN9@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN9@operator
	mov	BYTE PTR tv128[rsp], 0
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	BYTE PTR tv128[rsp], 1
$LN10@operator:
	movzx	eax, BYTE PTR tv72[rsp]
	mov	BYTE PTR [rsp+32], al
	movzx	r9d, BYTE PTR tv80[rsp]
	movzx	r8d, BYTE PTR tv88[rsp]
	movzx	edx, BYTE PTR tv128[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z	; glm::tvec4<bool,0>::tvec4<bool,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 964  : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z ENDP	; glm::operator||<0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
tv72 = 48
tv80 = 49
tv88 = 50
tv128 = 51
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z PROC	; glm::operator&&<0>, COMDAT

; 956  : 	{

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 957  : 		return tvec4<bool, P>(v1.x && v2.x, v1.y && v2.y, v1.z && v2.z, v1.w && v2.w);

	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	test	eax, eax
	je	SHORT $LN3@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+3]
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv72[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv72[rsp], 0
$LN4@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	je	SHORT $LN5@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	je	SHORT $LN5@operator
	mov	BYTE PTR tv80[rsp], 1
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv80[rsp], 0
$LN6@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	je	SHORT $LN7@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	je	SHORT $LN7@operator
	mov	BYTE PTR tv88[rsp], 1
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	BYTE PTR tv88[rsp], 0
$LN8@operator:
	mov	rax, QWORD PTR v1$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN9@operator
	mov	rax, QWORD PTR v2$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN9@operator
	mov	BYTE PTR tv128[rsp], 1
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	BYTE PTR tv128[rsp], 0
$LN10@operator:
	movzx	eax, BYTE PTR tv72[rsp]
	mov	BYTE PTR [rsp+32], al
	movzx	r9d, BYTE PTR tv80[rsp]
	movzx	r8d, BYTE PTR tv88[rsp]
	movzx	edx, BYTE PTR tv128[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z	; glm::tvec4<bool,0>::tvec4<bool,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 958  : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z ENDP	; glm::operator&&<0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 32
A$ = 52
B$ = 84
C$ = 116
D$ = 148
E$ = 180
F$ = 212
G$ = 228
H$ = 229
$T9 = 230
$T10 = 234
$T11 = 238
tv93 = 244
tv135 = 248
tv145 = 252
?test_bvec4_ctor@@YAHXZ PROC				; test_bvec4_ctor

; 110  : {

$LN9:
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 111  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 112  : 
; 113  : 	glm::bvec4 const A(true);

	mov	dl, 1
	lea	rcx, QWORD PTR A$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 114  : 	glm::bvec4 const B(true);

	mov	dl, 1
	lea	rcx, QWORD PTR B$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 115  : 	glm::bvec4 const C(false);

	xor	edx, edx
	lea	rcx, QWORD PTR C$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 116  : 	glm::bvec4 const D = A && B;

	lea	r8, QWORD PTR B$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR D$[rsp]
	call	??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z ; glm::operator&&<0>

; 117  : 	glm::bvec4 const E = A && C;

	lea	r8, QWORD PTR C$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR E$[rsp]
	call	??$?V$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z ; glm::operator&&<0>

; 118  : 	glm::bvec4 const F = A || C;

	lea	r8, QWORD PTR C$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR F$[rsp]
	call	??$?W$0A@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU10@0@Z ; glm::operator||<0>

; 119  : 	bool const G = A == C;

	lea	rdx, QWORD PTR C$[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	call	??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ; glm::operator==<bool,0>
	mov	BYTE PTR G$[rsp], al

; 120  : 	bool const H = A != C;

	lea	rdx, QWORD PTR C$[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	call	??$?9_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ; glm::operator!=<bool,0>
	mov	BYTE PTR H$[rsp], al

; 121  : 
; 122  : 	Error += D == glm::bvec4(true) ? 0 : 1;

	mov	dl, 1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR D$[rsp]
	call	??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ; glm::operator==<bool,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_bvec4
	mov	DWORD PTR tv93[rsp], 0
	jmp	SHORT $LN4@test_bvec4
$LN3@test_bvec4:
	mov	DWORD PTR tv93[rsp], 1
$LN4@test_bvec4:
	mov	eax, DWORD PTR tv93[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 123  : 	Error += E == glm::bvec4(false) ? 0 : 1;

	xor	edx, edx
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR E$[rsp]
	call	??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ; glm::operator==<bool,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_bvec4
	mov	DWORD PTR tv135[rsp], 0
	jmp	SHORT $LN6@test_bvec4
$LN5@test_bvec4:
	mov	DWORD PTR tv135[rsp], 1
$LN6@test_bvec4:
	mov	eax, DWORD PTR tv135[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 124  : 	Error += F == glm::bvec4(true) ? 0 : 1;

	mov	dl, 1
	lea	rcx, QWORD PTR $T11[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z	; glm::tvec4<bool,0>::tvec4<bool,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR F$[rsp]
	call	??$?8_N$0A@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@0@Z ; glm::operator==<bool,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_bvec4
	mov	DWORD PTR tv145[rsp], 0
	jmp	SHORT $LN8@test_bvec4
$LN7@test_bvec4:
	mov	DWORD PTR tv145[rsp], 1
$LN8@test_bvec4:
	mov	eax, DWORD PTR tv145[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 125  : 
; 126  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 127  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_bvec4_ctor@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
?test_bvec4_ctor@@YAHXZ ENDP				; test_bvec4_ctor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><float,float,0>, COMDAT

; 314  : 	{}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 310  : 		x(static_cast<T>(a.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0

; 311  : 		y(static_cast<T>(a.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0

; 312  : 		z(static_cast<T>(b.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+8], xmm0

; 313  : 		w(static_cast<T>(b.y))

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+12], xmm0

; 314  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><float,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><int,float,0>, COMDAT

; 296  : 	{}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 292  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 293  : 		y(static_cast<T>(b.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+4], xmm0

; 294  : 		z(static_cast<T>(b.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+8], xmm0

; 295  : 		w(static_cast<T>(b.z))

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+12], xmm0

; 296  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><int,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><float,int,0>, COMDAT

; 278  : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 274  : 		x(static_cast<T>(a.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0

; 275  : 		y(static_cast<T>(a.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0

; 276  : 		z(static_cast<T>(a.z)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0

; 277  : 		w(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 278  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><float,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
v$ = 40
??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,0>, COMDAT

; 260  : 	{}

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 256  : 		x(static_cast<T>(s1)),

	cvtsi2ss xmm0, DWORD PTR s1$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 257  : 		y(static_cast<T>(s2)),

	cvtsi2ss xmm0, DWORD PTR s2$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 258  : 		z(static_cast<T>(v.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+8], xmm0

; 259  : 		w(static_cast<T>(v.y))

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+12], xmm0

; 260  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
v$ = 32
s2$ = 40
??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,0>, COMDAT

; 242  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 238  : 		x(static_cast<T>(s1)),

	cvtsi2ss xmm0, DWORD PTR s1$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 239  : 		y(static_cast<T>(v.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+4], xmm0

; 240  : 		z(static_cast<T>(v.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+8], xmm0

; 241  : 		w(static_cast<T>(s2))

	cvtsi2ss xmm0, DWORD PTR s2$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 242  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z PROC ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,0>, COMDAT

; 224  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 220  : 		x(static_cast<T>(a.x)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0

; 221  : 		y(static_cast<T>(a.y)),

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0

; 222  : 		z(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 223  : 		w(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 224  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z ENDP ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z
_TEXT	SEGMENT
v1$ = 48
v2$ = 56
??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z PROC	; glm::operator==<float,0>, COMDAT

; 944  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 945  : 		return detail::compute_vec4_equal<T, P, detail::is_int<T>::value, sizeof(T) * 8, detail::is_aligned<P>::value>::call(v1, v2);

	mov	rdx, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	call	?call@?$compute_vec4_equal@M$0A@$0A@$0CA@$0A@@detail@glm@@SA_NAEBU?$tvec4@M$0A@@3@0@Z ; glm::detail::compute_vec4_equal<float,0,0,32,0>::call

; 946  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ENDP	; glm::operator==<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ PROC ; std::initializer_list<glm::tvec4<double,0> >::size, COMDAT

; 45   :     _NODISCARD constexpr size_t size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 46   :         return static_cast<size_t>(_Last - _First);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	sar	rax, 5

; 47   :     }

	pop	rdi
	ret	0
?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ ENDP ; std::initializer_list<glm::tvec4<double,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec4<double,0> >::end, COMDAT

; 41   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 42   :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 43   :     }

	pop	rdi
	ret	0
?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec4<double,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec4<double,0> >::begin, COMDAT

; 37   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   :         return _First;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]

; 39   :     }

	pop	rdi
	ret	0
?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec4<double,0> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z PROC ; std::initializer_list<glm::tvec4<double,0> >::initializer_list<glm::tvec4<double,0> >, COMDAT

; 35   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _First_arg$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Last_arg$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z ENDP ; std::initializer_list<glm::tvec4<double,0> >::initializer_list<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 32	; 00000020H
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
	lea	rax, QWORD PTR $S1$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
this$ = 80
_Ilist$ = 88
_Al$ = 96
??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 702  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec4@N$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><std::allocator<glm::tvec4<double,0> > const &>

; 703  :         _Construct_n(_Convert_size<size_type>(_Ilist.size()), _Ilist.begin(), _Ilist.end());

	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?end@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<double,0> >::end
	mov	QWORD PTR $T2[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?begin@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBAPEBU?$tvec4@N$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<double,0> >::begin
	mov	QWORD PTR $T3[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?size@?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEBA_KXZ ; std::initializer_list<glm::tvec4<double,0> >::size
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	lea	r9, QWORD PTR $T2[rsp]
	lea	r8, QWORD PTR $T3[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@PEBU?$tvec4@N$0A@@glm@@PEBU12@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@N$0A@@glm@@1@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Construct_n<glm::tvec4<double,0> const *,glm::tvec4<double,0> const *>

; 704  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<double,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z	; std::_Get_size_of_n<32>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<double,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<double,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 32		; 00000020H
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<double,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2sd xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2sd xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+24], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<double,0>::tvec4<double,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+24], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<double,0>::tvec4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@N$0A@@glm@@SAHXZ PROC			; glm::tvec4<double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ PROC ; std::initializer_list<glm::tvec4<float,0> >::size, COMDAT

; 45   :     _NODISCARD constexpr size_t size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 46   :         return static_cast<size_t>(_Last - _First);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	sar	rax, 4

; 47   :     }

	pop	rdi
	ret	0
?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ ENDP ; std::initializer_list<glm::tvec4<float,0> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec4<float,0> >::end, COMDAT

; 41   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 42   :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 43   :     }

	pop	rdi
	ret	0
?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec4<float,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ PROC ; std::initializer_list<glm::tvec4<float,0> >::begin, COMDAT

; 37   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   :         return _First;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]

; 39   :     }

	pop	rdi
	ret	0
?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ENDP ; std::initializer_list<glm::tvec4<float,0> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z PROC ; std::initializer_list<glm::tvec4<float,0> >::initializer_list<glm::tvec4<float,0> >, COMDAT

; 35   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _First_arg$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Last_arg$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::initializer_list<glm::tvec4<float,0> >::initializer_list<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@M$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@M$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[], COMDAT

; 1728 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1729 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1730 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1731 :         _STL_VERIFY(

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Pos$[rsp], rax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1732				; 000006c4H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1732				; 000006c4H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@operator

; 1732 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1733 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1734 : 
; 1735 :         return _My_data._Myfirst[_Pos];

	imul	rax, QWORD PTR _Pos$[rsp], 16
	mov	rcx, QWORD PTR _My_data$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 1736 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::size, COMDAT

; 1713 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1714 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1715 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4

; 1716 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back, COMDAT

; 900  :     _CONSTEXPR20 void push_back(_Ty&& _Val) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 901  :         // insert by moving into element at end, provide strong guarantee
; 902  :         emplace_back(_STD move(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$move@AEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAU?$tvec4@M$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<float,0> &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$emplace_back@U?$tvec4@M$0A@@glm@@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?A_T$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::emplace_back<glm::tvec4<float,0> >

; 903  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	lea	rax, QWORD PTR $S2$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
this$ = 80
_Ilist$ = 88
_Al$ = 96
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 702  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>

; 703  :         _Construct_n(_Convert_size<size_type>(_Ilist.size()), _Ilist.begin(), _Ilist.end());

	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?end@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<float,0> >::end
	mov	QWORD PTR $T2[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?begin@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBAPEBU?$tvec4@M$0A@@glm@@XZ ; std::initializer_list<glm::tvec4<float,0> >::begin
	mov	QWORD PTR $T3[rsp], rax
	mov	rcx, QWORD PTR _Ilist$[rsp]
	call	?size@?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEBA_KXZ ; std::initializer_list<glm::tvec4<float,0> >::size
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	lea	r9, QWORD PTR $T2[rsp]
	lea	r8, QWORD PTR $T3[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@PEBU?$tvec4@M$0A@@glm@@PEBU12@@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K$$QEAPEBU?$tvec4@M$0A@@glm@@1@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<glm::tvec4<float,0> const *,glm::tvec4<float,0> const *>

; 704  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 112
__$ReturnUdt$ = 120
__formal$ = 128
??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec4<float,0>::operator--, COMDAT

; 482  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 483  : 		tvec4<T, P> Result(*this);

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR this$[rsp]
	mov	ecx, 16
	rep movsb

; 484  : 		--*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<float,0>::operator--

; 485  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 486  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??F?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec4<float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 112
__$ReturnUdt$ = 120
__formal$ = 128
??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec4<float,0>::operator++, COMDAT

; 474  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 475  : 		tvec4<T, P> Result(*this);

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR this$[rsp]
	mov	ecx, 16
	rep movsb

; 476  : 		++*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<float,0>::operator++

; 477  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 478  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??E?$tvec4@M$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec4<float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec4<float,0>::operator--, COMDAT

; 464  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 465  : 		--this->x;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 466  : 		--this->y;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 467  : 		--this->z;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 468  : 		--this->w;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 469  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 470  : 	}

	pop	rdi
	ret	0
??F?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec4<float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec4<float,0>::operator++, COMDAT

; 454  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 455  : 		++this->x;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 456  : 		++this->y;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 457  : 		++this->z;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 458  : 		++this->w;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 459  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 460  : 	}

	pop	rdi
	ret	0
??E?$tvec4@M$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec4<float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 193  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 188  : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$0A@@glm@@SAHXZ PROC			; glm::tvec4<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$0A@@glm@@SAHXZ ENDP			; glm::tvec4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec4>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z PROC		; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 193  : 	{}

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	BYTE PTR [rsp+24], r8b
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR c$[rsp]
	mov	BYTE PTR [rax+2], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR d$[rsp]
	mov	BYTE PTR [rax+3], cl

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z ENDP		; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z PROC			; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 188  : 	{}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR scalar$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR scalar$[rsp]
	mov	BYTE PTR [rax+1], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR scalar$[rsp]
	mov	BYTE PTR [rax+2], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR scalar$[rsp]
	mov	BYTE PTR [rax+3], cl

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@_N@Z ENDP			; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$0A@@glm@@SAHXZ PROC			; glm::tvec4<bool,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z PROC ; glm::equal<int,0,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ENDP ; glm::equal<int,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z
_TEXT	SEGMENT
Result$ = 40
this$ = 112
__$ReturnUdt$ = 120
__formal$ = 128
??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z PROC		; glm::tvec4<int,0>::operator++, COMDAT

; 474  : 	{

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 475  : 		tvec4<T, P> Result(*this);

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR this$[rsp]
	mov	ecx, 16
	rep movsb

; 476  : 		++*this;

	mov	rcx, QWORD PTR this$[rsp]
	call	??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ	; glm::tvec4<int,0>::operator++

; 477  : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 478  : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??E?$tvec4@H$0A@@glm@@QEAA?AU01@H@Z ENDP		; glm::tvec4<int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ
_TEXT	SEGMENT
this$ = 16
??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ PROC		; glm::tvec4<int,0>::operator++, COMDAT

; 454  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 455  : 		++this->x;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx], eax

; 456  : 		++this->y;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+4]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+4], eax

; 457  : 		++this->z;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+8], eax

; 458  : 		++this->w;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+12]
	inc	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+12], eax

; 459  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 460  : 	}

	pop	rdi
	ret	0
??E?$tvec4@H$0A@@glm@@QEAAAEAU01@XZ ENDP		; glm::tvec4<int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 193  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR d$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@H$0A@@glm@@QEAA@H@Z PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 188  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR scalar$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@H@Z ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec4<int,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec4<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@H$0A@@glm@@SAHXZ PROC			; glm::tvec4<int,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@H$0A@@glm@@SAHXZ ENDP			; glm::tvec4<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_force_pure.cpp
_TEXT	SEGMENT
Error$ = 48
A$12 = 72
B$13 = 120
a$14 = 168
v$15 = 216
$T16 = 264
a$17 = 328
v$18 = 392
$T19 = 448
A$20 = 568
B$21 = 616
Tests$22 = 664
i$23 = 712
$T24 = 728
$T25 = 732
$T26 = 736
$T27 = 752
$T28 = 760
$T29 = 776
$T30 = 792
$T31 = 800
$T32 = 816
$T33 = 824
$T34 = 840
$T35 = 848
$T36 = 864
$T37 = 876
$T38 = 892
$T39 = 904
$T40 = 920
$T41 = 928
$T42 = 936
$T43 = 952
$T44 = 968
$T45 = 992
$T46 = 1008
tv77 = 1024
tv87 = 1032
tv151 = 1040
tv187 = 1048
tv251 = 1056
tv315 = 1064
tv327 = 1072
__$ArrayPad$ = 1080
?test_vec4_ctor@@YAHXZ PROC				; test_vec4_ctor

; 15   : {

$LN15:
	push	rsi
	push	rdi
	sub	rsp, 1096				; 00000448H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 262				; 00000106H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 16   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 17   : 
; 18   : 	{
; 19   : 		glm::ivec4 A(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR A$12[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<int,0>::tvec4<int,0>

; 20   : 		glm::ivec4 B(A);

	lea	rax, QWORD PTR B$13[rsp]
	lea	rcx, QWORD PTR A$12[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 21   : 		Error += glm::all(glm::equal(A, B)) ? 0 : 1;

	lea	r8, QWORD PTR B$13[rsp]
	lea	rdx, QWORD PTR A$12[rsp]
	lea	rcx, QWORD PTR $T24[rsp]
	call	??$equal@H$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@H$0A@@0@0@Z ; glm::equal<int,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@test_vec4_
	mov	DWORD PTR tv77[rsp], 0
	jmp	SHORT $LN7@test_vec4_
$LN6@test_vec4_:
	mov	DWORD PTR tv77[rsp], 1
$LN7@test_vec4_:
	mov	eax, DWORD PTR tv77[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 22   : 	}
; 23   : 
; 24   : #	if GLM_HAS_TRIVIAL_QUERIES
; 25   : 	//	Error += std::is_trivially_default_constructible<glm::vec4>::value ? 0 : 1;
; 26   : 	//	Error += std::is_trivially_copy_assignable<glm::vec4>::value ? 0 : 1;
; 27   : 		Error += std::is_trivially_copyable<glm::vec4>::value ? 0 : 1;
; 28   : 		Error += std::is_trivially_copyable<glm::dvec4>::value ? 0 : 1;
; 29   : 		Error += std::is_trivially_copyable<glm::ivec4>::value ? 0 : 1;
; 30   : 		Error += std::is_trivially_copyable<glm::uvec4>::value ? 0 : 1;
; 31   : 
; 32   : 		Error += std::is_copy_constructible<glm::vec4>::value ? 0 : 1;
; 33   : #	endif
; 34   : 
; 35   : #if GLM_HAS_INITIALIZER_LISTS
; 36   : 	{
; 37   : 		glm::vec4 a{ 0, 1, 2, 3 };

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 2
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR a$14[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 38   : 		std::vector<glm::vec4> v = {

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 2
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	DWORD PTR [rsp+32], 7
	mov	r9d, 6
	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR $T16[rsp+16]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR $T16[rsp+32]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
	mov	QWORD PTR tv87[rsp], rax
	lea	rcx, QWORD PTR $T16[rsp+48]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T16[rsp]
	lea	rcx, QWORD PTR $T26[rsp]
	call	??0?$initializer_list@U?$tvec4@M$0A@@glm@@@std@@QEAA@PEBU?$tvec4@M$0A@@glm@@0@Z ; std::initializer_list<glm::tvec4<float,0> >::initializer_list<glm::tvec4<float,0> >
	lea	rcx, QWORD PTR $T45[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR tv87[rsp]
	mov	r8, rax
	lea	rdx, QWORD PTR $T45[rsp]
	lea	rcx, QWORD PTR v$15[rsp]
	call	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@M$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >

; 39   : 			{0, 1, 2, 3},
; 40   : 			{4, 5, 6, 7},
; 41   : 			{8, 9, 0, 1}};
; 42   : 	}

	lea	rcx, QWORD PTR v$15[rsp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >

; 43   : 
; 44   : 	{
; 45   : 		glm::dvec4 a{ 0, 1, 2, 3 };

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 2
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR a$17[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>

; 46   : 		std::vector<glm::dvec4> v = {

	mov	DWORD PTR [rsp+32], 3
	mov	r9d, 2
	mov	r8d, 1
	xor	edx, edx
	lea	rcx, QWORD PTR $T19[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	DWORD PTR [rsp+32], 7
	mov	r9d, 6
	mov	r8d, 5
	mov	edx, 4
	lea	rcx, QWORD PTR $T19[rsp+32]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8d, 9
	mov	edx, 8
	lea	rcx, QWORD PTR $T19[rsp+64]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
	mov	QWORD PTR tv151[rsp], rax
	lea	rcx, QWORD PTR $T19[rsp+96]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T19[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??0?$initializer_list@U?$tvec4@N$0A@@glm@@@std@@QEAA@PEBU?$tvec4@N$0A@@glm@@0@Z ; std::initializer_list<glm::tvec4<double,0> >::initializer_list<glm::tvec4<double,0> >
	lea	rcx, QWORD PTR $T46[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR tv151[rsp]
	mov	r8, rax
	lea	rdx, QWORD PTR $T46[rsp]
	lea	rcx, QWORD PTR v$18[rsp]
	call	??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@V?$initializer_list@U?$tvec4@N$0A@@glm@@@1@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >

; 47   : 			{0, 1, 2, 3},
; 48   : 			{4, 5, 6, 7},
; 49   : 			{8, 9, 0, 1}};
; 50   : 	}

	lea	rcx, QWORD PTR v$18[rsp]
	call	??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >

; 51   : #endif
; 52   : 
; 53   : #if GLM_HAS_UNRESTRICTED_UNIONS && defined(GLM_FORCE_SWIZZLE)
; 54   : 	{
; 55   : 		glm::vec4 A = glm::vec4(1.0f, 2.0f, 3.0f, 4.0f);
; 56   : 		glm::vec4 B = A.xyzw;
; 57   : 		glm::vec4 C(A.xyzw);
; 58   : 		glm::vec4 D(A.xyzw());
; 59   : 		glm::vec4 E(A.x, A.yzw);
; 60   : 		glm::vec4 F(A.x, A.yzw());
; 61   : 		glm::vec4 G(A.xyz, A.w);
; 62   : 		glm::vec4 H(A.xyz(), A.w);
; 63   : 		glm::vec4 I(A.xy, A.zw);
; 64   : 		glm::vec4 J(A.xy(), A.zw());
; 65   : 		glm::vec4 K(A.x, A.y, A.zw);
; 66   : 		glm::vec4 L(A.x, A.yz, A.w);
; 67   : 		glm::vec4 M(A.xy, A.z, A.w);
; 68   : 
; 69   : 		Error += glm::all(glm::equal(A, B)) ? 0 : 1;
; 70   : 		Error += glm::all(glm::equal(A, C)) ? 0 : 1;
; 71   : 		Error += glm::all(glm::equal(A, D)) ? 0 : 1;
; 72   : 		Error += glm::all(glm::equal(A, E)) ? 0 : 1;
; 73   : 		Error += glm::all(glm::equal(A, F)) ? 0 : 1;
; 74   : 		Error += glm::all(glm::equal(A, G)) ? 0 : 1;
; 75   : 		Error += glm::all(glm::equal(A, H)) ? 0 : 1;
; 76   : 		Error += glm::all(glm::equal(A, I)) ? 0 : 1;
; 77   : 		Error += glm::all(glm::equal(A, J)) ? 0 : 1;
; 78   : 		Error += glm::all(glm::equal(A, K)) ? 0 : 1;
; 79   : 		Error += glm::all(glm::equal(A, L)) ? 0 : 1;
; 80   : 		Error += glm::all(glm::equal(A, M)) ? 0 : 1;
; 81   : 	}
; 82   : #endif// GLM_HAS_UNRESTRICTED_UNIONS && defined(GLM_FORCE_SWIZZLE)
; 83   : 
; 84   : 	{
; 85   : 		glm::vec4 A(1);

	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$20[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>

; 86   : 		glm::vec4 B(1, 1, 1, 1);

	mov	DWORD PTR [rsp+32], 1
	mov	r9d, 1
	mov	r8d, 1
	mov	edx, 1
	lea	rcx, QWORD PTR B$21[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 87   : 		
; 88   : 		Error += A == B ? 0 : 1;

	lea	rdx, QWORD PTR B$21[rsp]
	lea	rcx, QWORD PTR A$20[rsp]
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@test_vec4_
	mov	DWORD PTR tv187[rsp], 0
	jmp	SHORT $LN9@test_vec4_
$LN8@test_vec4_:
	mov	DWORD PTR tv187[rsp], 1
$LN9@test_vec4_:
	mov	eax, DWORD PTR tv187[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 89   : 	}
; 90   : 	
; 91   : 	{
; 92   : 		std::vector<glm::vec4> Tests;

	lea	rcx, QWORD PTR Tests$22[rsp]
	call	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	npad	1

; 93   : 		Tests.push_back(glm::vec4(glm::vec2(1, 2), 3, 4));

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T30[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	r9d, 4
	mov	r8d, 3
	mov	rdx, rax
	lea	rcx, QWORD PTR $T29[rsp]
	call	??$?0MHH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@HH@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 94   : 		Tests.push_back(glm::vec4(1, glm::vec2(2, 3), 4));

	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T32[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	r9d, 4
	mov	r8, rax
	mov	edx, 1
	lea	rcx, QWORD PTR $T31[rsp]
	call	??$?0HMH$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec2@M$0A@@1@H@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 95   : 		Tests.push_back(glm::vec4(1, 2, glm::vec2(3, 4)));

	mov	r8d, 4
	mov	edx, 3
	lea	rcx, QWORD PTR $T34[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	r9, rax
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T33[rsp]
	call	??$?0HHM$0A@@?$tvec4@M$0A@@glm@@QEAA@HHAEBU?$tvec2@M$0A@@1@@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 96   : 		Tests.push_back(glm::vec4(glm::vec3(1, 2, 3), 4));

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T36[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	r8d, 4
	mov	rdx, rax
	lea	rcx, QWORD PTR $T35[rsp]
	call	??$?0MH$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec3@M$0A@@1@H@Z ; glm::tvec4<float,0>::tvec4<float,0><float,int,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 97   : 		Tests.push_back(glm::vec4(1, glm::vec3(2, 3, 4)));

	mov	r9d, 4
	mov	r8d, 3
	mov	edx, 2
	lea	rcx, QWORD PTR $T38[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
	mov	r8, rax
	mov	edx, 1
	lea	rcx, QWORD PTR $T37[rsp]
	call	??$?0HM$0A@@?$tvec4@M$0A@@glm@@QEAA@HAEBU?$tvec3@M$0A@@1@@Z ; glm::tvec4<float,0>::tvec4<float,0><int,float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 98   : 		Tests.push_back(glm::vec4(glm::vec2(1, 2), glm::vec2(3, 4)));

	mov	r8d, 4
	mov	edx, 3
	lea	rcx, QWORD PTR $T40[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	QWORD PTR tv251[rsp], rax
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T41[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>
	mov	rcx, QWORD PTR tv251[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T39[rsp]
	call	??$?0MM$0A@@?$tvec4@M$0A@@glm@@QEAA@AEBU?$tvec2@M$0A@@1@0@Z ; glm::tvec4<float,0>::tvec4<float,0><float,float,0>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 99   : 		Tests.push_back(glm::vec4(1, 2, 3, 4));

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T42[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 100  : 		Tests.push_back(glm::vec4(glm::vec4(1, 2, 3, 4)));

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T43[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	rdx, rax
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?push_back@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@M$0A@@glm@@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::push_back

; 101  : 		
; 102  : 		for(std::size_t i = 0; i < Tests.size(); ++i)

	mov	QWORD PTR i$23[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN2@test_vec4_:
	mov	rax, QWORD PTR i$23[rsp]
	inc	rax
	mov	QWORD PTR i$23[rsp], rax
$LN4@test_vec4_:
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	?size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::size
	cmp	QWORD PTR i$23[rsp], rax
	jae	$LN3@test_vec4_

; 103  : 			Error += Tests[i] == glm::vec4(1, 2, 3, 4) ? 0 : 1;

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR $T44[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
	mov	QWORD PTR tv315[rsp], rax
	mov	rdx, QWORD PTR i$23[rsp]
	lea	rcx, QWORD PTR Tests$22[rsp]
	call	??A?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAAEAU?$tvec4@M$0A@@glm@@_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::operator[]
	mov	rcx, QWORD PTR tv315[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?8M$0A@@glm@@YA_NAEBU?$tvec4@M$0A@@0@0@Z ; glm::operator==<float,0>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@test_vec4_
	mov	DWORD PTR tv327[rsp], 0
	jmp	SHORT $LN11@test_vec4_
$LN10@test_vec4_:
	mov	DWORD PTR tv327[rsp], 1
$LN11@test_vec4_:
	mov	eax, DWORD PTR tv327[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	jmp	$LN2@test_vec4_
$LN3@test_vec4_:

; 104  : 	}

	lea	rcx, QWORD PTR Tests$22[rsp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >

; 105  : 	
; 106  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 107  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_ctor@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1096				; 00000448H
	pop	rdi
	pop	rsi
	ret	0
?test_vec4_ctor@@YAHXZ ENDP				; test_vec4_ctor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A$12 = 72
B$13 = 120
a$14 = 168
v$15 = 216
$T16 = 264
a$17 = 328
v$18 = 392
$T19 = 448
A$20 = 568
B$21 = 616
Tests$22 = 664
i$23 = 712
$T24 = 728
$T25 = 732
$T26 = 736
$T27 = 752
$T28 = 760
$T29 = 776
$T30 = 792
$T31 = 800
$T32 = 816
$T33 = 824
$T34 = 840
$T35 = 848
$T36 = 864
$T37 = 876
$T38 = 892
$T39 = 904
$T40 = 920
$T41 = 928
$T42 = 936
$T43 = 952
$T44 = 968
$T45 = 992
$T46 = 1008
tv77 = 1024
tv87 = 1032
tv151 = 1040
tv187 = 1048
tv251 = 1056
tv315 = 1064
tv327 = 1072
__$ArrayPad$ = 1080
?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA PROC		; `test_vec4_ctor'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Tests$22[rbp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??test_vec4_ctor@@YAHXZ@4HA ENDP		; `test_vec4_ctor'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1297 :     _Container_proxy* _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1299 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1300 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1301 :     }

	pop	rdi
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1078 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1079 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1080 :         _Orphan_all_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1081 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1219 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1220 :     if (!_Myproxy) { // no proxy, already done

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all

; 1221 :         return;

	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1222 :     }
; 1223 : 
; 1224 :     // proxy allocated, drain it
; 1225 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1226 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1227 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1228 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:

; 1229 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1231 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1232 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1233 : #if _HAS_CXX20
; 1234 :     if (_STD is_constant_evaluated()) {
; 1235 :         _Orphan_all_unlocked_v3();
; 1236 :     } else
; 1237 : #endif // _HAS_CXX20
; 1238 :     {
; 1239 :         _Orphan_all_locked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1240 :     }
; 1241 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1242 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1048 : 
; 1049 :     _Container_base12(const _Container_base12&) = delete;
; 1050 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1051 : 
; 1052 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1053 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1054 : 
; 1055 :     template <class _Alloc>
; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1058 :         _Construct_in_place(*_New_proxy, this);
; 1059 :         _Myproxy            = _New_proxy;
; 1060 :         _New_proxy->_Mycont = this;
; 1061 :     }
; 1062 : 
; 1063 :     template <class _Alloc>
; 1064 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1065 :         // pre: no iterators refer to the existing proxy
; 1066 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1067 :         _Construct_in_place(*_New_proxy, this);
; 1068 :         _New_proxy->_Mycont = this;
; 1069 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1070 :     }
; 1071 : 
; 1072 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1040 : 
; 1041 :     const _Container_base12* _Mycont       = nullptr;
; 1042 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 154				; 0000009aH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 154				; 0000009aH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 164				; 000000a4H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 164				; 000000a4H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 166  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 78   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 80   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 317  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 318  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 319  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 641  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 642  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 643  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
END
