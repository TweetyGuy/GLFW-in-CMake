; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG72224 DB	'invalid argument', 00H
	ORG $+3
$SG72225 DB	'%s', 00H
	ORG $+1
$SG72229 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG72226 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.32.31326\include\xmemory', 00H
	ORG $+2
$SG72228 DB	00H, 00H
	ORG $+10
$SG72227 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '3', 00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
CONST	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?length@?$tvec2@M$0A@@glm@@SAHXZ		; glm::tvec2<float,0>::length
PUBLIC	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@M@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	?length@?$tvec4@M$0A@@glm@@SAHXZ		; glm::tvec4<float,0>::length
PUBLIC	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@XZ			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z		; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_unlocked
PUBLIC	?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_locked
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ	; my_vec2::operator glm::tvec2<float,0>
PUBLIC	?test_vec2_cast@@YAHXZ				; test_vec2_cast
PUBLIC	?length@?$tvec2@M$01@glm@@SAHXZ			; glm::tvec2<float,2>::length
PUBLIC	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z		; glm::tvec2<float,2>::operator[]
PUBLIC	??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,2>::tvec2<float,2><0>
PUBLIC	?length@?$tvec2@M$00@glm@@SAHXZ			; glm::tvec2<float,1>::length
PUBLIC	??A?$tvec2@M$00@glm@@QEBAAEBMH@Z		; glm::tvec2<float,1>::operator[]
PUBLIC	??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,1>::tvec2<float,1><0>
PUBLIC	??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec2>
PUBLIC	?length@?$tvec2@_N$0A@@glm@@SAHXZ		; glm::tvec2<bool,0>::length
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec2<bool,0>::tvec2<bool,0>
PUBLIC	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
PUBLIC	??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z ; glm::equal<float,2,glm::tvec2>
PUBLIC	?length@?$tvec2@_N$01@glm@@SAHXZ		; glm::tvec2<bool,2>::length
PUBLIC	??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z		; glm::tvec2<bool,2>::operator[]
PUBLIC	??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,2>::operator[]
PUBLIC	??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z		; glm::tvec2<bool,2>::tvec2<bool,2>
PUBLIC	??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z ; glm::all<2,glm::tvec2>
PUBLIC	??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z ; glm::equal<float,1,glm::tvec2>
PUBLIC	?length@?$tvec2@_N$00@glm@@SAHXZ		; glm::tvec2<bool,1>::length
PUBLIC	??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z		; glm::tvec2<bool,1>::operator[]
PUBLIC	??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,1>::operator[]
PUBLIC	??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z		; glm::tvec2<bool,1>::tvec2<bool,1>
PUBLIC	??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z ; glm::all<1,glm::tvec2>
PUBLIC	?test_vec3_cast@@YAHXZ				; test_vec3_cast
PUBLIC	?length@?$tvec3@M$0A@@glm@@SAHXZ		; glm::tvec3<float,0>::length
PUBLIC	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@XZ			; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z		; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	?length@?$tvec3@M$01@glm@@SAHXZ			; glm::tvec3<float,2>::length
PUBLIC	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z		; glm::tvec3<float,2>::operator[]
PUBLIC	??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,2>::tvec3<float,2><0>
PUBLIC	?length@?$tvec3@M$00@glm@@SAHXZ			; glm::tvec3<float,1>::length
PUBLIC	??A?$tvec3@M$00@glm@@QEBAAEBMH@Z		; glm::tvec3<float,1>::operator[]
PUBLIC	??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,1>::tvec3<float,1><0>
PUBLIC	??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec3>
PUBLIC	?length@?$tvec3@_N$0A@@glm@@SAHXZ		; glm::tvec3<bool,0>::length
PUBLIC	??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec3<bool,0>::operator[]
PUBLIC	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec3<bool,0>::operator[]
PUBLIC	??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec3<bool,0>::tvec3<bool,0>
PUBLIC	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
PUBLIC	??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z ; glm::equal<float,2,glm::tvec3>
PUBLIC	?length@?$tvec3@_N$01@glm@@SAHXZ		; glm::tvec3<bool,2>::length
PUBLIC	??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z		; glm::tvec3<bool,2>::operator[]
PUBLIC	??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z		; glm::tvec3<bool,2>::operator[]
PUBLIC	??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z		; glm::tvec3<bool,2>::tvec3<bool,2>
PUBLIC	??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z ; glm::all<2,glm::tvec3>
PUBLIC	??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z ; glm::equal<float,1,glm::tvec3>
PUBLIC	?length@?$tvec3@_N$00@glm@@SAHXZ		; glm::tvec3<bool,1>::length
PUBLIC	??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z		; glm::tvec3<bool,1>::operator[]
PUBLIC	??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z		; glm::tvec3<bool,1>::operator[]
PUBLIC	??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z		; glm::tvec3<bool,1>::tvec3<bool,1>
PUBLIC	??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z ; glm::all<1,glm::tvec3>
PUBLIC	?test_vec4_cast@@YAHXZ				; test_vec4_cast
PUBLIC	?length@?$tvec4@M$01@glm@@SAHXZ			; glm::tvec4<float,2>::length
PUBLIC	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z		; glm::tvec4<float,2>::operator[]
PUBLIC	??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,2>::tvec4<float,2><0>
PUBLIC	?length@?$tvec4@M$00@glm@@SAHXZ			; glm::tvec4<float,1>::length
PUBLIC	??A?$tvec4@M$00@glm@@QEBAAEBMH@Z		; glm::tvec4<float,1>::operator[]
PUBLIC	??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,1>::tvec4<float,1><0>
PUBLIC	??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec4>
PUBLIC	?length@?$tvec4@_N$0A@@glm@@SAHXZ		; glm::tvec4<bool,0>::length
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
PUBLIC	??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z ; glm::equal<float,2,glm::tvec4>
PUBLIC	?length@?$tvec4@_N$01@glm@@SAHXZ		; glm::tvec4<bool,2>::length
PUBLIC	??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z		; glm::tvec4<bool,2>::operator[]
PUBLIC	??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,2>::operator[]
PUBLIC	??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<bool,2>::tvec4<bool,2>
PUBLIC	??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z ; glm::all<2,glm::tvec4>
PUBLIC	??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z ; glm::equal<float,1,glm::tvec4>
PUBLIC	?length@?$tvec4@_N$00@glm@@SAHXZ		; glm::tvec4<bool,1>::length
PUBLIC	??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z		; glm::tvec4<bool,1>::operator[]
PUBLIC	??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,1>::operator[]
PUBLIC	??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z		; glm::tvec4<bool,1>::tvec4<bool,1>
PUBLIC	??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z ; glm::all<1,glm::tvec4>
PUBLIC	?test_std_copy@@YAHXZ				; test_std_copy
PUBLIC	??0?$allocator@H@std@@QEAA@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z	; std::allocator<int>::deallocate
PUBLIC	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z	; std::allocator<int>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::size
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero
PUBLIC	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Verify_offset
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
PUBLIC	??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
PUBLIC	?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::resize
PUBLIC	?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::begin
PUBLIC	?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::end
PUBLIC	?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::size
PUBLIC	?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::capacity
PUBLIC	?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
PUBLIC	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
PUBLIC	?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::begin
PUBLIC	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
PUBLIC	?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Verify_offset
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
PUBLIC	??0?$tvec4@N$0A@@glm@@QEAA@XZ			; glm::tvec4<double,0>::tvec4<double,0>
PUBLIC	??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z ; glm::tvec4<float,0>::operator=<double>
PUBLIC	??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec3<double,0> >::allocator<glm::tvec3<double,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
PUBLIC	??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
PUBLIC	?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::resize
PUBLIC	?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::begin
PUBLIC	?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::end
PUBLIC	?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::size
PUBLIC	?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::capacity
PUBLIC	?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first
PUBLIC	??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec3<float,0> >::allocator<glm::tvec3<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
PUBLIC	??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
PUBLIC	?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::begin
PUBLIC	?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::max_size
PUBLIC	?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Verify_offset
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
PUBLIC	??0?$tvec3@N$0A@@glm@@QEAA@XZ			; glm::tvec3<double,0>::tvec3<double,0>
PUBLIC	??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z ; glm::tvec3<float,0>::operator=<double>
PUBLIC	??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
PUBLIC	??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
PUBLIC	?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::resize
PUBLIC	?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::begin
PUBLIC	?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::end
PUBLIC	?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::size
PUBLIC	?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
PUBLIC	?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::capacity
PUBLIC	?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Change_array
PUBLIC	?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
PUBLIC	??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
PUBLIC	?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::deallocate
PUBLIC	?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
PUBLIC	??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
PUBLIC	??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
PUBLIC	?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::begin
PUBLIC	?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
PUBLIC	?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Verify_offset
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
PUBLIC	??0?$tvec2@N$0A@@glm@@QEAA@XZ			; glm::tvec2<double,0>::tvec2<double,0>
PUBLIC	??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z ; glm::tvec2<float,0>::operator=<double>
PUBLIC	main
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>
PUBLIC	??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
PUBLIC	??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<float,0> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1><std::allocator<glm::tvec3<float,0> > const &>
PUBLIC	??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<double,0> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1><>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
PUBLIC	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
PUBLIC	??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>
PUBLIC	??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
PUBLIC	??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
PUBLIC	??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Construct_n<>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<float,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
PUBLIC	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,__int64>
PUBLIC	??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z	; std::_Copy_unchecked<int *,int *>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > &>
PUBLIC	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,glm::tvec4<double,0> *>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > &,__int64>
PUBLIC	??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec4<double,0> *,glm::tvec4<float,0> *>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >,glm::tvec4<float,0> *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > &>
PUBLIC	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,glm::tvec3<double,0> *>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > &,__int64>
PUBLIC	??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec3<double,0> *,glm::tvec3<float,0> *>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >,glm::tvec3<float,0> *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > &>
PUBLIC	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,glm::tvec2<double,0> *>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > &,__int64>
PUBLIC	??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec2<double,0> *,glm::tvec2<float,0> *>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >,glm::tvec2<float,0> *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec3<float,0> > const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
PUBLIC	??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
PUBLIC	??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<float,0> >
PUBLIC	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
PUBLIC	??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<float,0> >
PUBLIC	??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<double,0> >
PUBLIC	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
PUBLIC	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
PUBLIC	??$_Unfancy@H@std@@YAPEAHPEAH@Z			; std::_Unfancy<int>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Get_size_of_n@$0M@@std@@YA_K_K@Z		; std::_Get_size_of_n<12>
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z	; std::forward<int *>
PUBLIC	??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec4<float,0> *>
PUBLIC	??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec3<float,0> *>
PUBLIC	??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec2<float,0> *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
PUBLIC	??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z		; std::_Zero_range<int *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec2<float,0> *,0>
PUBLIC	??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec3<float,0> *,0>
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z		; std::_Get_size_of_n<24>
PUBLIC	??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec4<float,0> *,0>
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z		; std::_Get_size_of_n<32>
PUBLIC	??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z		; std::_Refancy<int *,0>
PUBLIC	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z	; std::_To_address<int *>
PUBLIC	??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> * const &>
PUBLIC	??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec2<double,0> &>
PUBLIC	??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec2<double,0> *,glm::tvec2<double,0> *>
PUBLIC	??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> >
PUBLIC	??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0> >
PUBLIC	??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::construct<glm::tvec3<float,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec3<double,0> * const &>
PUBLIC	??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec3<double,0> &>
PUBLIC	??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec3<double,0> *,glm::tvec3<double,0> *>
PUBLIC	??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<glm::tvec3<double,0> >
PUBLIC	??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0> >
PUBLIC	??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> * const &>
PUBLIC	??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<double,0> &>
PUBLIC	??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<double,0> *,glm::tvec4<double,0> *>
PUBLIC	??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> >
PUBLIC	??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0> >
PUBLIC	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z	; std::_Get_unwrapped<int * const &>
PUBLIC	??$move@AEAH@std@@YA$$QEAHAEAH@Z		; std::move<int &>
PUBLIC	??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>
PUBLIC	??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>
PUBLIC	??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<float,0> *>
PUBLIC	??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_To_address<glm::tvec2<double,0> *>
PUBLIC	??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec2<double,0> >
PUBLIC	??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<double,0> *>
PUBLIC	??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec3<float,0> *>
PUBLIC	??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_To_address<glm::tvec3<double,0> *>
PUBLIC	??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec3<double,0> >
PUBLIC	??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0>,glm::tvec3<double,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec3<double,0> *>
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
PUBLIC	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
PUBLIC	??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<double,0> >
PUBLIC	??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> >
PUBLIC	??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<double,0> *>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
PUBLIC	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z		; std::_Voidify_iter<int *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ ; `string'
PUBLIC	??_C@_0BB@KBEKGHFK@integer?5overflow@		; `string'
PUBLIC	??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@ ; `string'
PUBLIC	??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ ; `string'
PUBLIC	??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ ; `string'
PUBLIC	??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ ; `string'
PUBLIC	??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ ; `string'
PUBLIC	??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40f9999a
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp__wassert:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+107
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+85
	DD	imagerel $unwind$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+135
	DD	imagerel $unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+259
	DD	imagerel $unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec2_cast@@YAHXZ DD imagerel $LN11
	DD	imagerel $LN11+672
	DD	imagerel $unwind$?test_vec2_cast@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$00@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$00@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+270
	DD	imagerel $unwind$??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+270
	DD	imagerel $unwind$??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+270
	DD	imagerel $unwind$??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec3_cast@@YAHXZ DD imagerel $LN11
	DD	imagerel $LN11+679
	DD	imagerel $unwind$?test_vec3_cast@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$00@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$00@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+282
	DD	imagerel $unwind$??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+282
	DD	imagerel $unwind$??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_N$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_N$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+282
	DD	imagerel $unwind$??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_N$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_N$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_vec4_cast@@YAHXZ DD imagerel $LN11
	DD	imagerel $LN11+693
	DD	imagerel $unwind$?test_vec4_cast@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$00@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$00@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+268
	DD	imagerel $unwind$??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+268
	DD	imagerel $unwind$??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$01@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$01@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+268
	DD	imagerel $unwind$??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$00@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$00@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_std_copy@@YAHXZ DD imagerel $LN35
	DD	imagerel $LN35+1951
	DD	imagerel $unwind$?test_std_copy@@YAHXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$0@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$0@?0??test_std_copy@@YAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$1@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$1@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$1@?0??test_std_copy@@YAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$8@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$8@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$8@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$9@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$9@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$9@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$14@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$14@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$14@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$15@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$15@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$15@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$16@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$16@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$16@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$17@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$17@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$17@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$22@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$22@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$22@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$22@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$23@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$23@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$23@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$23@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$24@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$24@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$24@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$25@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$25@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$25@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$25@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$30@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$30@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$30@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$30@?0??test_std_copy@@YAHXZ@4HA
$pdata$?dtor$31@?0??test_std_copy@@YAHXZ@4HA DD imagerel ?dtor$31@?0??test_std_copy@@YAHXZ@4HA
	DD	imagerel ?dtor$31@?0??test_std_copy@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$31@?0??test_std_copy@@YAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@H@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@H@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD imagerel $LN13
	DD	imagerel $LN13+183
	DD	imagerel $unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+246
	DD	imagerel $unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN33
	DD	imagerel $LN33+501
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+314
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z DD imagerel $LN8
	DD	imagerel $LN8+302
	DD	imagerel $unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+314
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN33
	DD	imagerel $LN33+501
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD imagerel $LN8
	DD	imagerel $LN8+302
	DD	imagerel $unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+258
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+216
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+216
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+314
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN33
	DD	imagerel $LN33+513
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD imagerel $LN8
	DD	imagerel $LN8+302
	DD	imagerel $unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$tvec3@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+252
	DD	imagerel $unwind$?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+183
	DD	imagerel $unwind$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+314
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN21
	DD	imagerel $LN21+326
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN33
	DD	imagerel $LN33+501
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD imagerel $LN8
	DD	imagerel $LN8+302
	DD	imagerel $unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+274
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+274
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+371
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+274
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+362
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+274
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z DD imagerel $LN13
	DD	imagerel $LN13+215
	DD	imagerel $unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z DD imagerel $LN6
	DD	imagerel $LN6+111
	DD	imagerel $unwind$??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z DD imagerel $LN13
	DD	imagerel $LN13+215
	DD	imagerel $unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z DD imagerel $LN13
	DD	imagerel $LN13+215
	DD	imagerel $unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z DD imagerel $LN13
	DD	imagerel $LN13+215
	DD	imagerel $unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+336
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+342
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+336
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+155
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+333
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+78
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+215
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0M@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0M@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+290
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+278
	DD	imagerel $unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+161
	DD	imagerel $unwind$??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z
pdata	ENDS
;	COMDAT __real@40f9999a
CONST	SEGMENT
__real@40f9999a DD 040f9999ar			; 7.8
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, 'f', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
CONST	SEGMENT
??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ DB 'cannot seek v'
	DB	'ector iterator after end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 'n', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
CONST	SEGMENT
??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ DB 'cannot seek v'
	DB	'ector iterator before begin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
CONST	SEGMENT
??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
CONST	SEGMENT
??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ DB 'cannot seek v'
	DB	'alue-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@
CONST	SEGMENT
??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'f'
	DB	00H, 'l', 00H, 'o', 00H, 'w', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u'
	DB	00H, 't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xutility', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KBEKGHFK@integer?5overflow@
CONST	SEGMENT
??_C@_0BB@KBEKGHFK@integer?5overflow@ DB 'integer overflow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
CONST	SEGMENT
??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@ DB 'x'
	DB	00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'y', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 'f', 00H, 'u'
	DB	00H, 'n', 00H, 'c', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'l'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H
	DB	'l', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<int *,std::allocator<int> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<int *,std::allocator<int> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<int *,std::allocator<int> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD 022f11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0M@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD 022a11H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'I', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'm', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	02H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021419H
	DD	07010d214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD 022a11H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f0H
	DB	02H
	DB	'`'
	DB	04H
	DB	'`'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 032b11H
	DD	0140112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::_Construct_n<>
	DB	053H
	DB	031H
	DB	031H
	DB	00H
	ORG $+3
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$1 DB 05fH ; std::vector<int,std::allocator<int> >::_Construct_n<>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$2 DB 05fH ; std::vector<int,std::allocator<int> >::_Construct_n<>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcFrameData DD 03H ; std::vector<int,std::allocator<int> >::_Construct_n<>
	DD	00H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcVarDesc
	ORG $+8
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcVarDesc DD 088H ; std::vector<int,std::allocator<int> >::_Construct_n<>
	DD	08H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f0H
	DB	02H
	DB	'`'
	DB	04H
	DB	'`'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 032b11H
	DD	0140112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0 DB 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+3
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2 DB 05fH ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData DD 03H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
	DD	00H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc
	ORG $+8
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc DD 088H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
	DD	08H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f0H
	DB	02H
	DB	'`'
	DB	04H
	DB	'`'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 032b11H
	DD	0140112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0 DB 024H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
	DB	053H
	DB	039H
	DB	00H
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2 DB 05fH ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc DD 088H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
	DD	08H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0
	ORG $+144
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData DD 03H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
	DD	00H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021401H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f0H
	DB	02H
	DB	'`'
	DB	04H
	DB	'`'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 032b11H
	DD	0140112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0 DB 024H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
	DB	053H
	DB	038H
	DB	00H
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1 DB 05fH ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2 DB 05fH ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc DD 088H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
	DD	08H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcName$0
	ORG $+144
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData DD 03H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
	DD	00H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 021301H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 0aH
	DB	00H
	DB	00H
	DB	't'
	DB	06H
	DB	0a1H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
	DD	imagerel $ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD 023211H
	DD	07015d219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc DD 048H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0
	ORG $+96
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData DD 02H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
	DD	00H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 0aH
	DB	00H
	DB	00H
	DB	't'
	DB	06H
	DB	0a1H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
	DD	imagerel $ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD 023211H
	DD	07015d219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc DD 048H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0
	ORG $+96
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData DD 02H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
	DD	00H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
	DB	053H
	DB	034H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@N$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 0aH
	DB	00H
	DB	00H
	DB	't'
	DB	06H
	DB	0a1H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
	DD	imagerel $ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z DD 023211H
	DD	07015d219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc DD 048H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcName$0
	ORG $+96
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData DD 02H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
	DD	00H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcName$0 DB 05fH ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcVarDesc DD 024H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcFrameData DD 01H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DB	053H
	DB	036H
	DB	00H
	ORG $+12
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z DB 0aH
	DB	00H
	DB	00H
	DB	't'
	DB	06H
	DB	0a1H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z DB 028H
	DD	imagerel $stateUnwindMap$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z
	DD	imagerel $ip2state$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z DD 023211H
	DD	07015d219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcName$0 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcName$1 DB 05fH ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcVarDesc DD 048H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcName$0
	ORG $+96
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcFrameData DD 02H ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
	DD	00H
	DQ	FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 022a11H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0 DB 05fH ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc DD 024H ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD 020a19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DB	053H
	DB	037H
	DB	00H
	ORG $+12
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	01H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	00H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@H@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$31@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$30@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$25@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$24@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$23@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$22@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$17@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$16@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$15@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$14@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$9@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$8@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$1@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??test_std_copy@@YAHXZ@4HA
	DD	00H
	DD	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,1,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,1,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,1,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,2,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,2,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,2,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,0,glm::tvec4>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,0,glm::tvec4>
	DD	04H
	DQ	FLAT:??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,0,glm::tvec4>
	DD	00H
	DQ	FLAT:??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$00@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_N$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,1,glm::tvec3>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,1,glm::tvec3>
	DD	03H
	DQ	FLAT:??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,1,glm::tvec3>
	DD	00H
	DQ	FLAT:??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_N$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,2,glm::tvec3>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,2,glm::tvec3>
	DD	03H
	DQ	FLAT:??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,2,glm::tvec3>
	DD	00H
	DQ	FLAT:??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z DD 032b01H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,0,glm::tvec3>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,0,glm::tvec3>
	DD	03H
	DQ	FLAT:??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,0,glm::tvec3>
	DD	00H
	DQ	FLAT:??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$00@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,1,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,1,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,1,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,2,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,2,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,2,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z DD 022a01H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcName$0 DB 052H ; glm::equal<float,0,glm::tvec2>
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcVarDesc DD 024H ; glm::equal<float,0,glm::tvec2>
	DD	02H
	DQ	FLAT:??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcName$0
	ORG $+48
??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcFrameData DD 01H ; glm::equal<float,0,glm::tvec2>
	DD	00H
	DQ	FLAT:??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$00@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$00@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$01@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$01@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
xdata	SEGMENT
$unwind$?test_vec2_cast@@YAHXZ DD 031a01H
	DD	0360109H
	DD	07002H
$unwind$?test_vec3_cast@@YAHXZ DD 041b01H
	DD	03b010aH
	DD	060027003H
$unwind$?test_vec4_cast@@YAHXZ DD 041b01H
	DD	03f010aH
	DD	060027003H
$unwind$?test_std_copy@@YAHXZ DD 031a11H
	DD	0cc0109H
	DD	07002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?test_std_copy@@YAHXZ
$cppxdata$?test_std_copy@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?test_std_copy@@YAHXZ
	DD	imagerel $ip2state$?test_std_copy@@YAHXZ
$stateUnwindMap$?test_std_copy@@YAHXZ DB 01cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??test_std_copy@@YAHXZ@4HA
	DB	05eH
	DD	imagerel ?dtor$8@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$14@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??test_std_copy@@YAHXZ@4HA
	DB	0feH
	DD	imagerel ?dtor$16@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$17@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$23@?0??test_std_copy@@YAHXZ@4HA
	DB	03dH
	DB	03H
	DD	imagerel ?dtor$24@?0??test_std_copy@@YAHXZ@4HA
	DB	036H
	DD	imagerel ?dtor$25@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$30@?0??test_std_copy@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$31@?0??test_std_copy@@YAHXZ@4HA
$ip2state$?test_std_copy@@YAHXZ DB ':'
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	08eH
	DB	04H
	DB	0b5H, 04H
	DB	02H
	DB	016H
	DB	00H
	DB	'0'
	DB	06H
	DB	0a0H
	DB	08H
	DB	099H, 03H
	DB	0aH
	DB	084H
	DB	0cH
	DB	'B'
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	01cH
	DB	00H
	DB	'6'
	DB	0eH
	DB	0a0H
	DB	010H
	DB	099H, 03H
	DB	012H
	DB	084H
	DB	014H
	DB	'B'
	DB	012H
	DB	01cH
	DB	010H
	DB	01cH
	DB	0eH
	DB	01cH
	DB	00H
	DB	'6'
	DB	016H
	DB	0a0H
	DB	018H
	DB	099H, 03H
	DB	01aH
	DB	084H
	DB	01cH
	DB	'B'
	DB	01aH
	DB	01cH
	DB	018H
	DB	01cH
	DB	016H
	DB	01cH
	DB	00H
$unwind$?dtor$0@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$23@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$24@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$25@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$30@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$31@?0??test_std_copy@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
?test_vec2_cast@@YAHXZ$rtcName$0 DB 041H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$1 DB 042H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$2 DB 043H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$3 DB 044H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$4 DB 045H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$5 DB 046H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$6 DB 047H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$7 DB 048H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$8 DB 049H		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$9 DB 04aH		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcName$10 DB 04bH		; test_vec2_cast
	DB	00H
	ORG $+2
?test_vec2_cast@@YAHXZ$rtcVarDesc DD 0168H		; test_vec2_cast
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$10
	DD	0148H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$9
	DD	0128H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$8
	DD	0108H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$7
	DD	0e8H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$6
	DD	0c8H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$5
	DD	0a8H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$4
	DD	088H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcName$0
	ORG $+528
?test_vec2_cast@@YAHXZ$rtcFrameData DD 0bH		; test_vec2_cast
	DD	00H
	DQ	FLAT:?test_vec2_cast@@YAHXZ$rtcVarDesc
?test_vec3_cast@@YAHXZ$rtcName$0 DB 041H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$1 DB 042H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$2 DB 043H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$3 DB 044H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$4 DB 045H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$5 DB 046H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$6 DB 047H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcName$7 DB 048H		; test_vec3_cast
	DB	00H
	ORG $+2
?test_vec3_cast@@YAHXZ$rtcVarDesc DD 0178H		; test_vec3_cast
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$7
	DD	0148H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$6
	DD	0118H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$5
	DD	0e8H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$4
	DD	0b8H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$3
	DD	088H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$1
	DD	028H
	DD	0cH
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcName$0
	ORG $+384
?test_vec3_cast@@YAHXZ$rtcFrameData DD 08H		; test_vec3_cast
	DD	00H
	DQ	FLAT:?test_vec3_cast@@YAHXZ$rtcVarDesc
?test_vec4_cast@@YAHXZ$rtcName$0 DB 041H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$1 DB 042H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$2 DB 043H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$3 DB 044H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$4 DB 045H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$5 DB 046H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$6 DB 047H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcName$7 DB 048H		; test_vec4_cast
	DB	00H
	ORG $+2
?test_vec4_cast@@YAHXZ$rtcVarDesc DD 0188H		; test_vec4_cast
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$7
	DD	0158H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$6
	DD	0128H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$5
	DD	0f8H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$4
	DD	0c8H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$3
	DD	098H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcName$0
	ORG $+384
?test_vec4_cast@@YAHXZ$rtcFrameData DD 08H		; test_vec4_cast
	DD	00H
	DQ	FLAT:?test_vec4_cast@@YAHXZ$rtcVarDesc
?test_std_copy@@YAHXZ$rtcName$0 DB 048H			; test_std_copy
	DB	069H
	DB	067H
	DB	068H
	DB	00H
	ORG $+3
?test_std_copy@@YAHXZ$rtcName$1 DB 04dH			; test_std_copy
	DB	065H
	DB	064H
	DB	069H
	DB	075H
	DB	06dH
	DB	00H
	ORG $+1
?test_std_copy@@YAHXZ$rtcName$2 DB 048H			; test_std_copy
	DB	069H
	DB	067H
	DB	068H
	DB	034H
	DB	00H
	ORG $+2
?test_std_copy@@YAHXZ$rtcName$3 DB 04dH			; test_std_copy
	DB	065H
	DB	064H
	DB	069H
	DB	075H
	DB	06dH
	DB	034H
	DB	00H
?test_std_copy@@YAHXZ$rtcName$4 DB 048H			; test_std_copy
	DB	069H
	DB	067H
	DB	068H
	DB	033H
	DB	00H
	ORG $+2
?test_std_copy@@YAHXZ$rtcName$5 DB 04dH			; test_std_copy
	DB	065H
	DB	064H
	DB	069H
	DB	075H
	DB	06dH
	DB	033H
	DB	00H
?test_std_copy@@YAHXZ$rtcName$6 DB 048H			; test_std_copy
	DB	069H
	DB	067H
	DB	068H
	DB	032H
	DB	00H
	ORG $+2
?test_std_copy@@YAHXZ$rtcName$7 DB 04dH			; test_std_copy
	DB	065H
	DB	064H
	DB	069H
	DB	075H
	DB	06dH
	DB	032H
	DB	00H
?test_std_copy@@YAHXZ$rtcName$8 DB 076H			; test_std_copy
	DB	031H
	DB	00H
	ORG $+1
?test_std_copy@@YAHXZ$rtcName$9 DB 076H			; test_std_copy
	DB	032H
	DB	00H
	ORG $+1
?test_std_copy@@YAHXZ$rtcFrameData DD 0aH		; test_std_copy
	DD	00H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcVarDesc
	ORG $+8
?test_std_copy@@YAHXZ$rtcVarDesc DD 0278H		; test_std_copy
	DD	010H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$9
	DD	0238H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$8
	DD	01f8H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$7
	DD	01b8H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$6
	DD	0178H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$5
	DD	0138H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$4
	DD	0f8H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$3
	DD	0b8H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?test_std_copy@@YAHXZ$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Iterator_base12::_Orphan_me_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Iterator_base12::_Orphan_me_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Iterator_base12::_Orphan_me_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD 020a01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::_Adopt_locked
	DD	04H
	DQ	FLAT:?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+48
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::_Adopt_locked
	DD	00H
	DQ	FLAT:?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD 022501H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Assign_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::_Assign_locked
	DD	04H
	DQ	FLAT:?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcName$0
	ORG $+48
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::_Assign_locked
	DD	00H
	DQ	FLAT:?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z PROC		; std::_Voidify_iter<int *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z ENDP		; std::_Voidify_iter<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z	; std::_Voidify_iter<int *>
	mov	rdx, rax
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@H@std@@YA$$QEAHAEAH@Z	; std::forward<int>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<double,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<double,0> *>
	mov	rdx, rax
	mov	ecx, 32					; 00000020H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<double,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 32					; 00000020H
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec4<double,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec4<double,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec4<float,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec3<double,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec3<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0>,glm::tvec3<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec3<double,0> *>
	mov	rdx, rax
	mov	ecx, 24
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec3<double,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0>,glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec3<double,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec3<double,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec3<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec3<float,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec3<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec2<double,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec2<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<double,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec2<double,0> >
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 681  :         }
; 682  :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::tvec2<double,0> >, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_To_address<glm::tvec2<double,0> *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_To_address<glm::tvec2<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Voidify_iter<glm::tvec2<float,0> *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Voidify_iter<glm::tvec2<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__formal$ = 64
_Ptr$ = 72
??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], 4
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAH@std@@YAPEAXPEAH@Z	; std::_Voidify_iter<int *>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T2[rsp], rax
	mov	rdi, QWORD PTR $T2[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR $T1[rsp]
	rep stosb

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@H@std@@YA$$QEAHAEAH@Z	; std::forward<int>
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAH@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAH@std@@YA$$QEAHAEAH@Z PROC			; std::move<int &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAH@std@@YA$$QEAHAEAH@Z ENDP			; std::move<int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z PROC	; std::_Get_unwrapped<int * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ENDP	; std::_Get_unwrapped<int * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<double,0> *>
	mov	rdx, rax
	mov	ecx, 32					; 00000020H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@N$0A@@glm@@QEAA@XZ		; glm::tvec4<double,0>::tvec4<double,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec4<double,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0>,glm::tvec4<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec4<double,0> *,glm::tvec4<double,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_To_address<glm::tvec4<double,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec4<double,0> *,glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec4<double,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec4<double,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec4<double,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec4<double,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec4@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec4<float,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec3@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec3<double,0> *>
	mov	rdx, rax
	mov	ecx, 24
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec3@N$0A@@glm@@QEAA@XZ		; glm::tvec3<double,0>::tvec3<double,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<glm::tvec3<double,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec3<double,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<double,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec3@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0>,glm::tvec3<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec3<double,0> *,glm::tvec3<double,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_To_address<glm::tvec3<double,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_To_address<glm::tvec3<double,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_To_address<glm::tvec3<double,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec3<double,0> *,glm::tvec3<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec3<double,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec3<double,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec3<double,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec3<double,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::construct<glm::tvec3<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec3@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec3@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec3<float,0> *>
	mov	rdx, rax
	mov	ecx, 12
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@XZ		; glm::tvec3<float,0>::tvec3<float,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::construct<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec2@N$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@N$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<double,0> *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec2@N$0A@@glm@@QEAA@XZ		; glm::tvec2<double,0>::tvec2<double,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> >, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rcx, QWORD PTR <_Vals_0>$[rsp]
	call	??$forward@U?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ; std::forward<glm::tvec2<double,0> >
	mov	QWORD PTR tv64[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	call	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
	mov	rcx, QWORD PTR tv64[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec2@N$0A@@glm@@U12@@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0>,glm::tvec2<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z PROC ; std::_Copy_memmove<glm::tvec2<double,0> *,glm::tvec2<double,0> *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_To_address<glm::tvec2<double,0> *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_To_address<glm::tvec2<double,0> *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_To_address<glm::tvec2<double,0> *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z ENDP ; std::_Copy_memmove<glm::tvec2<double,0> *,glm::tvec2<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z PROC ; std::move<glm::tvec2<double,0> &>, COMDAT

; 1352 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1353 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1354 : }

	pop	rdi
	ret	0
??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ENDP ; std::move<glm::tvec2<double,0> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z PROC ; std::_Get_unwrapped<glm::tvec2<double,0> * const &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;

	mov	rax, QWORD PTR _It$[rsp]
	mov	rax, QWORD PTR [rax]

; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	pop	rdi
	ret	0
??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z ENDP ; std::_Get_unwrapped<glm::tvec2<double,0> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0> >, COMDAT

; 673  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : #if _HAS_CXX20
; 675  :         if (_STD is_constant_evaluated()) {
; 676  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 677  :         } else
; 678  : #endif // _HAS_CXX20
; 679  :         {
; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Voidify_iter@PEAU?$tvec2@M$0A@@glm@@@std@@YAPEAXPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Voidify_iter<glm::tvec2<float,0> *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@XZ		; glm::tvec2<float,0>::tvec2<float,0>

; 681  :         }
; 682  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z
_TEXT	SEGMENT
_Val$ = 16
??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z PROC		; std::_To_address<int *>, COMDAT

; 3946 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 3947 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3948 :     return _Val;

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]

; 3949 : }

	pop	rdi
	ret	0
??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ENDP		; std::_To_address<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z PROC		; std::_Refancy<int *,0>, COMDAT

; 286  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 287  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 288  : }

	pop	rdi
	ret	0
??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z ENDP		; std::_Refancy<int *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 32		; 00000020H
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z PROC ; std::_Refancy<glm::tvec4<float,0> *,0>, COMDAT

; 286  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 287  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 288  : }

	pop	rdi
	ret	0
??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Refancy<glm::tvec4<float,0> *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 24
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z PROC ; std::_Refancy<glm::tvec3<float,0> *,0>, COMDAT

; 286  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 287  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 288  : }

	pop	rdi
	ret	0
??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Refancy<glm::tvec3<float,0> *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z PROC ; std::_Refancy<glm::tvec2<float,0> *,0>, COMDAT

; 286  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 287  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 288  : }

	pop	rdi
	ret	0
??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Refancy<glm::tvec2<float,0> *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 130  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG72224
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG72225
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 135				; 00000087H
	lea	rdx, OFFSET FLAT:$SG72226
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 135				; 00000087H
	lea	r8, OFFSET FLAT:$SG72227
	lea	rdx, OFFSET FLAT:$SG72228
	lea	rcx, OFFSET FLAT:$SG72229
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 143  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@H$$V@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int>

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_First$ = 64
_Last$ = 72
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z PROC		; std::_Zero_range<int *>, COMDAT

; 1824 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1825 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _First_ch$[rsp], rax

; 1826 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _Last_ch$[rsp], rax

; 1827 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR _First_ch$[rsp]
	call	memset

; 1828 :     return _Last;

	mov	rax, QWORD PTR _Last$[rsp]

; 1829 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z ENDP		; std::_Zero_range<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,std::allocator<int> >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ; std::_Get_unwrapped<int * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAH@std@@YA?A_TAEBQEAH@Z ; std::_Get_unwrapped<int * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ; std::_Copy_memmove<int *,int *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	rcx, QWORD PTR _Dest$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 4
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAH@std@@YA$$QEAHAEAH@Z	; std::move<int &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@H@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAX$$QEAH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int>

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_move<int *,std::allocator<int> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_move<int *,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@QEAU?$tvec4@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::construct<glm::tvec4<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec4@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec4@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec4<double,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec4@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec4<double,0> *,glm::tvec4<double,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 5
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec4@N$0A@@glm@@@std@@YA$$QEAU?$tvec4@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec4<double,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec4@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec4@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<glm::tvec4<double,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec4@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@QEAU?$tvec4@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::construct<glm::tvec4<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<double,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec3@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@QEAU?$tvec3@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::construct<glm::tvec3<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 24
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec3<double,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec3@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec3@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec3<double,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<double,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec3@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec3<double,0> *,glm::tvec3<double,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	imul	rax, rax, 24
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 24
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec3@N$0A@@glm@@@std@@YA$$QEAU?$tvec3@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec3<double,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec3@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec3@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<glm::tvec3<double,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<float,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec3@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@QEAU?$tvec3@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::construct<glm::tvec3<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<float,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec2@N$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@QEAU?$tvec2@N$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::construct<glm::tvec2<double,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1734 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1735 :     // move [_First, _Last) to raw _Dest, using _Al
; 1736 :     // note: only called internally from elsewhere in the STL
; 1737 :     using _Ptrval     = typename _Alloc::value_type*;
; 1738 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> * const &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 1739 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEBQEAU?$tvec2@N$0A@@glm@@@std@@YA?A_TAEBQEAU?$tvec2@N$0A@@glm@@@Z ; std::_Get_unwrapped<glm::tvec2<double,0> * const &>
	mov	QWORD PTR _ULast$[rsp], rax

; 1740 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1741 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1742 : #if _HAS_CXX20
; 1743 :         if (!_STD is_constant_evaluated())
; 1744 : #endif // _HAS_CXX20
; 1745 :         {
; 1746 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_memmove@PEAU?$tvec2@N$0A@@glm@@PEAU12@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@00@Z ; std::_Copy_memmove<glm::tvec2<double,0> *,glm::tvec2<double,0> *>

; 1747 :             return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rsp]
	mov	rcx, QWORD PTR _ULast$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali

; 1748 :         }
; 1749 :     }
; 1750 : 
; 1751 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >

; 1752 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rsp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rsp]
	cmp	QWORD PTR _UFirst$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 1753 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$move@AEAU?$tvec2@N$0A@@glm@@@std@@YA$$QEAU?$tvec2@N$0A@@glm@@AEAU12@@Z ; std::move<glm::tvec2<double,0> &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@U?$tvec2@N$0A@@glm@@@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$tvec2@N$0A@@glm@@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<glm::tvec2<double,0> >

; 1754 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1755 : 
; 1756 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]
$LN1@Uninitiali:

; 1757 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$ = 56
$T4 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<>, COMDAT

; 1655 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1656 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<float,0> >
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$construct@U?$tvec2@M$0A@@glm@@$$V@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SAXAEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@QEAU?$tvec2@M$0A@@glm@@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::construct<glm::tvec2<float,0> >

; 1657 :         ++_Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 1658 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release, COMDAT

; 1660 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1661 :         _First = _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1662 :         return _Last;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 1663 :     }

	pop	rdi
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1650 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1651 :         _Destroy_range(_First, _Last, _Al);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >

; 1652 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1645 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 669  :         }
; 670  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z PROC ; std::forward<glm::tvec2<float,0> *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z ENDP ; std::forward<glm::tvec2<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z PROC ; std::forward<glm::tvec3<float,0> *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z ENDP ; std::forward<glm::tvec3<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z PROC ; std::forward<glm::tvec4<float,0> *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z ENDP ; std::forward<glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z PROC		; std::forward<int *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z ENDP		; std::forward<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
_TEXT	SEGMENT
_FirstPtr$ = 32
_LastPtr$ = 40
_DestPtr$ = 48
_First_ch$ = 56
_Last_ch$ = 64
_Dest_ch$ = 72
_Count$ = 80
_First$ = 112
_Last$ = 120
_Dest$ = 128
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z PROC	; std::_Copy_memmove<int *,int *>, COMDAT

; 4035 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 4036 :     auto _FirstPtr              = _To_address(_First);

	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _FirstPtr$[rsp], rax

; 4037 :     auto _LastPtr               = _To_address(_Last);

	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _LastPtr$[rsp], rax

; 4038 :     auto _DestPtr               = _To_address(_Dest);

	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_To_address@PEAH@std@@YA?A_PAEBQEAH@Z ; std::_To_address<int *>
	mov	QWORD PTR _DestPtr$[rsp], rax

; 4039 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	rax, QWORD PTR _FirstPtr$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 4040 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	rax, QWORD PTR _LastPtr$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 4041 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	rax, QWORD PTR _DestPtr$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 4042 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 4043 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	memmove

; 4044 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4045 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 4046 :     } else {
; 4047 :         return _Dest + (_LastPtr - _FirstPtr);
; 4048 :     }
; 4049 : }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ENDP	; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 2
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0M@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0M@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<12>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1537228672809129301		; 1555555555555555H
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 1537228672809129301		; 1555555555555555H
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 12
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0M@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 3
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 67   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@H@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@H@std@@YAPEAHPEAH@Z PROC			; std::_Unfancy<int>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@H@std@@YAPEAHPEAH@Z ENDP			; std::_Unfancy<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<double,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec4<float,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec3<double,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec3<float,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec2<double,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z PROC ; std::_Unfancy<glm::tvec2<float,0> >, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ENDP ; std::_Unfancy<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z PROC ; std::forward<std::allocator<int> const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ENDP ; std::forward<std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<int> >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>
	mov	QWORD PTR _PFirst$4[rsp], rax

; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);

	mov	rax, QWORD PTR _PFirst$4[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rdx, rax
	mov	rcx, QWORD PTR _PFirst$4[rsp]
	call	??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z	; std::_Zero_range<int *>

; 1843 :             return _First + _Count;

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	jmp	SHORT $LN1@Uninitiali

; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
	mov	QWORD PTR $T5[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	mov	rax, QWORD PTR $T5[rsp]
$LN1@Uninitiali:

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_PFirst$4 = 32
_Backout$ = 56
$T5 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<int> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Oldsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 32	; 00000020H
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec4<double,0> *,std::allocator<glm::tvec4<double,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec4<float,0> > const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 24
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec3<double,0> *,std::allocator<glm::tvec3<double,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec3<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec3<float,0> > const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec3<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 150  :     }
; 151  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1357 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 1358 :         if (_Newsize > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN2@Resize_rea

; 1359 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
$LN2@Resize_rea:

; 1360 :         }
; 1361 : 
; 1362 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1363 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1364 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1365 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1366 : 
; 1367 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1368 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rsp], rax

; 1369 : 
; 1370 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1371 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rax, QWORD PTR _Oldsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Appended_first$[rsp], rax

; 1372 :         pointer _Appended_last        = _Appended_first;

	mov	rax, QWORD PTR _Appended_first$[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1373 : 
; 1374 :         _TRY_BEGIN
; 1375 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1376 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1377 :         } else {
; 1378 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1379 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Appended_first$[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR _Appended_last$[rsp], rax

; 1380 :         }
; 1381 : 
; 1382 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1383 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Newvec$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAU?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@QEAU12@0PEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_move<glm::tvec2<double,0> *,std::allocator<glm::tvec2<double,0> > >
	npad	1
	jmp	SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1384 :         } else {
; 1385 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1386 :         }
; 1387 :         _CATCH_ALL
; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1390 :         _RERAISE;
; 1391 :         _CATCH_END
; 1392 : 
; 1393 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rsp]
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rdx, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Change_array

; 1394 :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newcapacity$ = 72
_Newvec$ = 80
_Appended_first$ = 88
_Appended_last$ = 96
tv140 = 104
this$ = 128
_Newsize$ = 136
_Val$ = 144
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1387 :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1388 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Appended_last$[rbp]
	mov	rcx, QWORD PTR _Appended_first$[rbp]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1389 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate

; 1390 :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1391 :         _CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 1833 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 1834 :     // value-initialize _Count objects to raw _First, using _Al
; 1835 :     using _Ptrty = typename _Alloc::value_type*;
; 1836 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())
; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             auto _PFirst = _Unfancy(_First);
; 1842 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1843 :             return _First + _Count;
; 1844 :         }
; 1845 :     }
; 1846 : 
; 1847 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	npad	1

; 1848 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rsp]
	dec	rax
	mov	QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN3@Uninitiali

; 1849 :         _Backout._Emplace_back();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Emplace_back<>

; 1850 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1851 : 
; 1852 :     return _Backout._Release();

	lea	rcx, QWORD PTR _Backout$[rsp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::_Release
	mov	QWORD PTR $T4[rsp], rax
	lea	rcx, QWORD PTR _Backout$[rsp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	mov	rax, QWORD PTR $T4[rsp]

; 1853 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 40
$T4 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >::~_Uninitialized_backout_al<std::allocator<glm::tvec2<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 34   :         if (_Target) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 35   :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1334 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1335 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1336 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1337 :         }
; 1338 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1320 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 1321 :         // create a new _Container_proxy pointing at _Mycont
; 1322 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 1323 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rsp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1324 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1325 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<glm::tvec2<float,0> > const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 972  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 973  :     // deallocate a plain pointer using an allocator
; 974  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 975  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 976  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 977  :     } else {
; 978  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 979  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 980  :     }
; 981  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >,glm::tvec2<float,0> *>, COMDAT

; 1370 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1371 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1372 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rcx, QWORD PTR _UIt$[rsp]
	call	??$forward@PEAU?$tvec2@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec2@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec2<float,0> *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Seek_to

; 1373 :     } else {
; 1374 :         _It = _STD forward<_UIter>(_UIt);
; 1375 :     }
; 1376 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >,glm::tvec2<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z PROC ; std::_Copy_unchecked<glm::tvec2<double,0> *,glm::tvec2<float,0> *>, COMDAT

; 4055 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4056 :     // copy [_First, _Last) to [_Dest, ...)
; 4057 :     // note: _Copy_unchecked has callers other than the copy family
; 4058 :     if constexpr (_Iter_copy_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4059 : #if _HAS_CXX20
; 4060 :         if (!_STD is_constant_evaluated())
; 4061 : #endif // _HAS_CXX20
; 4062 :         {
; 4063 :             return _Copy_memmove(_First, _Last, _Dest);
; 4064 :         }
; 4065 :     }
; 4066 : 
; 4067 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	jmp	SHORT $LN4@Copy_unche
$LN2@Copy_unche:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 8
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 16
	mov	QWORD PTR _First$[rsp], rax
$LN4@Copy_unche:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Copy_unche

; 4068 :         *_Dest = *_First;

	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z ; glm::tvec2<float,0>::operator=<double>

; 4069 :     }

	jmp	SHORT $LN2@Copy_unche
$LN3@Copy_unche:

; 4070 : 
; 4071 :     return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]

; 4072 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z ENDP ; std::_Copy_unchecked<glm::tvec2<double,0> *,glm::tvec2<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_COff$1 = 48
_It$ = 80
_Off$ = 88
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > &,__int64>, COMDAT

; 1336 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1337 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1338 :         return _It + 0;
; 1339 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1340 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1341 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1342 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1343 :         const auto _COff = static_cast<_CDiff>(_Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	QWORD PTR _COff$1[rsp], rax
$LN4@Get_unwrap:

; 1344 : 
; 1345 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR _COff$1[rsp], rax
	jg	SHORT $LN8@Get_unwrap
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@Get_unwrap
	mov	rax, -9223372036854775808		; 8000000000000000H
	cmp	QWORD PTR _COff$1[rsp], rax
	jl	SHORT $LN8@Get_unwrap
$LN10@Get_unwrap:
	jmp	SHORT $LN9@Get_unwrap
$LN8@Get_unwrap:
$LN7@Get_unwrap:
	lea	rax, OFFSET FLAT:??_C@_0BB@KBEKGHFK@integer?5overflow@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1347				; 00000543H
	lea	rdx, OFFSET FLAT:??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Get_unwrap
	int	3
	xor	eax, eax
$LN12@Get_unwrap:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1347				; 00000543H
	lea	r8, OFFSET FLAT:??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Get_unwrap
$LN9@Get_unwrap:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Get_unwrap

; 1346 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1347 :             "integer overflow");
; 1348 :         (void) _COff;
; 1349 : 
; 1350 :         _It._Verify_offset(static_cast<_IDiff>(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Verify_offset

; 1351 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Unwrapped

; 1352 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1353 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1354 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1355 :     } else {
; 1356 :         // pass through iterator that doesn't participate in checking
; 1357 :         return static_cast<_Iter&&>(_It);
; 1358 :     }
; 1359 : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z PROC ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,glm::tvec2<double,0> *>, COMDAT

; 1415 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1416 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1417 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1418 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4

; 1419 :     } else {
; 1420 :         return _Distance_unknown{};
; 1421 :     }
; 1422 : }

	pop	rdi
	ret	0
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,glm::tvec2<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;
; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Unwrapped

; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > >, COMDAT

; 1254 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1255 :     // check that [_First, _Last) forms an iterator range
; 1256 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1257 :         _Verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 1258 :     }
; 1259 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >,glm::tvec3<float,0> *>, COMDAT

; 1370 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1371 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1372 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rcx, QWORD PTR _UIt$[rsp]
	call	??$forward@PEAU?$tvec3@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec3@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec3<float,0> *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Seek_to

; 1373 :     } else {
; 1374 :         _It = _STD forward<_UIter>(_UIt);
; 1375 :     }
; 1376 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >,glm::tvec3<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z PROC ; std::_Copy_unchecked<glm::tvec3<double,0> *,glm::tvec3<float,0> *>, COMDAT

; 4055 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4056 :     // copy [_First, _Last) to [_Dest, ...)
; 4057 :     // note: _Copy_unchecked has callers other than the copy family
; 4058 :     if constexpr (_Iter_copy_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4059 : #if _HAS_CXX20
; 4060 :         if (!_STD is_constant_evaluated())
; 4061 : #endif // _HAS_CXX20
; 4062 :         {
; 4063 :             return _Copy_memmove(_First, _Last, _Dest);
; 4064 :         }
; 4065 :     }
; 4066 : 
; 4067 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	jmp	SHORT $LN4@Copy_unche
$LN2@Copy_unche:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 12
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 24
	mov	QWORD PTR _First$[rsp], rax
$LN4@Copy_unche:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Copy_unche

; 4068 :         *_Dest = *_First;

	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z ; glm::tvec3<float,0>::operator=<double>

; 4069 :     }

	jmp	SHORT $LN2@Copy_unche
$LN3@Copy_unche:

; 4070 : 
; 4071 :     return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]

; 4072 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z ENDP ; std::_Copy_unchecked<glm::tvec3<double,0> *,glm::tvec3<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_COff$1 = 48
_It$ = 80
_Off$ = 88
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > &,__int64>, COMDAT

; 1336 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1337 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1338 :         return _It + 0;
; 1339 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1340 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1341 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1342 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1343 :         const auto _COff = static_cast<_CDiff>(_Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	QWORD PTR _COff$1[rsp], rax
$LN4@Get_unwrap:

; 1344 : 
; 1345 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR _COff$1[rsp], rax
	jg	SHORT $LN8@Get_unwrap
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@Get_unwrap
	mov	rax, -9223372036854775808		; 8000000000000000H
	cmp	QWORD PTR _COff$1[rsp], rax
	jl	SHORT $LN8@Get_unwrap
$LN10@Get_unwrap:
	jmp	SHORT $LN9@Get_unwrap
$LN8@Get_unwrap:
$LN7@Get_unwrap:
	lea	rax, OFFSET FLAT:??_C@_0BB@KBEKGHFK@integer?5overflow@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1347				; 00000543H
	lea	rdx, OFFSET FLAT:??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Get_unwrap
	int	3
	xor	eax, eax
$LN12@Get_unwrap:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1347				; 00000543H
	lea	r8, OFFSET FLAT:??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Get_unwrap
$LN9@Get_unwrap:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Get_unwrap

; 1346 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1347 :             "integer overflow");
; 1348 :         (void) _COff;
; 1349 : 
; 1350 :         _It._Verify_offset(static_cast<_IDiff>(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Verify_offset

; 1351 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Unwrapped

; 1352 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1353 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1354 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1355 :     } else {
; 1356 :         // pass through iterator that doesn't participate in checking
; 1357 :         return static_cast<_Iter&&>(_It);
; 1358 :     }
; 1359 : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z PROC ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,glm::tvec3<double,0> *>, COMDAT

; 1415 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1416 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1417 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1418 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx

; 1419 :     } else {
; 1420 :         return _Distance_unknown{};
; 1421 :     }
; 1422 : }

	pop	rdi
	ret	0
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z ENDP ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,glm::tvec3<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;
; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Unwrapped

; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > >, COMDAT

; 1254 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1255 :     // check that [_First, _Last) forms an iterator range
; 1256 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1257 :         _Verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 1258 :     }
; 1259 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >,glm::tvec4<float,0> *>, COMDAT

; 1370 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1371 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1372 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rcx, QWORD PTR _UIt$[rsp]
	call	??$forward@PEAU?$tvec4@M$0A@@glm@@@std@@YA$$QEAPEAU?$tvec4@M$0A@@glm@@AEAPEAU12@@Z ; std::forward<glm::tvec4<float,0> *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Seek_to

; 1373 :     } else {
; 1374 :         _It = _STD forward<_UIter>(_UIt);
; 1375 :     }
; 1376 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >,glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z PROC ; std::_Copy_unchecked<glm::tvec4<double,0> *,glm::tvec4<float,0> *>, COMDAT

; 4055 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4056 :     // copy [_First, _Last) to [_Dest, ...)
; 4057 :     // note: _Copy_unchecked has callers other than the copy family
; 4058 :     if constexpr (_Iter_copy_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4059 : #if _HAS_CXX20
; 4060 :         if (!_STD is_constant_evaluated())
; 4061 : #endif // _HAS_CXX20
; 4062 :         {
; 4063 :             return _Copy_memmove(_First, _Last, _Dest);
; 4064 :         }
; 4065 :     }
; 4066 : 
; 4067 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	jmp	SHORT $LN4@Copy_unche
$LN2@Copy_unche:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 16
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Copy_unche:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Copy_unche

; 4068 :         *_Dest = *_First;

	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z ; glm::tvec4<float,0>::operator=<double>

; 4069 :     }

	jmp	SHORT $LN2@Copy_unche
$LN3@Copy_unche:

; 4070 : 
; 4071 :     return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]

; 4072 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z ENDP ; std::_Copy_unchecked<glm::tvec4<double,0> *,glm::tvec4<float,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_COff$1 = 48
_It$ = 80
_Off$ = 88
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > &,__int64>, COMDAT

; 1336 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1337 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1338 :         return _It + 0;
; 1339 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1340 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1341 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1342 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1343 :         const auto _COff = static_cast<_CDiff>(_Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	QWORD PTR _COff$1[rsp], rax
$LN4@Get_unwrap:

; 1344 : 
; 1345 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR _COff$1[rsp], rax
	jg	SHORT $LN8@Get_unwrap
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@Get_unwrap
	mov	rax, -9223372036854775808		; 8000000000000000H
	cmp	QWORD PTR _COff$1[rsp], rax
	jl	SHORT $LN8@Get_unwrap
$LN10@Get_unwrap:
	jmp	SHORT $LN9@Get_unwrap
$LN8@Get_unwrap:
$LN7@Get_unwrap:
	lea	rax, OFFSET FLAT:??_C@_0BB@KBEKGHFK@integer?5overflow@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1347				; 00000543H
	lea	rdx, OFFSET FLAT:??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Get_unwrap
	int	3
	xor	eax, eax
$LN12@Get_unwrap:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1347				; 00000543H
	lea	r8, OFFSET FLAT:??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Get_unwrap
$LN9@Get_unwrap:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Get_unwrap

; 1346 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1347 :             "integer overflow");
; 1348 :         (void) _COff;
; 1349 : 
; 1350 :         _It._Verify_offset(static_cast<_IDiff>(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Verify_offset

; 1351 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Unwrapped

; 1352 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1353 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1354 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1355 :     } else {
; 1356 :         // pass through iterator that doesn't participate in checking
; 1357 :         return static_cast<_Iter&&>(_It);
; 1358 :     }
; 1359 : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z PROC ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,glm::tvec4<double,0> *>, COMDAT

; 1415 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1416 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1417 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1418 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5

; 1419 :     } else {
; 1420 :         return _Distance_unknown{};
; 1421 :     }
; 1422 : }

	pop	rdi
	ret	0
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z ENDP ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,glm::tvec4<double,0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;
; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Unwrapped

; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > >, COMDAT

; 1254 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1255 :     // check that [_First, _Last) forms an iterator range
; 1256 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1257 :         _Verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 1258 :     }
; 1259 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>, COMDAT

; 1370 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1371 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1372 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rcx, QWORD PTR _UIt$[rsp]
	call	??$forward@PEAH@std@@YA$$QEAPEAHAEAPEAH@Z ; std::forward<int *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to

; 1373 :     } else {
; 1374 :         _It = _STD forward<_UIter>(_UIt);
; 1375 :     }
; 1376 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z PROC	; std::_Copy_unchecked<int *,int *>, COMDAT

; 4055 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4056 :     // copy [_First, _Last) to [_Dest, ...)
; 4057 :     // note: _Copy_unchecked has callers other than the copy family
; 4058 :     if constexpr (_Iter_copy_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4059 : #if _HAS_CXX20
; 4060 :         if (!_STD is_constant_evaluated())
; 4061 : #endif // _HAS_CXX20
; 4062 :         {
; 4063 :             return _Copy_memmove(_First, _Last, _Dest);

	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ; std::_Copy_memmove<int *,int *>
	jmp	SHORT $LN1@Copy_unche

; 4064 :         }
; 4065 :     }
; 4066 : 
; 4067 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	jmp	SHORT $LN4@Copy_unche
$LN2@Copy_unche:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 4
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 4
	mov	QWORD PTR _First$[rsp], rax
$LN4@Copy_unche:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Copy_unche

; 4068 :         *_Dest = *_First;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx

; 4069 :     }

	jmp	SHORT $LN2@Copy_unche
$LN3@Copy_unche:

; 4070 : 
; 4071 :     return _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]
$LN1@Copy_unche:

; 4072 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z ENDP	; std::_Copy_unchecked<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_COff$1 = 48
_It$ = 80
_Off$ = 88
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,__int64>, COMDAT

; 1336 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1337 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1338 :         return _It + 0;
; 1339 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1340 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1341 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1342 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1343 :         const auto _COff = static_cast<_CDiff>(_Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	QWORD PTR _COff$1[rsp], rax
$LN4@Get_unwrap:

; 1344 : 
; 1345 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	QWORD PTR _COff$1[rsp], rax
	jg	SHORT $LN8@Get_unwrap
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@Get_unwrap
	mov	rax, -9223372036854775808		; 8000000000000000H
	cmp	QWORD PTR _COff$1[rsp], rax
	jl	SHORT $LN8@Get_unwrap
$LN10@Get_unwrap:
	jmp	SHORT $LN9@Get_unwrap
$LN8@Get_unwrap:
$LN7@Get_unwrap:
	lea	rax, OFFSET FLAT:??_C@_0BB@KBEKGHFK@integer?5overflow@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1347				; 00000543H
	lea	rdx, OFFSET FLAT:??_C@_0GD@GLKFIMHC@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Get_unwrap
	int	3
	xor	eax, eax
$LN12@Get_unwrap:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1347				; 00000543H
	lea	r8, OFFSET FLAT:??_C@_1MG@NOLPABAB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@NMONALKO@?$AA?$CC?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?5?$AAo?$AAv?$AAe?$AAr?$AAf?$AAl@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Get_unwrap
$LN9@Get_unwrap:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Get_unwrap

; 1346 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1347 :             "integer overflow");
; 1348 :         (void) _COff;
; 1349 : 
; 1350 :         _It._Verify_offset(static_cast<_IDiff>(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Verify_offset

; 1351 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped

; 1352 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1353 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1354 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1355 :     } else {
; 1356 :         // pass through iterator that doesn't participate in checking
; 1357 :         return static_cast<_Iter&&>(_It);
; 1358 :     }
; 1359 : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z PROC ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>, COMDAT

; 1415 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1416 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1417 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1418 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2

; 1419 :     } else {
; 1420 :         return _Distance_unknown{};
; 1421 :     }
; 1422 : }

	pop	rdi
	ret	0
??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z ENDP ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>, COMDAT

; 1270 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1271 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1272 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1273 :         return _It + 0;
; 1274 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1275 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rcx, QWORD PTR _It$[rsp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped

; 1276 :     } else {
; 1277 :         return static_cast<_Iter&&>(_It);
; 1278 :     }
; 1279 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 1254 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1255 :     // check that [_First, _Last) forms an iterator range
; 1256 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1257 :         _Verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range

; 1258 :     }
; 1259 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 256  :     }
; 257  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec3<float,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z PROC ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >, COMDAT

; 939  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 940  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 941  :     using _Ty = typename _Alloc::value_type;
; 942  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 943  :         for (; _First != _Last; ++_First) {
; 944  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 945  :         }
; 946  :     }
; 947  : }

	pop	rdi
	ret	0
??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@H@std@@QEAA@XZ		; std::allocator<int>::allocator<int>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S11$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Construct_n<>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S11$[rsp]
	call	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
	lea	rax, QWORD PTR $S11$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);
; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S11$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n<>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S11$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n<>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n<>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 32	; 00000020H
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 5
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<double,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S10$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S10$[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	lea	rax, QWORD PTR $S10$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec4<float,0> > >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);
; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S10$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S10$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec4<float,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec3<double,0> >::allocator<glm::tvec3<double,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<double,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 24
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<double,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S9$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S9$[rsp]
	call	??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<float,0> >
	lea	rax, QWORD PTR $S9$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec3<float,0> > >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);
; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S9$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S9$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1><std::allocator<glm::tvec3<float,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec3<float,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1><std::allocator<glm::tvec3<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<float,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rsp], rax

; 1058 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1059 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	mov	QWORD PTR [rax], rcx

; 1060 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx

; 1061 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Oldsize$ = 64
_Newlast$1 = 72
_Oldcapacity$2 = 80
_Oldlast$3 = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize<std::_Value_init_tag>, COMDAT

; 1397 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 1398 :         // trim or append elements, provide strong guarantee
; 1399 :         auto& _Al           = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1400 :         auto& _My_data      = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1401 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1402 :         pointer& _Mylast    = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1403 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rsp], rax

; 1404 :         if (_Newsize < _Oldsize) { // trim

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN2@Resize

; 1405 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newlast$1[rsp], rax

; 1406 :             _Orphan_range(_Newlast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newlast$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range

; 1407 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1408 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1409 :             _Mylast = _Newlast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newlast$1[rsp]
	mov	QWORD PTR [rax], rcx

; 1410 :             return;

	jmp	$LN1@Resize
$LN2@Resize:

; 1411 :         }
; 1412 : 
; 1413 :         if (_Newsize > _Oldsize) { // append

	mov	rax, QWORD PTR _Oldsize$[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	$LN3@Resize

; 1414 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldcapacity$2[rsp], rax

; 1415 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	rax, QWORD PTR _Oldcapacity$2[rsp]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jbe	SHORT $LN4@Resize

; 1416 :                 _Resize_reallocate(_Newsize, _Val);

	mov	r8, QWORD PTR _Val$[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize_reallocate<std::_Value_init_tag>

; 1417 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1418 :             }
; 1419 : 
; 1420 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1421 :             const pointer _Oldlast = _Mylast;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Oldlast$3[rsp], rax

; 1422 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1423 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1424 :             } else {
; 1425 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1426 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rax, QWORD PTR _Oldsize$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR _Oldlast$3[rsp]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<double,0> > >
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1427 :             }
; 1428 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1429 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	r8, QWORD PTR _Oldlast$3[rsp]
	mov	rdx, QWORD PTR _Oldlast$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1430 :         }
; 1431 : 
; 1432 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1433 :     }

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S8$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>, COMDAT

; 1902 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]

; 1903 :         // Dispatches between the three sized constructions.
; 1904 :         // 1-arg -> value-construction, e.g. vector(5)
; 1905 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 1906 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 1907 :         auto& _Al       = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1908 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	lea	rcx, QWORD PTR $S8$[rsp]
	call	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
	lea	rax, QWORD PTR $S8$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 1909 :         auto& _My_data  = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1910 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 1911 :         if (_Count != 0) {

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN2@Construct_

; 1912 :             _Buy_nonzero(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero

; 1913 :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _Guard$6[rsp], rax

; 1914 :             if constexpr (sizeof...(_Val) == 0) {
; 1915 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@_KAEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<glm::tvec2<float,0> > >
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 1916 :             } else if constexpr (sizeof...(_Val) == 1) {
; 1917 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 1918 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 1919 :             } else if constexpr (sizeof...(_Val) == 2) {
; 1920 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);
; 1921 :             } else {
; 1922 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 1923 :             }
; 1924 :             _ASAN_VECTOR_CREATE;
; 1925 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$6[rsp], 0

; 1926 :         }

	lea	rcx, QWORD PTR _Guard$6[rsp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
$LN2@Construct_:

; 1927 : 
; 1928 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 1929 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S8$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_Alproxy$ = 40
$S8$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >::~_Tidy_guard<std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>, COMDAT

; 1375 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@0@AEBV10@@Z ; std::forward<std::allocator<glm::tvec2<float,0> > const &>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 984  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 985  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 986  :     using _Ty = typename _Alloc::value_type;
; 987  :     _Ptr->~_Ty();
; 988  :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 989  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 605  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 606  :     // assign _New_val to _Val, return previous _Val
; 607  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rsp], rax

; 608  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR _New_val$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 609  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rsp]

; 610  : }

	add	rsp, 16
	pop	rdi
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 135  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 136  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 137  : 
; 138  : 	Error += test_std_copy();

	call	?test_std_copy@@YAHXZ			; test_std_copy
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 139  : 	Error += test_vec2_cast();

	call	?test_vec2_cast@@YAHXZ			; test_vec2_cast
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 140  : 	Error += test_vec3_cast();

	call	?test_vec3_cast@@YAHXZ			; test_vec3_cast
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 141  : 	Error += test_vec4_cast();

	call	?test_vec4_cast@@YAHXZ			; test_vec4_cast
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 142  : 
; 143  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 144  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z PROC ; glm::tvec2<float,0>::operator=<double>, COMDAT

; 129  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 130  : 		this->x = static_cast<T>(v.x);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 131  : 		this->y = static_cast<T>(v.y);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 132  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 133  : 	}

	pop	rdi
	ret	0
??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z ENDP ; glm::tvec2<float,0>::operator=<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<double,0>::tvec2<double,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<double,0>::tvec2<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z PROC ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >, COMDAT

; 4075 : _CONSTEXPR20 _OutIt copy(_InIt _First, _InIt _Last, _OutIt _Dest) { // copy [_First, _Last) to [_Dest, ...)

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	DWORD PTR $T6[rsp], 0

; 4076 :     _Adl_verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > >

; 4077 :     const auto _UFirst = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 4078 :     const auto _ULast  = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > > &>
	mov	QWORD PTR _ULast$[rsp], rax

; 4079 :     const auto _UDest  = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	rdx, QWORD PTR _ULast$[rsp]
	lea	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec2@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,glm::tvec2<double,0> *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > &,__int64>
	mov	QWORD PTR _UDest$[rsp], rax

; 4080 :     _Seek_wrapped(_Dest, _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	r8, QWORD PTR _UDest$[rsp]
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_unchecked@PEAU?$tvec2@N$0A@@glm@@PEAU?$tvec2@M$0A@@2@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU?$tvec2@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec2<double,0> *,glm::tvec2<float,0> *>
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec2@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec2@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >,glm::tvec2<float,0> *>

; 4081 :     return _Dest;

	mov	rdx, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	eax, DWORD PTR $T6[rsp]
	or	eax, 1
	mov	DWORD PTR $T6[rsp], eax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 4082 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ENDP ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec2@M$0A@@glm@@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<float,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Seek_to, COMDAT

; 204  :     _CONSTEXPR20 void _Seek_to(const value_type* _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 205  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

	mov	rcx, QWORD PTR _It$[rsp]
	call	??$_Refancy@PEAU?$tvec2@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec2@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec2<float,0> *,0>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 206  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec2@M$0A@@glm@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
_Off$ = 88
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Verify_offset, COMDAT

; 101  :     _CONSTEXPR20 void _Verify_offset(const difference_type _Off) const noexcept {

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@Verify_off:

; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN22@Verify_off
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@Verify_off
$LN22@Verify_off:
	jmp	SHORT $LN21@Verify_off
$LN7@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 106				; 0000006aH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN30@Verify_off
	int	3
	xor	eax, eax
$LN30@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 106				; 0000006aH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_off
$LN21@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_off

; 107  :         if (_Off < 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jge	$LN23@Verify_off
$LN10@Verify_off:

; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	sar	rax, 3
	cmp	QWORD PTR _Off$[rsp], rax
	jl	SHORT $LN13@Verify_off
	jmp	SHORT $LN25@Verify_off
$LN13@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 108				; 0000006cH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN31@Verify_off
	int	3
	xor	eax, eax
$LN31@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 108				; 0000006cH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_off
$LN25@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_off
$LN23@Verify_off:

; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jle	$LN26@Verify_off
$LN16@Verify_off:

; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 3
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN19@Verify_off
	jmp	SHORT $LN28@Verify_off
$LN19@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 112				; 00000070H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN32@Verify_off
	int	3
	xor	eax, eax
$LN32@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 112				; 00000070H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Verify_off
$LN28@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN16@Verify_off
$LN26@Verify_off:

; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@M$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec2@N$0A@@glm@@@std@@YAPEAU?$tvec2@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec2<double,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec2@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 192  :         const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) noexcept {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
$LN4@Verify_ran:

; 193  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	rcx, QWORD PTR tv69[rsp]
	cmp	rcx, rax
	jne	SHORT $LN7@Verify_ran
	jmp	SHORT $LN15@Verify_ran
$LN7@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Verify_ran
	int	3
	xor	eax, eax
$LN19@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 193				; 000000c1H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN15@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_ran
$LN10@Verify_ran:

; 194  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	ja	SHORT $LN13@Verify_ran
	jmp	SHORT $LN17@Verify_ran
$LN13@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 194				; 000000c2H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Verify_ran
	int	3
	xor	eax, eax
$LN20@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 194				; 000000c2H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_ran
$LN17@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_ran

; 195  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec2@N$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<float,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@M$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$?0U?$tvec2@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<float,0> >
	lea	rax, QWORD PTR $S1$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >, COMDAT

; 668  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec2@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > >,1><std::allocator<glm::tvec2<float,0> > const &>

; 669  :         _Construct_n(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@$$V@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::_Construct_n<>

; 670  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<float,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAPEAU?$tvec2@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<float,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAAXQEAU?$tvec2@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec2@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec2@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec2@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec2<double,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec2<double,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec2@N$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::size, COMDAT

; 1713 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1714 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1715 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4

; 1716 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::end, COMDAT

; 1650 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1651 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1652 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1653 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec2@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
	lea	rax, QWORD PTR $S2$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec2<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec2@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec2@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec2@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec2<double,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec2@N$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec2<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<double,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAPEAU?$tvec2@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<double,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec2<double,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAAXQEAU?$tvec2@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec2<double,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec2@N$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec2<double,0> >::allocator<glm::tvec2<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z PROC ; glm::tvec3<float,0>::operator=<double>, COMDAT

; 172  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 173  : 		this->x = static_cast<T>(v.x);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 174  : 		this->y = static_cast<T>(v.y);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 175  : 		this->z = static_cast<T>(v.z);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 176  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 177  : 	}

	pop	rdi
	ret	0
??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z ENDP ; glm::tvec3<float,0>::operator=<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<double,0>::tvec3<double,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<double,0>::tvec3<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z PROC ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >, COMDAT

; 4075 : _CONSTEXPR20 _OutIt copy(_InIt _First, _InIt _Last, _OutIt _Dest) { // copy [_First, _Last) to [_Dest, ...)

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	DWORD PTR $T6[rsp], 0

; 4076 :     _Adl_verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > >

; 4077 :     const auto _UFirst = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 4078 :     const auto _ULast  = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > > &>
	mov	QWORD PTR _ULast$[rsp], rax

; 4079 :     const auto _UDest  = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	rdx, QWORD PTR _ULast$[rsp]
	lea	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec3@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,glm::tvec3<double,0> *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > &,__int64>
	mov	QWORD PTR _UDest$[rsp], rax

; 4080 :     _Seek_wrapped(_Dest, _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	r8, QWORD PTR _UDest$[rsp]
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_unchecked@PEAU?$tvec3@N$0A@@glm@@PEAU?$tvec3@M$0A@@2@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU?$tvec3@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec3<double,0> *,glm::tvec3<float,0> *>
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec3@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec3@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >,glm::tvec3<float,0> *>

; 4081 :     return _Dest;

	mov	rdx, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	eax, DWORD PTR $T6[rsp]
	or	eax, 1
	mov	DWORD PTR $T6[rsp], eax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 4082 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ENDP ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec3@M$0A@@glm@@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<float,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Seek_to, COMDAT

; 204  :     _CONSTEXPR20 void _Seek_to(const value_type* _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 205  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

	mov	rcx, QWORD PTR _It$[rsp]
	call	??$_Refancy@PEAU?$tvec3@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec3@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec3<float,0> *,0>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 206  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec3@M$0A@@glm@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
_Off$ = 88
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Verify_offset, COMDAT

; 101  :     _CONSTEXPR20 void _Verify_offset(const difference_type _Off) const noexcept {

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@Verify_off:

; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN22@Verify_off
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@Verify_off
$LN22@Verify_off:
	jmp	SHORT $LN21@Verify_off
$LN7@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 106				; 0000006aH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN30@Verify_off
	int	3
	xor	eax, eax
$LN30@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 106				; 0000006aH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_off
$LN21@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_off

; 107  :         if (_Off < 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jge	$LN23@Verify_off
$LN10@Verify_off:

; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	cdq
	mov	ecx, 12
	idiv	rcx
	cmp	QWORD PTR _Off$[rsp], rax
	jl	SHORT $LN13@Verify_off
	jmp	SHORT $LN25@Verify_off
$LN13@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 108				; 0000006cH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN31@Verify_off
	int	3
	xor	eax, eax
$LN31@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 108				; 0000006cH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_off
$LN25@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_off
$LN23@Verify_off:

; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jle	$LN26@Verify_off
$LN16@Verify_off:

; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	cdq
	mov	ecx, 12
	idiv	rcx
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN19@Verify_off
	jmp	SHORT $LN28@Verify_off
$LN19@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 112				; 00000070H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN32@Verify_off
	int	3
	xor	eax, eax
$LN32@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 112				; 00000070H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Verify_off
$LN28@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN16@Verify_off
$LN26@Verify_off:

; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@M$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec3@N$0A@@glm@@@std@@YAPEAU?$tvec3@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec3<double,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec3@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 192  :         const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) noexcept {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
$LN4@Verify_ran:

; 193  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	rcx, QWORD PTR tv69[rsp]
	cmp	rcx, rax
	jne	SHORT $LN7@Verify_ran
	jmp	SHORT $LN15@Verify_ran
$LN7@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Verify_ran
	int	3
	xor	eax, eax
$LN19@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 193				; 000000c1H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN15@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_ran
$LN10@Verify_ran:

; 194  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	ja	SHORT $LN13@Verify_ran
	jmp	SHORT $LN17@Verify_ran
$LN13@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 194				; 000000c2H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Verify_ran
	int	3
	xor	eax, eax
$LN20@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 194				; 000000c2H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_ran
$LN17@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_ran

; 195  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec3@N$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<float,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 12
	idiv	rcx
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<float,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 12
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@M$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S3$[rsp]
	call	??$?0U?$tvec3@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<float,0> >
	lea	rax, QWORD PTR $S3$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >, COMDAT

; 668  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec3@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > >,1><std::allocator<glm::tvec3<float,0> > const &>

; 669  :         _Construct_n(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@$$V@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::_Construct_n<>

; 670  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1537228672809129301		; 1555555555555555H

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec3<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec3<float,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0M@@std@@YA_K_K@Z	; std::_Get_size_of_n<12>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAPEAU?$tvec3@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec3<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec3<float,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 12
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAAXQEAU?$tvec3@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec3<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec3<float,0> >::allocator<glm::tvec3<float,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec3<float,0> >::allocator<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec3@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec3@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec3@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec3<double,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec3<double,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 24
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 24
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec3@N$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::size, COMDAT

; 1713 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1714 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1715 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	cdq
	mov	ecx, 24
	idiv	rcx

; 1716 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::end, COMDAT

; 1650 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1651 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1652 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1653 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec3@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S4$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S4$[rsp]
	call	??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<double,0> >
	lea	rax, QWORD PTR $S4$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec3<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec3@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec3@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec3@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec3<double,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec3@N$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec3<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec3<double,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z	; std::_Get_size_of_n<24>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAPEAU?$tvec3@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec3<double,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec3<double,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 24
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAAXQEAU?$tvec3@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec3<double,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec3<double,0> >::allocator<glm::tvec3<double,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec3@N$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec3<double,0> >::allocator<glm::tvec3<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z PROC ; glm::tvec4<float,0>::operator=<double>, COMDAT

; 358  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 359  : 		this->x = static_cast<T>(v.x);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 360  : 		this->y = static_cast<T>(v.y);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 361  : 		this->z = static_cast<T>(v.z);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 362  : 		this->w = static_cast<T>(v.w);

	mov	rax, QWORD PTR v$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 363  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 364  : 	}

	pop	rdi
	ret	0
??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z ENDP ; glm::tvec4<float,0>::operator=<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@N$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@N$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<double,0>::tvec4<double,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+24], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@N$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<double,0>::tvec4<double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z PROC ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >, COMDAT

; 4075 : _CONSTEXPR20 _OutIt copy(_InIt _First, _InIt _Last, _OutIt _Dest) { // copy [_First, _Last) to [_Dest, ...)

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	DWORD PTR $T6[rsp], 0

; 4076 :     _Adl_verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > >

; 4077 :     const auto _UFirst = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 4078 :     const auto _ULast  = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > > &>
	mov	QWORD PTR _ULast$[rsp], rax

; 4079 :     const auto _UDest  = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	rdx, QWORD PTR _ULast$[rsp]
	lea	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@N$0A@@glm@@@std@@YA?A_PAEBQEAU?$tvec4@N$0A@@glm@@0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,glm::tvec4<double,0> *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > &,__int64>
	mov	QWORD PTR _UDest$[rsp], rax

; 4080 :     _Seek_wrapped(_Dest, _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	r8, QWORD PTR _UDest$[rsp]
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_unchecked@PEAU?$tvec4@N$0A@@glm@@PEAU?$tvec4@M$0A@@2@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU?$tvec4@N$0A@@2@0PEAU12@@Z ; std::_Copy_unchecked<glm::tvec4<double,0> *,glm::tvec4<float,0> *>
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@PEAU?$tvec4@M$0A@@glm@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@$$QEAPEAU?$tvec4@M$0A@@glm@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >,glm::tvec4<float,0> *>

; 4081 :     return _Dest;

	mov	rdx, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	eax, DWORD PTR $T6[rsp]
	or	eax, 1
	mov	DWORD PTR $T6[rsp], eax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 4082 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ENDP ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec4@M$0A@@glm@@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<float,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Seek_to, COMDAT

; 204  :     _CONSTEXPR20 void _Seek_to(const value_type* _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 205  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

	mov	rcx, QWORD PTR _It$[rsp]
	call	??$_Refancy@PEAU?$tvec4@M$0A@@glm@@$0A@@std@@YAPEAU?$tvec4@M$0A@@glm@@PEAU12@@Z ; std::_Refancy<glm::tvec4<float,0> *,0>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 206  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAAXPEBU?$tvec4@M$0A@@glm@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
_Off$ = 88
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Verify_offset, COMDAT

; 101  :     _CONSTEXPR20 void _Verify_offset(const difference_type _Off) const noexcept {

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@Verify_off:

; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN22@Verify_off
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@Verify_off
$LN22@Verify_off:
	jmp	SHORT $LN21@Verify_off
$LN7@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 106				; 0000006aH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN30@Verify_off
	int	3
	xor	eax, eax
$LN30@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 106				; 0000006aH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_off
$LN21@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_off

; 107  :         if (_Off < 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jge	$LN23@Verify_off
$LN10@Verify_off:

; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Off$[rsp], rax
	jl	SHORT $LN13@Verify_off
	jmp	SHORT $LN25@Verify_off
$LN13@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 108				; 0000006cH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN31@Verify_off
	int	3
	xor	eax, eax
$LN31@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 108				; 0000006cH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_off
$LN25@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_off
$LN23@Verify_off:

; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jle	$LN26@Verify_off
$LN16@Verify_off:

; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN19@Verify_off
	jmp	SHORT $LN28@Verify_off
$LN19@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 112				; 00000070H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN32@Verify_off
	int	3
	xor	eax, eax
$LN32@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 112				; 00000070H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Verify_off
$LN28@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN16@Verify_off
$LN26@Verify_off:

; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@M$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@U?$tvec4@N$0A@@glm@@@std@@YAPEAU?$tvec4@N$0A@@glm@@PEAU12@@Z ; std::_Unfancy<glm::tvec4<double,0> >

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAPEAU?$tvec4@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 192  :         const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) noexcept {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
$LN4@Verify_ran:

; 193  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	rcx, QWORD PTR tv69[rsp]
	cmp	rcx, rax
	jne	SHORT $LN7@Verify_ran
	jmp	SHORT $LN15@Verify_ran
$LN7@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Verify_ran
	int	3
	xor	eax, eax
$LN19@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 193				; 000000c1H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN15@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_ran
$LN10@Verify_ran:

; 194  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	ja	SHORT $LN13@Verify_ran
	jmp	SHORT $LN17@Verify_ran
$LN13@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 194				; 000000c2H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Verify_ran
	int	3
	xor	eax, eax
$LN20@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 194				; 000000c2H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_ran
$LN17@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_ran

; 195  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEBU?$tvec4@N$0A@@glm@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@M$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@M$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<float,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<float,0> >::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 16
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@M$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@M$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S5$[rsp]
	call	??$?0U?$tvec4@M$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<float,0> >
	lea	rax, QWORD PTR $S5$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z PROC ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >, COMDAT

; 668  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@U?$tvec4@M$0A@@glm@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<float,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > >,1><std::allocator<glm::tvec4<float,0> > const &>

; 669  :         _Construct_n(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@$$V@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@AEAAX_K@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::_Construct_n<>

; 670  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ENDP ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<float,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAPEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<float,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAAXQEAU?$tvec4@M$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<float,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA PROC ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z@4HA ENDP ; `std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAXPEAU?$tvec4@N$0A@@glm@@0@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@CAXXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@YAXPEAU?$tvec4@N$0A@@glm@@QEAU12@AEAV?$allocator@U?$tvec4@N$0A@@glm@@@0@@Z ; std::_Destroy_range<std::allocator<glm::tvec4<double,0> > >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 5
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ; std::allocator<glm::tvec4<double,0> >::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, QWORD PTR _Newsize$[rsp], 32	; 00000020H
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	imul	rax, QWORD PTR _Newcapacity$[rsp], 32	; 00000020H
	mov	rcx, QWORD PTR _Newvec$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXQEAU?$tvec4@N$0A@@glm@@_K1@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 5

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEBAAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::size, COMDAT

; 1713 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1714 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1715 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 5

; 1716 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::end, COMDAT

; 1650 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1651 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1652 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1653 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@PEAU?$tvec4@N$0A@@glm@@PEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S6$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAXXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S6$[rsp]
	call	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
	lea	rax, QWORD PTR $S6$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ PROC ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1>::_Compressed_pair<std::allocator<glm::tvec4<double,0> >,std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@AEAAAEAV?$allocator@U?$tvec4@N$0A@@glm@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0U?$tvec4@N$0A@@glm@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$tvec4@N$0A@@glm@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><glm::tvec4<double,0> >
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ENDP ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@SA_KAEBV?$allocator@U?$tvec4@N$0A@@glm@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<glm::tvec4<double,0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<double,0> >::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z	; std::_Get_size_of_n<32>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAPEAU?$tvec4@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<double,0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z PROC ; std::allocator<glm::tvec4<double,0> >::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 32		; 00000020H
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAAXQEAU?$tvec4@N$0A@@glm@@_K@Z ENDP ; std::allocator<glm::tvec4<double,0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ PROC	; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@U?$tvec4@N$0A@@glm@@@std@@QEAA@XZ ENDP	; std::allocator<glm::tvec4<double,0> >::allocator<glm::tvec4<double,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z PROC ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 4075 : _CONSTEXPR20 _OutIt copy(_InIt _First, _InIt _Last, _OutIt _Dest) { // copy [_First, _Last) to [_Dest, ...)

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	DWORD PTR $T6[rsp], 0

; 4076 :     _Adl_verify_range(_First, _Last);

	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 4077 :     const auto _UFirst = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
	mov	QWORD PTR _UFirst$[rsp], rax

; 4078 :     const auto _ULast  = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
	mov	QWORD PTR _ULast$[rsp], rax

; 4079 :     const auto _UDest  = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	rdx, QWORD PTR _ULast$[rsp]
	lea	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Idl_distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YA?A_PAEBQEAH0@Z ; std::_Idl_distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Get_unwrapped_n@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,__int64>
	mov	QWORD PTR _UDest$[rsp], rax

; 4080 :     _Seek_wrapped(_Dest, _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	r8, QWORD PTR _UDest$[rsp]
	mov	rdx, QWORD PTR _ULast$[rsp]
	mov	rcx, QWORD PTR _UFirst$[rsp]
	call	??$_Copy_unchecked@PEAHPEAH@std@@YAPEAHPEAH00@Z ; std::_Copy_unchecked<int *,int *>
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@$$QEAPEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>

; 4081 :     return _Dest;

	mov	rdx, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	eax, DWORD PTR $T6[rsp]
	or	eax, 1
	mov	DWORD PTR $T6[rsp], eax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 4082 : }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z ENDP ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_UDest$ = 88
$T5 = 96
$T6 = 104
__$ReturnUdt$ = 128
_First$ = 136
_Last$ = 144
_Dest$ = 152
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA PROC ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z@4HA ENDP ; `std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
__param0$ = 56
__param1$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, QWORD PTR __param1$[rsp]
	mov	rdx, QWORD PTR __param0$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped, COMDAT

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 329  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	??$_Unfancy@H@std@@YAPEAHPEAH@Z		; std::_Unfancy<int>

; 330  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*, COMDAT

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*

; 263  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to, COMDAT

; 204  :     _CONSTEXPR20 void _Seek_to(const value_type* _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 205  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

	mov	rcx, QWORD PTR _It$[rsp]
	call	??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z	; std::_Refancy<int *,0>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 206  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 192  :         const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) noexcept {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
$LN4@Verify_ran:

; 193  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

	mov	rcx, QWORD PTR _First$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	rcx, QWORD PTR tv69[rsp]
	cmp	rcx, rax
	jne	SHORT $LN7@Verify_ran
	jmp	SHORT $LN15@Verify_ran
$LN7@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 193				; 000000c1H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Verify_ran
	int	3
	xor	eax, eax
$LN19@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 193				; 000000c1H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN15@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_ran
$LN10@Verify_ran:

; 194  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

	mov	rax, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	ja	SHORT $LN13@Verify_ran
	jmp	SHORT $LN17@Verify_ran
$LN13@Verify_ran:
	lea	rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 194				; 000000c2H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Verify_ran
	int	3
	xor	eax, eax
$LN20@Verify_ran:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 194				; 000000c2H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_ran
$LN17@Verify_ran:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_ran

; 195  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
_Off$ = 88
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Verify_offset, COMDAT

; 101  :     _CONSTEXPR20 void _Verify_offset(const difference_type _Off) const noexcept {

$LN33:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@Verify_off:

; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN22@Verify_off
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@Verify_off
$LN22@Verify_off:
	jmp	SHORT $LN21@Verify_off
$LN7@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 106				; 0000006aH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN30@Verify_off
	int	3
	xor	eax, eax
$LN30@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 106				; 0000006aH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Verify_off
$LN21@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Verify_off

; 107  :         if (_Off < 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jge	$LN23@Verify_off
$LN10@Verify_off:

; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+8]
	sub	rax, rcx
	sar	rax, 2
	cmp	QWORD PTR _Off$[rsp], rax
	jl	SHORT $LN13@Verify_off
	jmp	SHORT $LN25@Verify_off
$LN13@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 108				; 0000006cH
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN31@Verify_off
	int	3
	xor	eax, eax
$LN31@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 108				; 0000006cH
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Verify_off
$LN25@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Verify_off
$LN23@Verify_off:

; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {

	cmp	QWORD PTR _Off$[rsp], 0
	jle	$LN26@Verify_off
$LN16@Verify_off:

; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 2
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN19@Verify_off
	jmp	SHORT $LN28@Verify_off
$LN19@Verify_off:
	lea	rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 112				; 00000070H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN32@Verify_off
	int	3
	xor	eax, eax
$LN32@Verify_off:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 112				; 00000070H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Verify_off
$LN28@Verify_off:
	xor	eax, eax
	test	eax, eax
	jne	$LN16@Verify_off
$LN26@Verify_off:

; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*, COMDAT

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN15@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 48					; 00000030H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
	xor	eax, eax
$LN19@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 48					; 00000030H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN15@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+8], rcx
	ja	SHORT $LN13@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rax+16], rcx
	jae	SHORT $LN13@operator
	jmp	SHORT $LN17@operator
$LN13@operator:
	lea	rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 50					; 00000032H
	lea	rdx, OFFSET FLAT:??_C@_0GB@GDCALCPO@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
	xor	eax, eax
$LN20@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 50					; 00000032H
	lea	r8, OFFSET FLAT:??_C@_1MC@BJDJHFOD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@operator
$LN17@operator:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 54   :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 42   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 2031 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2032 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 2033 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 2027 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2028 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 2029 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT

; 2012 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2013 :         // orphan iterators within specified (inclusive) range
; 2014 : #if _HAS_CXX20
; 2015 :         if (_STD is_constant_evaluated()) {
; 2016 :             _Orphan_range_unlocked(_First, _Last);
; 2017 :         } else
; 2018 : #endif // _HAS_CXX20
; 2019 :         {
; 2020 :             _Orphan_range_locked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_locked

; 2021 :         }
; 2022 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range_locked, COMDAT

; 2007 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 2008 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 2009 :         _Orphan_range_unlocked(_First, _Last);

	mov	r8, QWORD PTR _Last$[rsp]
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
	npad	1

; 2010 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
_Temp$3 = 24
this$ = 48
_First$ = 56
_Last$ = 64
?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked, COMDAT

; 1992 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1993 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1994 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1995 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rsp], rax

; 1996 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rsp]
	cmp	QWORD PTR _Pnextptr$1[rsp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rsp]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1997 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rsp], rax

; 1998 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$2[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1999 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2000 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rsp], rax

; 2001 :                 _Temp->_Myproxy  = nullptr;

	mov	rax, QWORD PTR _Temp$3[rsp]
	mov	QWORD PTR [rax], 0

; 2002 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR _Temp$3[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2003 :             }
; 2004 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2005 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_range_unlocked@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 1983 :     [[noreturn]] static void _Xlength() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 1984 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1985 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT

; 1881 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1882 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1883 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1884 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1885 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1886 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1887 : 
; 1888 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1889 : 
; 1890 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy

; 1891 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1892 :             _ASAN_VECTOR_REMOVE;
; 1893 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1894 : 
; 1895 :             _Myfirst = nullptr;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	QWORD PTR [rax], 0

; 1896 :             _Mylast  = nullptr;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rax], 0

; 1897 :             _Myend   = nullptr;

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1898 :         }
; 1899 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z PROC ; std::vector<int,std::allocator<int> >::_Change_array, COMDAT

; 1859 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1860 :         // orphan all iterators, discard old array, acquire new array
; 1861 :         auto& _Al         = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 1862 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1863 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1864 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1865 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1866 : 
; 1867 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1868 : 
; 1869 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1870 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	r8, QWORD PTR _Al$[rsp]
	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1871 :             _ASAN_VECTOR_REMOVE;
; 1872 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR _Myend$[rsp]
	mov	rcx, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate
$LN2@Change_arr:

; 1873 :         }
; 1874 : 
; 1875 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1876 :         _Mylast  = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Mylast$[rsp]
	mov	QWORD PTR [rcx], rax

; 1877 :         _Myend   = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1878 :         _ASAN_VECTOR_CREATE;
; 1879 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ENDP ; std::vector<int,std::allocator<int> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_nonzero, COMDAT

; 1841 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1842 :         // allocate array with _Newcapacity elements
; 1843 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1844 :         auto& _My_data    = _Mypair._Myval2;
; 1845 :         pointer& _Myfirst = _My_data._Myfirst;
; 1846 :         pointer& _Mylast  = _My_data._Mylast;
; 1847 :         pointer& _Myend   = _My_data._Myend;
; 1848 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1849 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1850 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1851 : 
; 1852 :         if (_Newcapacity > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
	cmp	QWORD PTR _Newcapacity$[rsp], rax
	jbe	SHORT $LN2@Buy_nonzer

; 1853 :             _Xlength();

	call	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Buy_nonzer:

; 1854 :         }
; 1855 : 
; 1856 :         _Buy_raw(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
$LN3@Buy_nonzer:

; 1857 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_raw, COMDAT

; 1825 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 1826 :         // allocate array with _Newcapacity elements
; 1827 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1828 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rsp], rax

; 1829 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rsp], rax

; 1830 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rsp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rsp], rax

; 1831 : 
; 1832 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1833 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1834 : 
; 1835 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rdx, QWORD PTR _Newcapacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
	mov	QWORD PTR _Newvec$[rsp], rax

; 1836 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1837 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rsp]
	mov	rcx, QWORD PTR _Newvec$[rsp]
	mov	QWORD PTR [rax], rcx

; 1838 :         _Myend             = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rsp]
	mov	rcx, QWORD PTR _Newcapacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR _Myend$[rsp]
	mov	QWORD PTR [rcx], rax

; 1839 :     }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Max$ = 40
_Geometric$ = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z PROC ; std::vector<int,std::allocator<int> >::_Calculate_growth, COMDAT

; 1807 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1808 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1809 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
	mov	QWORD PTR _Oldcapacity$[rsp], rax

; 1810 :         const auto _Max              = max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
	mov	QWORD PTR _Max$[rsp], rax

; 1811 : 
; 1812 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 1813 :             return _Max; // geometric growth would overflow

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1814 :         }
; 1815 : 
; 1816 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rsp], rax

; 1817 : 
; 1818 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR _Geometric$[rsp], rax
	jae	SHORT $LN3@Calculate_

; 1819 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1820 :         }
; 1821 : 
; 1822 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1823 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT

; 1723 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1724 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1725 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 2

; 1726 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT

; 1718 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1719 :         return (_STD min)(

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1720 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1721 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT

; 1713 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1714 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1715 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR _My_data$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 2

; 1716 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT

; 1650 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1651 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1652 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1653 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT

; 1640 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1641 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 1642 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rsp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
	mov	r8, rax
	mov	rax, QWORD PTR _My_data$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1643 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT

; 1436 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1437 :         // trim or append value-initialized elements, provide strong guarantee
; 1438 :         _Resize(_Newsize, _Value_init_tag{});

	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>

; 1439 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S7$ = 52
$T4 = 68
this$ = 96
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT

; 790  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 791  :         _Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy

; 792  : #if _ITERATOR_DEBUG_LEVEL != 0
; 793  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S7$[rsp]
	call	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
	lea	rax, QWORD PTR $S7$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 794  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rsp], 0
	mov	rax, QWORD PTR this$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 795  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 796  :     }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z PROC ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT

; 668  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>

; 669  :         _Construct_n(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Construct_n@$$V@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Construct_n<>

; 670  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ENDP ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT

; 659  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>

; 660  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 661  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 4611686018427387903		; 3fffffffffffffffH

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z PROC		; std::allocator<int>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$03@std@@YA_K_K@Z	; std::_Get_size_of_n<4>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z PROC	; std::allocator<int>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rsp]
	shl	rax, 2
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ENDP	; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@H@std@@QEAA@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@H@std@@QEAA@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
_TEXT	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?test_std_copy@@YAHXZ PROC				; test_std_copy

; 83   : {

$LN35:
	push	rdi
	sub	rsp, 1632				; 00000660H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 400				; 00000190H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 84   : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 85   : 
; 86   : 	{
; 87   : 		std::vector<int> High;

	lea	rcx, QWORD PTR High$13[rsp]
	call	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
	npad	1

; 88   : 		High.resize(64);

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR High$13[rsp]
	call	?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize

; 89   : 		std::vector<int> Medium(High.size());

	lea	rcx, QWORD PTR $T21[rsp]
	call	??0?$allocator@H@std@@QEAA@XZ		; std::allocator<int>::allocator<int>
	mov	QWORD PTR tv72[rsp], rax
	lea	rcx, QWORD PTR High$13[rsp]
	call	?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::size
	mov	rcx, QWORD PTR tv72[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Medium$14[rsp]
	call	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
	npad	1

; 90   : 		
; 91   : 		std::copy(High.begin(), High.end(), Medium.begin());

	lea	rax, QWORD PTR $T22[rsp]
	mov	QWORD PTR $T23[rsp], rax
	lea	rax, QWORD PTR $T24[rsp]
	mov	QWORD PTR $T25[rsp], rax
	lea	rax, QWORD PTR $T26[rsp]
	mov	QWORD PTR $T27[rsp], rax
	mov	rdx, QWORD PTR $T23[rsp]
	lea	rcx, QWORD PTR Medium$14[rsp]
	call	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
	mov	QWORD PTR tv377[rsp], rax
	mov	rdx, QWORD PTR $T25[rsp]
	lea	rcx, QWORD PTR High$13[rsp]
	call	?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
	mov	QWORD PTR tv379[rsp], rax
	mov	rdx, QWORD PTR $T27[rsp]
	lea	rcx, QWORD PTR High$13[rsp]
	call	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
	mov	QWORD PTR tv381[rsp], rax
	mov	r9, QWORD PTR tv377[rsp]
	mov	r8, QWORD PTR tv379[rsp]
	mov	rdx, QWORD PTR tv381[rsp]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
	lea	rcx, QWORD PTR $T28[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ

; 92   : 
; 93   : 		*Medium.begin() = *High.begin();

	lea	rdx, QWORD PTR $T30[rsp]
	lea	rcx, QWORD PTR High$13[rsp]
	call	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
	mov	QWORD PTR tv384[rsp], rax
	mov	rcx, QWORD PTR tv384[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
	mov	QWORD PTR tv154[rsp], rax
	lea	rdx, QWORD PTR $T29[rsp]
	lea	rcx, QWORD PTR Medium$14[rsp]
	call	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
	mov	QWORD PTR tv386[rsp], rax
	mov	rcx, QWORD PTR tv386[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
	mov	rcx, QWORD PTR tv154[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	lea	rcx, QWORD PTR $T29[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR $T30[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
	npad	1

; 94   : 	}

	lea	rcx, QWORD PTR Medium$14[rsp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	npad	1
	lea	rcx, QWORD PTR High$13[rsp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >

; 95   : 
; 96   : 	{
; 97   : 		std::vector<glm::dvec4> High4;

	lea	rcx, QWORD PTR High4$15[rsp]
	call	??0?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	npad	1

; 98   : 		High4.resize(64);

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR High4$15[rsp]
	call	?resize@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::resize

; 99   : 		std::vector<glm::vec4> Medium4(High4.size());

	lea	rcx, QWORD PTR $T31[rsp]
	call	??0?$allocator@U?$tvec4@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec4<float,0> >::allocator<glm::tvec4<float,0> >
	mov	QWORD PTR tv163[rsp], rax
	lea	rcx, QWORD PTR High4$15[rsp]
	call	?size@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::size
	mov	rcx, QWORD PTR tv163[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Medium4$16[rsp]
	call	??0?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec4@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	npad	1

; 100  : 		
; 101  : 		std::copy(High4.begin(), High4.end(), Medium4.begin());

	lea	rax, QWORD PTR $T32[rsp]
	mov	QWORD PTR $T33[rsp], rax
	lea	rax, QWORD PTR $T34[rsp]
	mov	QWORD PTR $T35[rsp], rax
	lea	rax, QWORD PTR $T36[rsp]
	mov	QWORD PTR $T37[rsp], rax
	mov	rdx, QWORD PTR $T33[rsp]
	lea	rcx, QWORD PTR Medium4$16[rsp]
	call	?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::begin
	mov	QWORD PTR tv390[rsp], rax
	mov	rdx, QWORD PTR $T35[rsp]
	lea	rcx, QWORD PTR High4$15[rsp]
	call	?end@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::end
	mov	QWORD PTR tv392[rsp], rax
	mov	rdx, QWORD PTR $T37[rsp]
	lea	rcx, QWORD PTR High4$15[rsp]
	call	?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::begin
	mov	QWORD PTR tv394[rsp], rax
	mov	r9, QWORD PTR tv390[rsp]
	mov	r8, QWORD PTR tv392[rsp]
	mov	rdx, QWORD PTR tv394[rsp]
	lea	rcx, QWORD PTR $T38[rsp]
	call	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > > >
	lea	rcx, QWORD PTR $T38[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ

; 102  : 
; 103  : 		*Medium4.begin() = *High4.begin();

	lea	rdx, QWORD PTR $T40[rsp]
	lea	rcx, QWORD PTR High4$15[rsp]
	call	?begin@?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::begin
	mov	QWORD PTR tv161[rsp], rax
	mov	rax, QWORD PTR tv161[rsp]
	mov	QWORD PTR tv397[rsp], rax
	mov	rcx, QWORD PTR tv397[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<double,0> > > >::operator*
	mov	QWORD PTR tv215[rsp], rax
	lea	rdx, QWORD PTR $T39[rsp]
	lea	rcx, QWORD PTR Medium4$16[rsp]
	call	?begin@?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::begin
	mov	QWORD PTR tv156[rsp], rax
	mov	rax, QWORD PTR tv156[rsp]
	mov	QWORD PTR tv399[rsp], rax
	mov	rcx, QWORD PTR tv399[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec4@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec4<float,0> > > >::operator*
	mov	rcx, QWORD PTR tv215[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z ; glm::tvec4<float,0>::operator=<double>
	npad	1
	lea	rcx, QWORD PTR $T39[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T40[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1

; 104  : 	}

	lea	rcx, QWORD PTR Medium4$16[rsp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	npad	1
	lea	rcx, QWORD PTR High4$15[rsp]
	call	??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >

; 105  : 
; 106  : 	{
; 107  : 		std::vector<glm::dvec3> High3;

	lea	rcx, QWORD PTR High3$17[rsp]
	call	??0?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
	npad	1

; 108  : 		High3.resize(64);

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR High3$17[rsp]
	call	?resize@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::resize

; 109  : 		std::vector<glm::vec3> Medium3(High3.size());

	lea	rcx, QWORD PTR $T41[rsp]
	call	??0?$allocator@U?$tvec3@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec3<float,0> >::allocator<glm::tvec3<float,0> >
	mov	QWORD PTR tv224[rsp], rax
	lea	rcx, QWORD PTR High3$17[rsp]
	call	?size@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::size
	mov	rcx, QWORD PTR tv224[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Medium3$18[rsp]
	call	??0?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec3@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	npad	1

; 110  : 
; 111  : 		std::copy(High3.begin(), High3.end(), Medium3.begin());

	lea	rax, QWORD PTR $T42[rsp]
	mov	QWORD PTR $T43[rsp], rax
	lea	rax, QWORD PTR $T44[rsp]
	mov	QWORD PTR $T45[rsp], rax
	lea	rax, QWORD PTR $T46[rsp]
	mov	QWORD PTR $T47[rsp], rax
	mov	rdx, QWORD PTR $T43[rsp]
	lea	rcx, QWORD PTR Medium3$18[rsp]
	call	?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::begin
	mov	QWORD PTR tv403[rsp], rax
	mov	rdx, QWORD PTR $T45[rsp]
	lea	rcx, QWORD PTR High3$17[rsp]
	call	?end@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::end
	mov	QWORD PTR tv405[rsp], rax
	mov	rdx, QWORD PTR $T47[rsp]
	lea	rcx, QWORD PTR High3$17[rsp]
	call	?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::begin
	mov	QWORD PTR tv407[rsp], rax
	mov	r9, QWORD PTR tv403[rsp]
	mov	r8, QWORD PTR tv405[rsp]
	mov	rdx, QWORD PTR tv407[rsp]
	lea	rcx, QWORD PTR $T48[rsp]
	call	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > > >
	lea	rcx, QWORD PTR $T48[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ

; 112  : 
; 113  : 		*Medium3.begin() = *High3.begin();

	lea	rdx, QWORD PTR $T50[rsp]
	lea	rcx, QWORD PTR High3$17[rsp]
	call	?begin@?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::begin
	mov	QWORD PTR tv222[rsp], rax
	mov	rax, QWORD PTR tv222[rsp]
	mov	QWORD PTR tv410[rsp], rax
	mov	rcx, QWORD PTR tv410[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<double,0> > > >::operator*
	mov	QWORD PTR tv308[rsp], rax
	lea	rdx, QWORD PTR $T49[rsp]
	lea	rcx, QWORD PTR Medium3$18[rsp]
	call	?begin@?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::begin
	mov	QWORD PTR tv217[rsp], rax
	mov	rax, QWORD PTR tv217[rsp]
	mov	QWORD PTR tv412[rsp], rax
	mov	rcx, QWORD PTR tv412[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec3@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec3<float,0> > > >::operator*
	mov	rcx, QWORD PTR tv308[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?4N@?$tvec3@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec3@N$0A@@1@@Z ; glm::tvec3<float,0>::operator=<double>
	npad	1
	lea	rcx, QWORD PTR $T49[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T50[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1

; 114  : 	}

	lea	rcx, QWORD PTR Medium3$18[rsp]
	call	??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	npad	1
	lea	rcx, QWORD PTR High3$17[rsp]
	call	??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >

; 115  : 
; 116  : 	{
; 117  : 		std::vector<glm::dvec2> High2;

	lea	rcx, QWORD PTR High2$19[rsp]
	call	??0?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	npad	1

; 118  : 		High2.resize(64);

	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR High2$19[rsp]
	call	?resize@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAAX_K@Z ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::resize

; 119  : 		std::vector<glm::vec2> Medium2(High2.size());

	lea	rcx, QWORD PTR $T51[rsp]
	call	??0?$allocator@U?$tvec2@M$0A@@glm@@@std@@QEAA@XZ ; std::allocator<glm::tvec2<float,0> >::allocator<glm::tvec2<float,0> >
	mov	QWORD PTR tv317[rsp], rax
	lea	rcx, QWORD PTR High2$19[rsp]
	call	?size@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEBA_KXZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::size
	mov	rcx, QWORD PTR tv317[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Medium2$20[rsp]
	call	??0?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@_KAEBV?$allocator@U?$tvec2@M$0A@@glm@@@1@@Z ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	npad	1

; 120  : 
; 121  : 		std::copy(High2.begin(), High2.end(), Medium2.begin());

	lea	rax, QWORD PTR $T52[rsp]
	mov	QWORD PTR $T53[rsp], rax
	lea	rax, QWORD PTR $T54[rsp]
	mov	QWORD PTR $T55[rsp], rax
	lea	rax, QWORD PTR $T56[rsp]
	mov	QWORD PTR $T57[rsp], rax
	mov	rdx, QWORD PTR $T53[rsp]
	lea	rcx, QWORD PTR Medium2$20[rsp]
	call	?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::begin
	mov	QWORD PTR tv416[rsp], rax
	mov	rdx, QWORD PTR $T55[rsp]
	lea	rcx, QWORD PTR High2$19[rsp]
	call	?end@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::end
	mov	QWORD PTR tv418[rsp], rax
	mov	rdx, QWORD PTR $T57[rsp]
	lea	rcx, QWORD PTR High2$19[rsp]
	call	?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::begin
	mov	QWORD PTR tv420[rsp], rax
	mov	r9, QWORD PTR tv416[rsp]
	mov	r8, QWORD PTR tv418[rsp]
	mov	rdx, QWORD PTR tv420[rsp]
	lea	rcx, QWORD PTR $T58[rsp]
	call	??$copy@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@0@0V10@@Z ; std::copy<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > > >
	lea	rcx, QWORD PTR $T58[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ

; 122  : 
; 123  : 		*Medium2.begin() = *High2.begin();

	lea	rdx, QWORD PTR $T60[rsp]
	lea	rcx, QWORD PTR High2$19[rsp]
	call	?begin@?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::begin
	mov	QWORD PTR tv315[rsp], rax
	mov	rax, QWORD PTR tv315[rsp]
	mov	QWORD PTR tv423[rsp], rax
	mov	rcx, QWORD PTR tv423[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@N$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<double,0> > > >::operator*
	mov	QWORD PTR tv369[rsp], rax
	lea	rdx, QWORD PTR $T59[rsp]
	lea	rcx, QWORD PTR Medium2$20[rsp]
	call	?begin@?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@2@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::begin
	mov	QWORD PTR tv310[rsp], rax
	mov	rax, QWORD PTR tv310[rsp]
	mov	QWORD PTR tv425[rsp], rax
	mov	rcx, QWORD PTR tv425[rsp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEBAAEAU?$tvec2@M$0A@@glm@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<glm::tvec2<float,0> > > >::operator*
	mov	rcx, QWORD PTR tv369[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$?4N@?$tvec2@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec2@N$0A@@1@@Z ; glm::tvec2<float,0>::operator=<double>
	npad	1
	lea	rcx, QWORD PTR $T59[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T60[rsp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	npad	1

; 124  : 	}

	lea	rcx, QWORD PTR Medium2$20[rsp]
	call	??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	npad	1
	lea	rcx, QWORD PTR High2$19[rsp]
	call	??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >

; 125  : 
; 126  : 	glm::dvec4 v1;

	lea	rcx, QWORD PTR v1$[rsp]
	call	??0?$tvec4@N$0A@@glm@@QEAA@XZ		; glm::tvec4<double,0>::tvec4<double,0>

; 127  : 	glm::vec4 v2;

	lea	rcx, QWORD PTR v2$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@XZ		; glm::tvec4<float,0>::tvec4<float,0>

; 128  : 
; 129  : 	v2 = v1;

	lea	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR v2$[rsp]
	call	??$?4N@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU?$tvec4@N$0A@@1@@Z ; glm::tvec4<float,0>::operator=<double>

; 130  : 
; 131  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 132  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_std_copy@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 1632				; 00000660H
	pop	rdi
	ret	0
?test_std_copy@@YAHXZ ENDP				; test_std_copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$0@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR High$13[rbp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$1@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Medium$14[rbp]
	call	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$8@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR High4$15[rbp]
	call	??1?$vector@U?$tvec4@N$0A@@glm@@V?$allocator@U?$tvec4@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >::~vector<glm::tvec4<double,0>,std::allocator<glm::tvec4<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$9@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$9
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Medium4$16[rbp]
	call	??1?$vector@U?$tvec4@M$0A@@glm@@V?$allocator@U?$tvec4@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >::~vector<glm::tvec4<float,0>,std::allocator<glm::tvec4<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$9@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$14@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$14
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T40[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$14@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$15@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$15
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T39[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec4@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$15@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$16@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$16
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR High3$17[rbp]
	call	??1?$vector@U?$tvec3@N$0A@@glm@@V?$allocator@U?$tvec3@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >::~vector<glm::tvec3<double,0>,std::allocator<glm::tvec3<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$16@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$17@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$17
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Medium3$18[rbp]
	call	??1?$vector@U?$tvec3@M$0A@@glm@@V?$allocator@U?$tvec3@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >::~vector<glm::tvec3<float,0>,std::allocator<glm::tvec3<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$17@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$22@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$22
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T50[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$22@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$23@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$23
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T49[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec3@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$23@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$24@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$24
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR High2$19[rbp]
	call	??1?$vector@U?$tvec2@N$0A@@glm@@V?$allocator@U?$tvec2@N$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >::~vector<glm::tvec2<double,0>,std::allocator<glm::tvec2<double,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$24@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$25@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$25
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR Medium2$20[rbp]
	call	??1?$vector@U?$tvec2@M$0A@@glm@@V?$allocator@U?$tvec2@M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >::~vector<glm::tvec2<float,0>,std::allocator<glm::tvec2<float,0> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$25@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$30@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$30
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T60[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@N$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$30@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 32
High$13 = 56
Medium$14 = 120
High4$15 = 184
Medium4$16 = 248
High3$17 = 312
Medium3$18 = 376
High2$19 = 440
Medium2$20 = 504
v1$ = 568
v2$ = 632
$T21 = 660
$T22 = 664
$T23 = 688
$T24 = 696
$T25 = 720
$T26 = 728
$T27 = 752
$T28 = 760
$T29 = 784
$T30 = 808
$T31 = 832
$T32 = 840
$T33 = 864
$T34 = 872
$T35 = 896
$T36 = 904
$T37 = 928
$T38 = 936
$T39 = 960
$T40 = 984
$T41 = 1008
$T42 = 1016
$T43 = 1040
$T44 = 1048
$T45 = 1072
$T46 = 1080
$T47 = 1104
$T48 = 1112
$T49 = 1136
$T50 = 1160
$T51 = 1184
$T52 = 1192
$T53 = 1216
$T54 = 1224
$T55 = 1248
$T56 = 1256
$T57 = 1280
$T58 = 1288
$T59 = 1312
$T60 = 1336
tv72 = 1360
tv377 = 1368
tv379 = 1376
tv381 = 1384
tv384 = 1392
tv154 = 1400
tv386 = 1408
tv163 = 1416
tv390 = 1424
tv392 = 1432
tv394 = 1440
tv161 = 1448
tv397 = 1456
tv215 = 1464
tv156 = 1472
tv399 = 1480
tv224 = 1488
tv403 = 1496
tv405 = 1504
tv407 = 1512
tv222 = 1520
tv410 = 1528
tv308 = 1536
tv217 = 1544
tv412 = 1552
tv317 = 1560
tv416 = 1568
tv418 = 1576
tv420 = 1584
tv315 = 1592
tv423 = 1600
tv369 = 1608
tv310 = 1616
tv425 = 1624
?dtor$31@?0??test_std_copy@@YAHXZ@4HA PROC		; `test_std_copy'::`1'::dtor$31
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T59[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$tvec2@M$0A@@glm@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$31@?0??test_std_copy@@YAHXZ@4HA ENDP		; `test_std_copy'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z PROC ; glm::all<1,glm::tvec4>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec4@_N$00@glm@@SAHXZ	; glm::tvec4<bool,1>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,1>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z ENDP ; glm::all<1,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<bool,1>::tvec4<bool,1>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<bool,1>::tvec4<bool,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z PROC			; glm::tvec4<bool,1>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$00@glm@@SAHXZ	; glm::tvec4<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$00@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec4<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z PROC			; glm::tvec4<bool,1>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$00@glm@@SAHXZ	; glm::tvec4<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec4<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$00@glm@@SAHXZ PROC			; glm::tvec4<bool,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$00@glm@@SAHXZ ENDP			; glm::tvec4<bool,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z PROC ; glm::equal<float,1,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@M$00@glm@@SAHXZ		; glm::tvec4<float,1>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@M$00@glm@@SAHXZ		; glm::tvec4<float,1>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$00@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,1>::tvec4<bool,1>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@M$00@glm@@SAHXZ		; glm::tvec4<float,1>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$00@glm@@QEBAAEBMH@Z	; glm::tvec4<float,1>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@M$00@glm@@QEBAAEBMH@Z	; glm::tvec4<float,1>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$00@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,1>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z ENDP ; glm::equal<float,1,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z PROC ; glm::all<2,glm::tvec4>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec4@_N$01@glm@@SAHXZ	; glm::tvec4<bool,2>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,2>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z ENDP ; glm::all<2,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<bool,2>::tvec4<bool,2>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<bool,2>::tvec4<bool,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z PROC			; glm::tvec4<bool,2>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$01@glm@@SAHXZ	; glm::tvec4<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$01@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec4<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z PROC			; glm::tvec4<bool,2>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$01@glm@@SAHXZ	; glm::tvec4<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec4<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$01@glm@@SAHXZ PROC			; glm::tvec4<bool,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$01@glm@@SAHXZ ENDP			; glm::tvec4<bool,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z PROC ; glm::equal<float,2,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$01@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,2>::tvec4<bool,2>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@M$01@glm@@QEBAAEBMH@Z	; glm::tvec4<float,2>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$01@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,2>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z ENDP ; glm::equal<float,2,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec4>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 183  : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 329  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 330  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 330				; 0000014aH
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 331  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 332  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$0A@@glm@@SAHXZ PROC			; glm::tvec4<bool,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z PROC ; glm::equal<float,0,glm::tvec4>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, DWORD PTR Result$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ENDP ; glm::equal<float,0,glm::tvec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z PROC ; glm::tvec4<float,1>::tvec4<float,1><0>, COMDAT

; 177  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 176  : 		: x(v.x), y(v.y), z(v.z), w(v.w)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0

; 177  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ENDP ; glm::tvec4<float,1>::tvec4<float,1><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$00@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$00@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,1>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$00@glm@@SAHXZ		; glm::tvec4<float,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$00@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$00@glm@@SAHXZ PROC			; glm::tvec4<float,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$00@glm@@SAHXZ ENDP			; glm::tvec4<float,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z PROC ; glm::tvec4<float,2>::tvec4<float,2><0>, COMDAT

; 177  : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 176  : 		: x(v.x), y(v.y), z(v.z), w(v.w)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0

; 177  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ENDP ; glm::tvec4<float,2>::tvec4<float,2><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,2>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$01@glm@@SAHXZ		; glm::tvec4<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$01@glm@@SAHXZ PROC			; glm::tvec4<float,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$01@glm@@SAHXZ ENDP			; glm::tvec4<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
_TEXT	SEGMENT
A$ = 56
B$ = 104
C$ = 152
D$ = 200
E$ = 248
F$ = 296
G$ = 344
H$ = 392
Error$ = 420
$T11 = 424
$T12 = 440
$T13 = 456
$T14 = 460
$T15 = 464
$T16 = 468
tv85 = 472
tv95 = 476
tv137 = 480
tv147 = 484
?test_vec4_cast@@YAHXZ PROC				; test_vec4_cast

; 61   : {

$LN11:
	push	rsi
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	glm::vec4 A(1.0f, 2.0f, 3.0f, 4.0f);

	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>

; 63   : 	glm::lowp_vec4 B(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR B$[rsp]
	call	??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,2>::tvec4<float,2><0>

; 64   : 	glm::mediump_vec4 C(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR C$[rsp]
	call	??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,1>::tvec4<float,1><0>

; 65   : 	glm::highp_vec4 D(A);

	lea	rax, QWORD PTR D$[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 66   : 	
; 67   : 	glm::vec4 E = static_cast<glm::vec4>(A);

	lea	rax, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR E$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 68   : 	glm::lowp_vec4 F = static_cast<glm::lowp_vec4>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR F$[rsp]
	call	??$?0$0A@@?$tvec4@M$01@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,2>::tvec4<float,2><0>

; 69   : 	glm::mediump_vec4 G = static_cast<glm::mediump_vec4>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR G$[rsp]
	call	??$?0$0A@@?$tvec4@M$00@glm@@QEAA@AEBU?$tvec4@M$0A@@1@@Z ; glm::tvec4<float,1>::tvec4<float,1><0>

; 70   : 	glm::highp_vec4 H = static_cast<glm::highp_vec4>(A);

	lea	rax, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR H$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb

; 71   : 	
; 72   : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 73   : 	
; 74   : 	Error += glm::all(glm::equal(A, E)) ? 0 : 1;

	lea	r8, QWORD PTR E$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR $T13[rsp]
	call	??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec4_
	mov	DWORD PTR tv85[rsp], 0
	jmp	SHORT $LN4@test_vec4_
$LN3@test_vec4_:
	mov	DWORD PTR tv85[rsp], 1
$LN4@test_vec4_:
	mov	eax, DWORD PTR tv85[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 75   : 	Error += glm::all(glm::equal(B, F)) ? 0 : 1;

	lea	r8, QWORD PTR F$[rsp]
	lea	rdx, QWORD PTR B$[rsp]
	lea	rcx, QWORD PTR $T14[rsp]
	call	??$equal@M$01Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$01@0@AEBU?$tvec4@M$01@0@0@Z ; glm::equal<float,2,glm::tvec4>
	mov	rcx, rax
	call	??$all@$01Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$01@0@@Z ; glm::all<2,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec4_
	mov	DWORD PTR tv95[rsp], 0
	jmp	SHORT $LN6@test_vec4_
$LN5@test_vec4_:
	mov	DWORD PTR tv95[rsp], 1
$LN6@test_vec4_:
	mov	eax, DWORD PTR tv95[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 76   : 	Error += glm::all(glm::equal(C, G)) ? 0 : 1;

	lea	r8, QWORD PTR G$[rsp]
	lea	rdx, QWORD PTR C$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$equal@M$00Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$00@0@AEBU?$tvec4@M$00@0@0@Z ; glm::equal<float,1,glm::tvec4>
	mov	rcx, rax
	call	??$all@$00Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$00@0@@Z ; glm::all<1,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_vec4_
	mov	DWORD PTR tv137[rsp], 0
	jmp	SHORT $LN8@test_vec4_
$LN7@test_vec4_:
	mov	DWORD PTR tv137[rsp], 1
$LN8@test_vec4_:
	mov	eax, DWORD PTR tv137[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 77   : 	Error += glm::all(glm::equal(D, H)) ? 0 : 1;

	lea	r8, QWORD PTR H$[rsp]
	lea	rdx, QWORD PTR D$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$equal@M$0A@Utvec4@glm@@@glm@@YA?AU?$tvec4@_N$0A@@0@AEBU?$tvec4@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec4>
	mov	rcx, rax
	call	??$all@$0A@Utvec4@glm@@@glm@@YA_NAEBU?$tvec4@_N$0A@@0@@Z ; glm::all<0,glm::tvec4>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_vec4_
	mov	DWORD PTR tv147[rsp], 0
	jmp	SHORT $LN10@test_vec4_
$LN9@test_vec4_:
	mov	DWORD PTR tv147[rsp], 1
$LN10@test_vec4_:
	mov	eax, DWORD PTR tv147[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 78   : 	
; 79   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 80   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec4_cast@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 504				; 000001f8H
	pop	rdi
	pop	rsi
	ret	0
?test_vec4_cast@@YAHXZ ENDP				; test_vec4_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z PROC ; glm::all<1,glm::tvec3>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec3@_N$00@glm@@SAHXZ	; glm::tvec3<bool,1>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,1>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z ENDP ; glm::all<1,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec3<bool,1>::tvec3<bool,1>, COMDAT

; 60   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec3<bool,1>::tvec3<bool,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z PROC			; glm::tvec3<bool,1>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$00@glm@@SAHXZ	; glm::tvec3<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$00@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec3<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z PROC			; glm::tvec3<bool,1>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$00@glm@@SAHXZ	; glm::tvec3<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec3<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_N$00@glm@@SAHXZ PROC			; glm::tvec3<bool,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_N$00@glm@@SAHXZ ENDP			; glm::tvec3<bool,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 112
x$ = 120
y$ = 128
??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z PROC ; glm::equal<float,1,glm::tvec3>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec3@M$00@glm@@SAHXZ		; glm::tvec3<float,1>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec3@M$00@glm@@SAHXZ		; glm::tvec3<float,1>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$00@glm@@QEAA@W4ctor@1@@Z	; glm::tvec3<bool,1>::tvec3<bool,1>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec3@M$00@glm@@SAHXZ		; glm::tvec3<float,1>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$00@glm@@QEBAAEBMH@Z	; glm::tvec3<float,1>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec3@M$00@glm@@QEBAAEBMH@Z	; glm::tvec3<float,1>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@_N$00@glm@@QEAAAEA_NH@Z	; glm::tvec3<bool,1>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z ENDP ; glm::equal<float,1,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z PROC ; glm::all<2,glm::tvec3>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec3@_N$01@glm@@SAHXZ	; glm::tvec3<bool,2>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,2>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z ENDP ; glm::all<2,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec3<bool,2>::tvec3<bool,2>, COMDAT

; 60   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec3<bool,2>::tvec3<bool,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z PROC			; glm::tvec3<bool,2>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$01@glm@@SAHXZ	; glm::tvec3<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$01@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec3<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z PROC			; glm::tvec3<bool,2>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$01@glm@@SAHXZ	; glm::tvec3<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec3<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_N$01@glm@@SAHXZ PROC			; glm::tvec3<bool,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_N$01@glm@@SAHXZ ENDP			; glm::tvec3<bool,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 112
x$ = 120
y$ = 128
??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z PROC ; glm::equal<float,2,glm::tvec3>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$01@glm@@QEAA@W4ctor@1@@Z	; glm::tvec3<bool,2>::tvec3<bool,2>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec3@M$01@glm@@QEBAAEBMH@Z	; glm::tvec3<float,2>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@_N$01@glm@@QEAAAEA_NH@Z	; glm::tvec3<bool,2>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z ENDP ; glm::equal<float,2,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec3>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec3<bool,0>::tvec3<bool,0>, COMDAT

; 60   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec3<bool,0>::tvec3<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec3<bool,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec3<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec3<bool,0>::operator[], COMDAT

; 144  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 145  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 145				; 00000091H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 146  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 147  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec3<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_N$0A@@glm@@SAHXZ PROC			; glm::tvec3<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec3<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 112
x$ = 120
y$ = 128
??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z PROC ; glm::equal<float,0,glm::tvec3>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec3@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec3<bool,0>::tvec3<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	lea	rax, QWORD PTR Result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 3
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z ENDP ; glm::equal<float,0,glm::tvec3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z PROC ; glm::tvec3<float,1>::tvec3<float,1><0>, COMDAT

; 54   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 53   : 		: x(v.x), y(v.y), z(v.z)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0

; 54   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::tvec3<float,1>::tvec3<float,1><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$00@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$00@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,1>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$00@glm@@SAHXZ		; glm::tvec3<float,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$00@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$00@glm@@SAHXZ PROC			; glm::tvec3<float,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$00@glm@@SAHXZ ENDP			; glm::tvec3<float,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z PROC ; glm::tvec3<float,2>::tvec3<float,2><0>, COMDAT

; 54   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 53   : 		: x(v.x), y(v.y), z(v.z)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0

; 54   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ENDP ; glm::tvec3<float,2>::tvec3<float,2><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,2>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$01@glm@@SAHXZ		; glm::tvec3<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$01@glm@@SAHXZ PROC			; glm::tvec3<float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$01@glm@@SAHXZ ENDP			; glm::tvec3<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 70   : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec3@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 40   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 38   : 				: x(0), y(0), z(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 40   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$0A@@glm@@SAHXZ PROC			; glm::tvec3<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$0A@@glm@@SAHXZ ENDP			; glm::tvec3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
_TEXT	SEGMENT
A$ = 40
B$ = 88
C$ = 136
D$ = 184
E$ = 232
F$ = 280
G$ = 328
H$ = 376
Error$ = 404
$T11 = 408
$T12 = 420
$T13 = 432
$T14 = 435
$T15 = 438
$T16 = 441
tv84 = 444
tv94 = 448
tv136 = 452
tv146 = 456
?test_vec3_cast@@YAHXZ PROC				; test_vec3_cast

; 39   : {

$LN11:
	push	rsi
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 40   : 	glm::vec3 A(1.0f, 2.0f, 3.0f);

	movss	xmm3, DWORD PTR __real@40400000
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>

; 41   : 	glm::lowp_vec3 B(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR B$[rsp]
	call	??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,2>::tvec3<float,2><0>

; 42   : 	glm::mediump_vec3 C(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR C$[rsp]
	call	??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,1>::tvec3<float,1><0>

; 43   : 	glm::highp_vec3 D(A);

	lea	rax, QWORD PTR D$[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb

; 44   : 	
; 45   : 	glm::vec3 E = static_cast<glm::vec3>(A);

	lea	rax, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR E$[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb

; 46   : 	glm::lowp_vec3 F = static_cast<glm::lowp_vec3>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR F$[rsp]
	call	??$?0$0A@@?$tvec3@M$01@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,2>::tvec3<float,2><0>

; 47   : 	glm::mediump_vec3 G = static_cast<glm::mediump_vec3>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR G$[rsp]
	call	??$?0$0A@@?$tvec3@M$00@glm@@QEAA@AEBU?$tvec3@M$0A@@1@@Z ; glm::tvec3<float,1>::tvec3<float,1><0>

; 48   : 	glm::highp_vec3 H = static_cast<glm::highp_vec3>(A);

	lea	rax, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR A$[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
	lea	rax, QWORD PTR H$[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb

; 49   : 	
; 50   : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 51   : 	
; 52   : 	Error += glm::all(glm::equal(A, E)) ? 0 : 1;

	lea	r8, QWORD PTR E$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR $T13[rsp]
	call	??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec3>
	mov	rcx, rax
	call	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec3_
	mov	DWORD PTR tv84[rsp], 0
	jmp	SHORT $LN4@test_vec3_
$LN3@test_vec3_:
	mov	DWORD PTR tv84[rsp], 1
$LN4@test_vec3_:
	mov	eax, DWORD PTR tv84[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 53   : 	Error += glm::all(glm::equal(B, F)) ? 0 : 1;

	lea	r8, QWORD PTR F$[rsp]
	lea	rdx, QWORD PTR B$[rsp]
	lea	rcx, QWORD PTR $T14[rsp]
	call	??$equal@M$01Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$01@0@AEBU?$tvec3@M$01@0@0@Z ; glm::equal<float,2,glm::tvec3>
	mov	rcx, rax
	call	??$all@$01Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$01@0@@Z ; glm::all<2,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec3_
	mov	DWORD PTR tv94[rsp], 0
	jmp	SHORT $LN6@test_vec3_
$LN5@test_vec3_:
	mov	DWORD PTR tv94[rsp], 1
$LN6@test_vec3_:
	mov	eax, DWORD PTR tv94[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 54   : 	Error += glm::all(glm::equal(C, G)) ? 0 : 1;

	lea	r8, QWORD PTR G$[rsp]
	lea	rdx, QWORD PTR C$[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$equal@M$00Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$00@0@AEBU?$tvec3@M$00@0@0@Z ; glm::equal<float,1,glm::tvec3>
	mov	rcx, rax
	call	??$all@$00Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$00@0@@Z ; glm::all<1,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_vec3_
	mov	DWORD PTR tv136[rsp], 0
	jmp	SHORT $LN8@test_vec3_
$LN7@test_vec3_:
	mov	DWORD PTR tv136[rsp], 1
$LN8@test_vec3_:
	mov	eax, DWORD PTR tv136[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 55   : 	Error += glm::all(glm::equal(D, H)) ? 0 : 1;

	lea	r8, QWORD PTR H$[rsp]
	lea	rdx, QWORD PTR D$[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$equal@M$0A@Utvec3@glm@@@glm@@YA?AU?$tvec3@_N$0A@@0@AEBU?$tvec3@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec3>
	mov	rcx, rax
	call	??$all@$0A@Utvec3@glm@@@glm@@YA_NAEBU?$tvec3@_N$0A@@0@@Z ; glm::all<0,glm::tvec3>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_vec3_
	mov	DWORD PTR tv146[rsp], 0
	jmp	SHORT $LN10@test_vec3_
$LN9@test_vec3_:
	mov	DWORD PTR tv146[rsp], 1
$LN10@test_vec3_:
	mov	eax, DWORD PTR tv146[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 56   : 	
; 57   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 58   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec3_cast@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 472				; 000001d8H
	pop	rdi
	pop	rsi
	ret	0
?test_vec3_cast@@YAHXZ ENDP				; test_vec3_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z PROC ; glm::all<1,glm::tvec2>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec2@_N$00@glm@@SAHXZ	; glm::tvec2<bool,1>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,1>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z ENDP ; glm::all<1,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec2<bool,1>::tvec2<bool,1>, COMDAT

; 47   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec2<bool,1>::tvec2<bool,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z PROC			; glm::tvec2<bool,1>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$00@glm@@SAHXZ	; glm::tvec2<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$00@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec2<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z PROC			; glm::tvec2<bool,1>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$00@glm@@SAHXZ	; glm::tvec2<bool,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec2<bool,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$00@glm@@SAHXZ PROC			; glm::tvec2<bool,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$00@glm@@SAHXZ ENDP			; glm::tvec2<bool,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z PROC ; glm::equal<float,1,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@M$00@glm@@SAHXZ		; glm::tvec2<float,1>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@M$00@glm@@SAHXZ		; glm::tvec2<float,1>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$00@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,1>::tvec2<bool,1>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@M$00@glm@@SAHXZ		; glm::tvec2<float,1>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@M$00@glm@@QEBAAEBMH@Z	; glm::tvec2<float,1>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@M$00@glm@@QEBAAEBMH@Z	; glm::tvec2<float,1>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$00@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,1>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z ENDP ; glm::equal<float,1,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z PROC ; glm::all<2,glm::tvec2>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec2@_N$01@glm@@SAHXZ	; glm::tvec2<bool,2>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,2>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z ENDP ; glm::all<2,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec2<bool,2>::tvec2<bool,2>, COMDAT

; 47   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec2<bool,2>::tvec2<bool,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z PROC			; glm::tvec2<bool,2>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$01@glm@@SAHXZ	; glm::tvec2<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$01@glm@@QEBAAEB_NH@Z ENDP			; glm::tvec2<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z PROC			; glm::tvec2<bool,2>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$01@glm@@SAHXZ	; glm::tvec2<bool,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z ENDP			; glm::tvec2<bool,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$01@glm@@SAHXZ PROC			; glm::tvec2<bool,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$01@glm@@SAHXZ ENDP			; glm::tvec2<bool,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z PROC ; glm::equal<float,2,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$01@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,2>::tvec2<bool,2>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@M$01@glm@@QEBAAEBMH@Z	; glm::tvec2<float,2>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$01@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,2>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z ENDP ; glm::equal<float,2,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z
_TEXT	SEGMENT
Result$ = 32
i$1 = 36
tv74 = 40
v$ = 64
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z PROC ; glm::all<0,glm::tvec2>, COMDAT

; 86   : 	{

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 87   : 		bool Result = true;

	mov	BYTE PTR Result$[rsp], 1

; 88   : 		for(length_t i = 0; i < v.length(); ++i)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@all
$LN2@all:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@all:
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@all

; 89   : 			Result = Result && v[i];

	movzx	eax, BYTE PTR Result$[rsp]
	test	eax, eax
	je	SHORT $LN6@all
	mov	edx, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@all
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN7@all
$LN6@all:
	mov	DWORD PTR tv74[rsp], 0
$LN7@all:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR Result$[rsp], al
	jmp	SHORT $LN2@all
$LN3@all:

; 90   : 		return Result;

	movzx	eax, BYTE PTR Result$[rsp]

; 91   : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ENDP ; glm::all<0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z PROC		; glm::tvec2<bool,0>::tvec2<bool,0>, COMDAT

; 47   : 	{}

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z ENDP		; glm::tvec2<bool,0>::tvec2<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 102  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 103  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 103				; 00000067H
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 104  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 105  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$0A@@glm@@SAHXZ PROC			; glm::tvec2<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\func_vector_relational.inl
;	COMDAT ??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z
_TEXT	SEGMENT
Result$ = 36
i$4 = 52
tv64 = 56
tv80 = 64
tv86 = 72
__$ReturnUdt$ = 96
x$ = 104
y$ = 112
??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z PROC ; glm::equal<float,0,glm::tvec2>, COMDAT

; 55   : 	{

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 56   : 		assert(x.length() == y.length());

	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	mov	DWORD PTR tv64[rsp], eax
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN6@equal
	mov	r8d, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_1NA@OPABFNEN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@HHLCGOLC@?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAy@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@equal:

; 57   : 
; 58   : 		vecType<bool, P> Result(uninitialize);

	xor	edx, edx
	lea	rcx, QWORD PTR Result$[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@W4ctor@1@@Z	; glm::tvec2<bool,0>::tvec2<bool,0>

; 59   : 		for(length_t i = 0; i < x.length(); ++i)

	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@equal
$LN2@equal:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@equal:
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$4[rsp], eax
	jge	SHORT $LN3@equal

; 60   : 			Result[i] = x[i] == y[i];

	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	mov	edx, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	mov	rcx, QWORD PTR tv80[rsp]
	movss	xmm0, DWORD PTR [rcx]
	ucomiss	xmm0, DWORD PTR [rax]
	jp	SHORT $LN7@equal
	jne	SHORT $LN7@equal
	mov	DWORD PTR tv86[rsp], 1
	jmp	SHORT $LN8@equal
$LN7@equal:
	mov	DWORD PTR tv86[rsp], 0
$LN8@equal:
	mov	edx, DWORD PTR i$4[rsp]
	lea	rcx, QWORD PTR Result$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEAAAEA_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	ecx, BYTE PTR tv86[rsp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN2@equal
$LN3@equal:

; 61   : 		return Result;

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	movzx	ecx, WORD PTR Result$[rsp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z ENDP ; glm::equal<float,0,glm::tvec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z PROC ; glm::tvec2<float,1>::tvec2<float,1><0>, COMDAT

; 41   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 40   : 		: x(v.x), y(v.y)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0

; 41   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::tvec2<float,1>::tvec2<float,1><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$00@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$00@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,1>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$00@glm@@SAHXZ		; glm::tvec2<float,1>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$00@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$00@glm@@SAHXZ PROC			; glm::tvec2<float,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$00@glm@@SAHXZ ENDP			; glm::tvec2<float,1>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z
_TEXT	SEGMENT
this$ = 16
v$ = 24
??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z PROC ; glm::tvec2<float,2>::tvec2<float,2><0>, COMDAT

; 41   : 	{}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 40   : 		: x(v.x), y(v.y)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0

; 41   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ENDP ; glm::tvec2<float,2>::tvec2<float,2><0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$01@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$01@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,2>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$01@glm@@SAHXZ		; glm::tvec2<float,2>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$01@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$01@glm@@SAHXZ PROC			; glm::tvec2<float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$01@glm@@SAHXZ ENDP			; glm::tvec2<float,2>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
_TEXT	SEGMENT
A$ = 40
B$ = 72
C$ = 104
D$ = 136
E$ = 168
F$ = 200
G$ = 232
H$ = 264
I$ = 296
J$ = 328
K$ = 360
Error$ = 372
$T14 = 376
$T15 = 384
$T16 = 392
$T17 = 400
$T18 = 408
$T19 = 410
$T20 = 412
$T21 = 414
tv87 = 416
tv129 = 420
tv139 = 424
tv149 = 428
?test_vec2_cast@@YAHXZ PROC				; test_vec2_cast

; 13   : {

$LN11:
	push	rdi
	sub	rsp, 432				; 000001b0H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 14   : 	glm::vec2 A(1.0f, 2.0f);

	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR A$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 15   : 	glm::lowp_vec2 B(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR B$[rsp]
	call	??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,2>::tvec2<float,2><0>

; 16   : 	glm::mediump_vec2 C(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR C$[rsp]
	call	??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,1>::tvec2<float,1><0>

; 17   : 	glm::highp_vec2 D(A);

	mov	rax, QWORD PTR A$[rsp]
	mov	QWORD PTR D$[rsp], rax

; 18   : 	
; 19   : 	glm::vec2 E = static_cast<glm::vec2>(A);

	mov	rax, QWORD PTR A$[rsp]
	mov	QWORD PTR $T14[rsp], rax
	mov	rax, QWORD PTR $T14[rsp]
	mov	QWORD PTR E$[rsp], rax

; 20   : 	glm::lowp_vec2 F = static_cast<glm::lowp_vec2>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR F$[rsp]
	call	??$?0$0A@@?$tvec2@M$01@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,2>::tvec2<float,2><0>

; 21   : 	glm::mediump_vec2 G = static_cast<glm::mediump_vec2>(A);

	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR G$[rsp]
	call	??$?0$0A@@?$tvec2@M$00@glm@@QEAA@AEBU?$tvec2@M$0A@@1@@Z ; glm::tvec2<float,1>::tvec2<float,1><0>

; 22   : 	glm::highp_vec2 H = static_cast<glm::highp_vec2>(A);

	mov	rax, QWORD PTR A$[rsp]
	mov	QWORD PTR $T15[rsp], rax
	mov	rax, QWORD PTR $T15[rsp]
	mov	QWORD PTR H$[rsp], rax

; 23   : 	
; 24   : 	my_vec2 I;
; 25   : 	glm::vec2 J = static_cast<glm::vec2>(I);

	lea	rdx, QWORD PTR $T17[rsp]
	lea	rcx, QWORD PTR I$[rsp]
	call	??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ ; my_vec2::operator glm::tvec2<float,0>
	mov	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR $T16[rsp], rax
	mov	rax, QWORD PTR $T16[rsp]
	mov	QWORD PTR J$[rsp], rax

; 26   : 	glm::vec2 K(7.8f);

	movss	xmm1, DWORD PTR __real@40f9999a
	lea	rcx, QWORD PTR K$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@M@Z		; glm::tvec2<float,0>::tvec2<float,0>

; 27   : 
; 28   : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 29   : 	
; 30   : 	Error += glm::all(glm::equal(A, E)) ? 0 : 1;

	lea	r8, QWORD PTR E$[rsp]
	lea	rdx, QWORD PTR A$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_vec2_
	mov	DWORD PTR tv87[rsp], 0
	jmp	SHORT $LN4@test_vec2_
$LN3@test_vec2_:
	mov	DWORD PTR tv87[rsp], 1
$LN4@test_vec2_:
	mov	eax, DWORD PTR tv87[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 31   : 	Error += glm::all(glm::equal(B, F)) ? 0 : 1;

	lea	r8, QWORD PTR F$[rsp]
	lea	rdx, QWORD PTR B$[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	??$equal@M$01Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$01@0@AEBU?$tvec2@M$01@0@0@Z ; glm::equal<float,2,glm::tvec2>
	mov	rcx, rax
	call	??$all@$01Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$01@0@@Z ; glm::all<2,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_vec2_
	mov	DWORD PTR tv129[rsp], 0
	jmp	SHORT $LN6@test_vec2_
$LN5@test_vec2_:
	mov	DWORD PTR tv129[rsp], 1
$LN6@test_vec2_:
	mov	eax, DWORD PTR tv129[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 32   : 	Error += glm::all(glm::equal(C, G)) ? 0 : 1;

	lea	r8, QWORD PTR G$[rsp]
	lea	rdx, QWORD PTR C$[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	??$equal@M$00Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$00@0@AEBU?$tvec2@M$00@0@0@Z ; glm::equal<float,1,glm::tvec2>
	mov	rcx, rax
	call	??$all@$00Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$00@0@@Z ; glm::all<1,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_vec2_
	mov	DWORD PTR tv139[rsp], 0
	jmp	SHORT $LN8@test_vec2_
$LN7@test_vec2_:
	mov	DWORD PTR tv139[rsp], 1
$LN8@test_vec2_:
	mov	eax, DWORD PTR tv139[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 33   : 	Error += glm::all(glm::equal(D, H)) ? 0 : 1;

	lea	r8, QWORD PTR H$[rsp]
	lea	rdx, QWORD PTR D$[rsp]
	lea	rcx, QWORD PTR $T21[rsp]
	call	??$equal@M$0A@Utvec2@glm@@@glm@@YA?AU?$tvec2@_N$0A@@0@AEBU?$tvec2@M$0A@@0@0@Z ; glm::equal<float,0,glm::tvec2>
	mov	rcx, rax
	call	??$all@$0A@Utvec2@glm@@@glm@@YA_NAEBU?$tvec2@_N$0A@@0@@Z ; glm::all<0,glm::tvec2>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_vec2_
	mov	DWORD PTR tv149[rsp], 0
	jmp	SHORT $LN10@test_vec2_
$LN9@test_vec2_:
	mov	DWORD PTR tv149[rsp], 1
$LN10@test_vec2_:
	mov	eax, DWORD PTR tv149[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 34   : 	
; 35   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 36   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_vec2_cast@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 432				; 000001b0H
	pop	rdi
	ret	0
?test_vec2_cast@@YAHXZ ENDP				; test_vec2_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\core\core_type_cast.cpp
;	COMDAT ??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ PROC		; my_vec2::operator glm::tvec2<float,0>, COMDAT

; 8    : 	operator glm::vec2() { return glm::vec2(x, y); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??Bmy_vec2@@QEAA?AU?$tvec2@M$0A@@glm@@XZ ENDP		; my_vec2::operator glm::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1297 :     _Container_proxy* _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1299 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1300 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1301 :     }

	pop	rdi
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT

; 1212 :     void _Orphan_me_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1213 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1214 :         _Orphan_me_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1215 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$ = 48
_Temp$1 = 56
this$ = 80
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT

; 1195 :     _CONSTEXPR20 void _Orphan_me_unlocked_v3() noexcept {

$LN15:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1196 :         if (!_Myproxy) { // already orphaned

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN10@Orphan_me_

; 1197 :             return;

	jmp	$LN1@Orphan_me_
$LN10@Orphan_me_:

; 1198 :         }
; 1199 : 
; 1200 :         // adopted, remove self from list
; 1201 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_me_:

; 1202 :         while (*_Pnext && *_Pnext != this) {

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN6@Orphan_me_
	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN6@Orphan_me_

; 1203 :             const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$1[rsp], rax

; 1204 :             _Pnext           = &_Temp->_Mynextiter;

	mov	rax, QWORD PTR _Temp$1[rsp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rsp], rax

; 1205 :         }

	jmp	SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1206 : 
; 1207 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN9@Orphan_me_
	jmp	SHORT $LN12@Orphan_me_
$LN9@Orphan_me_:
	lea	rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1207				; 000004b7H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN14@Orphan_me_
	int	3
	xor	eax, eax
$LN14@Orphan_me_:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1207				; 000004b7H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN9@Orphan_me_
$LN12@Orphan_me_:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN6@Orphan_me_

; 1208 :         *_Pnext  = _Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1209 :         _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
$LN1@Orphan_me_:

; 1210 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_Parent$ = 88
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT

; 1190 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1191 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1192 :         _Adopt_unlocked(_Parent);

	mov	rdx, QWORD PTR _Parent$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1193 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$ = 32
this$ = 64
_Parent$ = 72
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT

; 1173 :     _CONSTEXPR20 void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1174 :         if (!_Parent) {

	cmp	QWORD PTR _Parent$[rsp], 0
	jne	SHORT $LN2@Adopt_unlo

; 1175 :             _Orphan_me_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1176 :             return;

	jmp	SHORT $LN1@Adopt_unlo
$LN2@Adopt_unlo:

; 1177 :         }
; 1178 : 
; 1179 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

	mov	rax, QWORD PTR _Parent$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Parent_proxy$[rsp], rax

; 1180 :         if (_Myproxy != _Parent_proxy) { // change parentage

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$[rsp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN1@Adopt_unlo

; 1181 :             if (_Myproxy) { // adopted, remove self from list

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@Adopt_unlo

; 1182 :                 _Orphan_me_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1183 :             }
; 1184 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax+8], rcx

; 1185 :             _Parent_proxy->_Myfirstiter = this;

	mov	rax, QWORD PTR _Parent_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 1186 :             _Myproxy                    = _Parent_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$[rsp]
	mov	QWORD PTR [rax], rcx
$LN1@Adopt_unlo:

; 1187 :         }
; 1188 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
_Right$ = 88
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z PROC ; std::_Iterator_base12::_Assign_locked, COMDAT

; 1168 :     void _Assign_locked(const _Iterator_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1169 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1170 :         _Assign_unlocked(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1171 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ENDP ; std::_Iterator_base12::_Assign_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z PROC ; std::_Iterator_base12::_Assign_unlocked, COMDAT

; 1156 :     _CONSTEXPR20 void _Assign_unlocked(const _Iterator_base12& _Right) noexcept {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1157 :         if (_Myproxy == _Right._Myproxy) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN2@Assign_unl

; 1158 :             return;

	jmp	SHORT $LN1@Assign_unl
$LN2@Assign_unl:

; 1159 :         }
; 1160 : 
; 1161 :         if (_Right._Myproxy) {

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Assign_unl

; 1162 :             _Adopt_unlocked(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1163 :         } else { // becoming invalid, disown current parent

	jmp	SHORT $LN1@Assign_unl
$LN3@Assign_unl:

; 1164 :             _Orphan_me_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN1@Assign_unl:

; 1165 :         }
; 1166 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ENDP ; std::_Iterator_base12::_Assign_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1145 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1146 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Getcont
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv68[rsp], rax
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	QWORD PTR tv68[rsp], 0
$LN4@Getcont:
	mov	rax, QWORD PTR tv68[rsp]

; 1147 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
this$ = 48
_Parent$ = 56
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1125 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1126 : #if _HAS_CXX20
; 1127 :         if (_STD is_constant_evaluated()) {
; 1128 :             _Adopt_unlocked(_Parent);
; 1129 :         } else
; 1130 : #endif // _HAS_CXX20
; 1131 :         {
; 1132 :             _Adopt_locked(_Parent);

	mov	rdx, QWORD PTR _Parent$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked

; 1133 :         }
; 1134 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1114 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1115 : #if _HAS_CXX20
; 1116 :         if (_STD is_constant_evaluated()) {
; 1117 :             _Orphan_me_unlocked_v3();
; 1118 :         } else
; 1119 : #endif // _HAS_CXX20
; 1120 :         {
; 1121 :             _Orphan_me_locked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3

; 1122 :         }
; 1123 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1097 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1098 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1099 : #if _HAS_CXX20
; 1100 :         if (_STD is_constant_evaluated()) {
; 1101 :             _Assign_unlocked(_Right);
; 1102 :         } else
; 1103 : #endif // _HAS_CXX20
; 1104 :         {
; 1105 :             _Assign_locked(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_locked

; 1106 :         }
; 1107 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1108 :         _Myproxy = _Right._Myproxy;
; 1109 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1110 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1111 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1093 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1096 : 
; 1097 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1098 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1099 : #if _HAS_CXX20
; 1100 :         if (_STD is_constant_evaluated()) {
; 1101 :             _Assign_unlocked(_Right);
; 1102 :         } else
; 1103 : #endif // _HAS_CXX20
; 1104 :         {
; 1105 :             _Assign_locked(_Right);
; 1106 :         }
; 1107 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1108 :         _Myproxy = _Right._Myproxy;
; 1109 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1110 :         return *this;
; 1111 :     }
; 1112 : 
; 1113 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1114 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1115 : #if _HAS_CXX20
; 1116 :         if (_STD is_constant_evaluated()) {
; 1117 :             _Orphan_me_unlocked_v3();
; 1118 :         } else
; 1119 : #endif // _HAS_CXX20
; 1120 :         {
; 1121 :             _Orphan_me_locked_v3();
; 1122 :         }
; 1123 :     }
; 1124 : 
; 1125 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1126 : #if _HAS_CXX20
; 1127 :         if (_STD is_constant_evaluated()) {
; 1128 :             _Adopt_unlocked(_Parent);
; 1129 :         } else
; 1130 : #endif // _HAS_CXX20
; 1131 :         {
; 1132 :             _Adopt_locked(_Parent);
; 1133 :         }
; 1134 :     }
; 1135 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1136 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1137 :         if (_Parent) { // have a parent, do adoption
; 1138 :             _Myproxy = _Parent->_Myproxy;
; 1139 :         } else { // no future parent, just disown current parent
; 1140 :             _Myproxy = nullptr;
; 1141 :         }
; 1142 :     }
; 1143 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1144 : 
; 1145 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1146 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1147 :     }
; 1148 : 
; 1149 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1150 : 
; 1151 :     mutable _Container_proxy* _Myproxy    = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1152 :     mutable _Iterator_base12* _Mynextiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1094 :         *this = _Right;

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1095 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1091 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1092 : 
; 1093 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1094 :         *this = _Right;
; 1095 :     }
; 1096 : 
; 1097 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1098 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1099 : #if _HAS_CXX20
; 1100 :         if (_STD is_constant_evaluated()) {
; 1101 :             _Assign_unlocked(_Right);
; 1102 :         } else
; 1103 : #endif // _HAS_CXX20
; 1104 :         {
; 1105 :             _Assign_locked(_Right);
; 1106 :         }
; 1107 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1108 :         _Myproxy = _Right._Myproxy;
; 1109 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1110 :         return *this;
; 1111 :     }
; 1112 : 
; 1113 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1114 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1115 : #if _HAS_CXX20
; 1116 :         if (_STD is_constant_evaluated()) {
; 1117 :             _Orphan_me_unlocked_v3();
; 1118 :         } else
; 1119 : #endif // _HAS_CXX20
; 1120 :         {
; 1121 :             _Orphan_me_locked_v3();
; 1122 :         }
; 1123 :     }
; 1124 : 
; 1125 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1126 : #if _HAS_CXX20
; 1127 :         if (_STD is_constant_evaluated()) {
; 1128 :             _Adopt_unlocked(_Parent);
; 1129 :         } else
; 1130 : #endif // _HAS_CXX20
; 1131 :         {
; 1132 :             _Adopt_locked(_Parent);
; 1133 :         }
; 1134 :     }
; 1135 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1136 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1137 :         if (_Parent) { // have a parent, do adoption
; 1138 :             _Myproxy = _Parent->_Myproxy;
; 1139 :         } else { // no future parent, just disown current parent
; 1140 :             _Myproxy = nullptr;
; 1141 :         }
; 1142 :     }
; 1143 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1144 : 
; 1145 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1146 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1147 :     }
; 1148 : 
; 1149 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1150 : 
; 1151 :     mutable _Container_proxy* _Myproxy    = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1152 :     mutable _Iterator_base12* _Mynextiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1091 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1078 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1079 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1080 :         _Orphan_all_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1081 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1219 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1220 :     if (!_Myproxy) { // no proxy, already done

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all

; 1221 :         return;

	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1222 :     }
; 1223 : 
; 1224 :     // proxy allocated, drain it
; 1225 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1226 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1227 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1228 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:

; 1229 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1231 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1232 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1233 : #if _HAS_CXX20
; 1234 :     if (_STD is_constant_evaluated()) {
; 1235 :         _Orphan_all_unlocked_v3();
; 1236 :     } else
; 1237 : #endif // _HAS_CXX20
; 1238 :     {
; 1239 :         _Orphan_all_locked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1240 :     }
; 1241 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1242 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1048 : 
; 1049 :     _Container_base12(const _Container_base12&) = delete;
; 1050 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1051 : 
; 1052 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1053 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1054 : 
; 1055 :     template <class _Alloc>
; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1058 :         _Construct_in_place(*_New_proxy, this);
; 1059 :         _Myproxy            = _New_proxy;
; 1060 :         _New_proxy->_Mycont = this;
; 1061 :     }
; 1062 : 
; 1063 :     template <class _Alloc>
; 1064 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1065 :         // pre: no iterators refer to the existing proxy
; 1066 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1067 :         _Construct_in_place(*_New_proxy, this);
; 1068 :         _New_proxy->_Mycont = this;
; 1069 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1070 :     }
; 1071 : 
; 1072 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1040 : 
; 1041 :     const _Container_base12* _Mycont       = nullptr;
; 1042 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 154				; 0000009aH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 154				; 0000009aH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 164				; 000000a4H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 164				; 000000a4H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 166  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 78   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 80   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 317  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 318  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 319  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 193  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec4@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 163  : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 161  : 				: x(0), y(0), z(0), w(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0

; 163  : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$0A@@glm@@SAHXZ PROC			; glm::tvec4<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$0A@@glm@@SAHXZ ENDP			; glm::tvec4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 57   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s1$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec2@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 52   : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 51   : 		: x(scalar), y(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 52   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$0A@@glm@@SAHXZ PROC			; glm::tvec2<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$0A@@glm@@SAHXZ ENDP			; glm::tvec2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 641  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 642  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 643  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
