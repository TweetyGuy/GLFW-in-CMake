; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator*<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@M@Z			; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z		; glm::tvec4<float,0>::tvec4<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator*<float,0>
PUBLIC	?test@catmullRom@@YAHXZ				; catmullRom::test
PUBLIC	??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec2<float,0> >
PUBLIC	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z		; glm::tvec3<float,0>::tvec3<float,0>
PUBLIC	??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec3<float,0> >
PUBLIC	??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec4<float,0> >
PUBLIC	?test@hermite@@YAHXZ				; hermite::test
PUBLIC	??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec2<float,0> >
PUBLIC	??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec3<float,0> >
PUBLIC	??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec4<float,0> >
PUBLIC	?test@cubic@@YAHXZ				; cubic::test
PUBLIC	??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec2<float,0> >
PUBLIC	??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec3<float,0> >
PUBLIC	??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec4<float,0> >
PUBLIC	main
PUBLIC	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator*=<float>
PUBLIC	??$pow2@M@glm@@YAMAEBM@Z			; glm::pow2<float>
PUBLIC	??$pow3@M@glm@@YAMAEBM@Z			; glm::pow3<float>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z	; glm::operator*<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z	; glm::operator+<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z	; glm::operator/<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z	; glm::operator*<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z	; glm::operator+<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z	; glm::operator/<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z	; glm::operator*<float,0>
PUBLIC	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z	; glm::operator+<float,0>
PUBLIC	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z	; glm::operator/<float,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z	; glm::operator*<float,0>
PUBLIC	?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_mul<float,0,0>::call
PUBLIC	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::tvec4<float,0>::operator+=<float>
PUBLIC	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z	; glm::tvec4<float,0>::operator/=<float>
PUBLIC	?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_add<float,0,0>::call
PUBLIC	?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_div<float,0,0>::call
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@c0000000
PUBLIC	__real@c0400000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test@catmullRom@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+743
	DD	imagerel $unwind$?test@catmullRom@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+474
	DD	imagerel $unwind$??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+483
	DD	imagerel $unwind$??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+486
	DD	imagerel $unwind$??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test@hermite@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+743
	DD	imagerel $unwind$?test@hermite@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+431
	DD	imagerel $unwind$??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+443
	DD	imagerel $unwind$??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+446
	DD	imagerel $unwind$??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test@cubic@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+743
	DD	imagerel $unwind$?test@cubic@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$pow2@M@glm@@YAMAEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$pow2@M@glm@@YAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$pow3@M@glm@@YAMAEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$pow3@M@glm@@YAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD imagerel $LN3
	DD	imagerel $LN3+143
	DD	imagerel $unwind$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z DD 031001H
	DD	0700c8210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z DD 021401H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$pow3@M@glm@@YAMAEBM@Z DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$pow2@M@glm@@YAMAEBM@Z DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z DD 031101H
	DD	0700d8211H
	DD	0600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD 021901H
	DD	07015d219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD 021901H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD 021901H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	018011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	01a011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	016011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z DD 031c01H
	DD	012011cH
	DD	07015H
xdata	ENDS
xdata	SEGMENT
$unwind$?test@catmullRom@@YAHXZ DD 031a01H
	DD	0340109H
	DD	07002H
$unwind$?test@hermite@@YAHXZ DD 031a01H
	DD	0340109H
	DD	07002H
$unwind$?test@cubic@@YAHXZ DD 031a01H
	DD	0340109H
	DD	07002H
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
?test@catmullRom@@YAHXZ$rtcName$0 DB 052H		; catmullRom::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	032H
	DB	00H
?test@catmullRom@@YAHXZ$rtcName$1 DB 052H		; catmullRom::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	033H
	DB	00H
?test@catmullRom@@YAHXZ$rtcName$2 DB 052H		; catmullRom::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	034H
	DB	00H
?test@hermite@@YAHXZ$rtcName$0 DB 052H			; hermite::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	032H
	DB	00H
?test@catmullRom@@YAHXZ$rtcVarDesc DD 098H		; catmullRom::test
	DD	010H
	DQ	FLAT:?test@catmullRom@@YAHXZ$rtcName$2
	DD	068H
	DD	0cH
	DQ	FLAT:?test@catmullRom@@YAHXZ$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?test@catmullRom@@YAHXZ$rtcName$0
	ORG $+144
?test@catmullRom@@YAHXZ$rtcFrameData DD 03H		; catmullRom::test
	DD	00H
	DQ	FLAT:?test@catmullRom@@YAHXZ$rtcVarDesc
?test@hermite@@YAHXZ$rtcName$1 DB 052H			; hermite::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	033H
	DB	00H
?test@hermite@@YAHXZ$rtcName$2 DB 052H			; hermite::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	034H
	DB	00H
?test@hermite@@YAHXZ$rtcVarDesc DD 098H			; hermite::test
	DD	010H
	DQ	FLAT:?test@hermite@@YAHXZ$rtcName$2
	DD	068H
	DD	0cH
	DQ	FLAT:?test@hermite@@YAHXZ$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?test@hermite@@YAHXZ$rtcName$0
	ORG $+144
?test@hermite@@YAHXZ$rtcFrameData DD 03H		; hermite::test
	DD	00H
	DQ	FLAT:?test@hermite@@YAHXZ$rtcVarDesc
?test@cubic@@YAHXZ$rtcName$0 DB 052H			; cubic::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	032H
	DB	00H
?test@cubic@@YAHXZ$rtcName$1 DB 052H			; cubic::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	033H
	DB	00H
?test@cubic@@YAHXZ$rtcName$2 DB 052H			; cubic::test
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+9
?test@cubic@@YAHXZ$rtcVarDesc DD 098H			; cubic::test
	DD	010H
	DQ	FLAT:?test@cubic@@YAHXZ$rtcName$2
	DD	068H
	DD	0cH
	DQ	FLAT:?test@cubic@@YAHXZ$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?test@cubic@@YAHXZ$rtcName$0
	ORG $+144
?test@cubic@@YAHXZ$rtcFrameData DD 03H			; cubic::test
	DD	00H
	DQ	FLAT:?test@cubic@@YAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z DD 031601H
	DD	070126216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z DD 011801H
	DD	07018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@M$0A@@glm@@QEAA@M@Z DD 010c01H
	DD	0700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z DD 021501H
	DD	070113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD 011201H
	DD	07012H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_div<float,0,0>::call, COMDAT

; 68   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 69   : 			return tvec4<T, P>(a.x / b.x, a.y / b.y, a.z / b.z, a.w / b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	divss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	divss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	divss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	divss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 70   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_div<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_add<float,0,0>::call, COMDAT

; 41   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 42   : 			return tvec4<T, P>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	addss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	addss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	addss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 43   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_add<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator/=<float>, COMDAT

; 432  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 433  : 		return (*this = detail::compute_vec4_div<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_div@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_div<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 434  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator/=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
v$ = 104
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::tvec4<float,0>::operator+=<float>, COMDAT

; 383  : 	{

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 384  : 		return (*this = detail::compute_vec4_add<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(v)));

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_add@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_add<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 385  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::tvec4<float,0>::operator+=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z
_TEXT	SEGMENT
tv80 = 48
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z PROC ; glm::detail::compute_vec4_mul<float,0,0>::call, COMDAT

; 59   : 		{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 60   : 			return tvec4<T, P>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	mulss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm3, DWORD PTR [rax]
	mulss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 61   : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ENDP ; glm::detail::compute_vec4_mul<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
v$ = 72
scalar$ = 80
??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 628  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 629  : 		return tvec3<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR scalar$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 630  : 			v.x * scalar,
; 631  : 			v.y * scalar,
; 632  : 			v.z * scalar);
; 633  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator/<float,0>, COMDAT

; 724  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 725  : 		return tvec4<T, P>(v) /= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?_0M@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator/=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 726  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z PROC	; glm::operator+<float,0>, COMDAT

; 658  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 659  : 		return tvec4<T, P>(v1) += v2;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v1$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdx, QWORD PTR v2$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?YM@?$tvec4@M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ; glm::tvec4<float,0>::operator+=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 660  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
scalar$ = 88
v$ = 96
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z PROC	; glm::operator*<float,0>, COMDAT

; 706  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 707  : 		return tvec4<T, P>(v) *= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator*=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 708  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
v$ = 72
scalar$ = 80
??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z PROC	; glm::operator/<float,0>, COMDAT

; 673  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 674  : 		return tvec3<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	divss	xmm1, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm2, DWORD PTR [rax]
	divss	xmm2, DWORD PTR scalar$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 675  : 			v.x / scalar,
; 676  : 			v.y / scalar,
; 677  : 			v.z / scalar);
; 678  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
tv76 = 32
__$ReturnUdt$ = 64
v1$ = 72
v2$ = 80
??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z PROC	; glm::operator+<float,0>, COMDAT

; 574  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 575  : 		return tvec3<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	addss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm2, DWORD PTR [rax]
	addss	xmm2, DWORD PTR [rcx]
	movss	DWORD PTR tv76[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv76[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 576  : 			v1.x + v2.x,
; 577  : 			v1.y + v2.y,
; 578  : 			v1.z + v2.z);
; 579  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
scalar$ = 72
v$ = 80
??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z PROC	; glm::operator*<float,0>, COMDAT

; 646  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 647  : 		return tvec3<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	mulss	xmm0, DWORD PTR [rax+8]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	mulss	xmm1, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm2, DWORD PTR scalar$[rsp]
	mulss	xmm2, DWORD PTR [rax]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 648  : 			scalar * v.x,
; 649  : 			scalar * v.y,
; 650  : 			scalar * v.z);
; 651  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator/<float,0>, COMDAT

; 581  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 582  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	divss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 583  : 			v.x / scalar,
; 584  : 			v.y / scalar);
; 585  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator/<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z PROC	; glm::operator+<float,0>, COMDAT

; 493  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 494  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 495  : 			v1.x + v2.x,
; 496  : 			v1.y + v2.y);
; 497  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ENDP	; glm::operator+<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
scalar$ = 56
v$ = 64
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z PROC	; glm::operator*<float,0>, COMDAT

; 557  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 558  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	mulss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR scalar$[rsp]
	mulss	xmm1, DWORD PTR [rax]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 559  : 			scalar * v.x,
; 560  : 			scalar * v.y);
; 561  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\optimum_pow.inl
;	COMDAT ??$pow3@M@glm@@YAMAEBM@Z
_TEXT	SEGMENT
x$ = 32
??$pow3@M@glm@@YAMAEBM@Z PROC				; glm::pow3<float>, COMDAT

; 14   : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 15   : 		return x * x * x;

	mov	rax, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax]

; 16   : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$pow3@M@glm@@YAMAEBM@Z ENDP				; glm::pow3<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\optimum_pow.inl
;	COMDAT ??$pow2@M@glm@@YAMAEBM@Z
_TEXT	SEGMENT
x$ = 32
??$pow2@M@glm@@YAMAEBM@Z PROC				; glm::pow2<float>, COMDAT

; 8    : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 9    : 		return x * x;

	mov	rax, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]

; 10   : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$pow2@M@glm@@YAMAEBM@Z ENDP				; glm::pow2<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
scalar$ = 104
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z PROC		; glm::tvec4<float,0>::operator*=<float>, COMDAT

; 411  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H

; 412  : 		return (*this = detail::compute_vec4_mul<T, P, detail::is_aligned<P>::value>::call(*this, tvec4<T, P>(scalar)));

	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@M@Z		; glm::tvec4<float,0>::tvec4<float,0>
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?call@?$compute_vec4_mul@M$0A@$0A@@detail@glm@@SA?AU?$tvec4@M$0A@@3@AEBU43@0@Z ; glm::detail::compute_vec4_mul<float,0,0>::call
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]

; 413  : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ENDP		; glm::tvec4<float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_spline.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 91   : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 92   : 	int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 93   : 
; 94   : 	Error += catmullRom::test();

	call	?test@catmullRom@@YAHXZ			; catmullRom::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 95   : 	Error += hermite::test();

	call	?test@hermite@@YAHXZ			; hermite::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 96   : 	Error += cubic::test();

	call	?test@cubic@@YAHXZ			; cubic::test
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 97   : 
; 98   : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 99   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 96
__$ReturnUdt$ = 128
v1$ = 136
v2$ = 144
v3$ = 152
v4$ = 160
s$ = 168
??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::cubic<glm::tvec4<float,0> >, COMDAT

; 60   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H

; 61   : 		return ((v1 * s + v2) * s + v3) * s + v4;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mov	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v2$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v3$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v4$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::cubic<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 44
$T3 = 56
$T4 = 68
$T5 = 80
__$ReturnUdt$ = 112
v1$ = 120
v2$ = 128
v3$ = 136
v4$ = 144
s$ = 152
??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::cubic<glm::tvec3<float,0> >, COMDAT

; 60   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H

; 61   : 		return ((v1 * s + v2) * s + v3) * s + v4;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mov	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v2$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v3$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v4$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::cubic<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
$T4 = 56
$T5 = 64
__$ReturnUdt$ = 96
v1$ = 104
v2$ = 112
v3$ = 120
v4$ = 128
s$ = 136
??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::cubic<glm::tvec2<float,0> >, COMDAT

; 60   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 61   : 		return ((v1 * s + v2) * s + v3) * s + v4;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mov	rdx, QWORD PTR v1$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v2$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v3$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR s$[rsp]
	movss	xmm2, DWORD PTR [rcx]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator*<float,0>
	mov	r8, QWORD PTR v4$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 62   : 	}

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::cubic<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_spline.cpp
_TEXT	SEGMENT
Error$ = 48
Result2$ = 72
Result3$ = 104
Result$ = 152
$T6 = 180
$T7 = 184
$T8 = 192
$T9 = 200
$T10 = 208
$T11 = 216
$T12 = 220
$T13 = 232
$T14 = 244
$T15 = 256
$T16 = 268
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
tv67 = 336
tv72 = 344
tv77 = 352
tv89 = 360
tv95 = 368
tv133 = 376
tv147 = 384
tv154 = 392
tv161 = 400
?test@cubic@@YAHXZ PROC					; cubic::test

; 65   : 	{

$LN3:
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 66   : 		int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 67   : 
; 68   : 		glm::vec2 Result2 = glm::cubic(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T6[rsp], xmm0
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv67[rsp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv72[rsp], rax
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T9[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv77[rsp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	lea	rcx, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv67[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv72[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv77[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result2$[rsp]
	call	??$cubic@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec2<float,0> >

; 69   : 			glm::vec2(0.0f, 0.0f),
; 70   : 			glm::vec2(1.0f, 0.0f),
; 71   : 			glm::vec2(1.0f, 1.0f),
; 72   : 			glm::vec2(0.0f, 1.0f), 0.5f);
; 73   : 
; 74   : 		glm::vec3 Result3 = glm::cubic(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T11[rsp], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv89[rsp], rax
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv95[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv133[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	lea	rcx, QWORD PTR $T11[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv89[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv95[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv133[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result3$[rsp]
	call	??$cubic@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec3<float,0> >

; 75   : 			glm::vec3(0.0f, 0.0f, 0.0f), 
; 76   : 			glm::vec3(1.0f, 0.0f, 0.0f), 
; 77   : 			glm::vec3(1.0f, 1.0f, 0.0f), 
; 78   : 			glm::vec3(0.0f, 1.0f, 0.0f), 0.5f);
; 79   : 
; 80   : 		glm::vec4 Result = glm::cubic(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T16[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv147[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv154[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv161[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T20[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	lea	rcx, QWORD PTR $T16[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv147[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv154[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv161[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result$[rsp]
	call	??$cubic@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::cubic<glm::tvec4<float,0> >

; 81   : 			glm::vec4(0.0f, 0.0f, 0.0f, 1.0f), 
; 82   : 			glm::vec4(1.0f, 0.0f, 0.0f, 1.0f), 
; 83   : 			glm::vec4(1.0f, 1.0f, 0.0f, 1.0f), 
; 84   : 			glm::vec4(0.0f, 1.0f, 0.0f, 1.0f), 0.5f);
; 85   : 
; 86   : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 87   : 	}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test@cubic@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
?test@cubic@@YAHXZ ENDP					; cubic::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 76
$T3 = 92
$T4 = 108
$T5 = 124
$T6 = 140
tv80 = 160
tv86 = 168
tv92 = 176
__$ReturnUdt$ = 208
v1$ = 216
t1$ = 224
v2$ = 232
t2$ = 240
s$ = 248
??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::hermite<glm::tvec4<float,0> >, COMDAT

; 38   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H

; 39   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 40   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 41   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 42   : 
; 43   : 		typename genType::value_type f1 = typename genType::value_type(2) * s3 - typename genType::value_type(3) * s2 + typename genType::value_type(1);

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR f1$[rsp], xmm0

; 44   : 		typename genType::value_type f2 = typename genType::value_type(-2) * s3 + typename genType::value_type(3) * s2;

	movss	xmm0, DWORD PTR __real@c0000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	movss	DWORD PTR f2$[rsp], xmm0

; 45   : 		typename genType::value_type f3 = s3 - typename genType::value_type(2) * s2 + s;

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s2$[rsp]
	movss	xmm1, DWORD PTR s3$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 46   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 47   : 
; 48   : 		return f1 * v1 + f2 * v2 + f3 * t1 + f4 * t2;

	mov	r8, QWORD PTR t2$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv80[rsp], rax
	mov	r8, QWORD PTR t1$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv86[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv92[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv92[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv86[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 49   : 	}

	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::hermite<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 72
$T3 = 84
$T4 = 96
$T5 = 108
$T6 = 120
tv80 = 136
tv86 = 144
tv92 = 152
__$ReturnUdt$ = 176
v1$ = 184
t1$ = 192
v2$ = 200
t2$ = 208
s$ = 216
??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::hermite<glm::tvec3<float,0> >, COMDAT

; 38   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H

; 39   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 40   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 41   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 42   : 
; 43   : 		typename genType::value_type f1 = typename genType::value_type(2) * s3 - typename genType::value_type(3) * s2 + typename genType::value_type(1);

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR f1$[rsp], xmm0

; 44   : 		typename genType::value_type f2 = typename genType::value_type(-2) * s3 + typename genType::value_type(3) * s2;

	movss	xmm0, DWORD PTR __real@c0000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	movss	DWORD PTR f2$[rsp], xmm0

; 45   : 		typename genType::value_type f3 = s3 - typename genType::value_type(2) * s2 + s;

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s2$[rsp]
	movss	xmm1, DWORD PTR s3$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 46   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 47   : 
; 48   : 		return f1 * v1 + f2 * v2 + f3 * t1 + f4 * t2;

	mov	r8, QWORD PTR t2$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv80[rsp], rax
	mov	r8, QWORD PTR t1$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv86[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv92[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv92[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv86[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 49   : 	}

	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::hermite<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 68
$T3 = 76
$T4 = 84
$T5 = 92
$T6 = 100
tv80 = 112
tv86 = 120
tv92 = 128
__$ReturnUdt$ = 160
v1$ = 168
t1$ = 176
v2$ = 184
t2$ = 192
s$ = 200
??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::hermite<glm::tvec2<float,0> >, COMDAT

; 38   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H

; 39   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 40   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 41   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 42   : 
; 43   : 		typename genType::value_type f1 = typename genType::value_type(2) * s3 - typename genType::value_type(3) * s2 + typename genType::value_type(1);

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR f1$[rsp], xmm0

; 44   : 		typename genType::value_type f2 = typename genType::value_type(-2) * s3 + typename genType::value_type(3) * s2;

	movss	xmm0, DWORD PTR __real@c0000000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40400000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	movss	DWORD PTR f2$[rsp], xmm0

; 45   : 		typename genType::value_type f3 = s3 - typename genType::value_type(2) * s2 + s;

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR s2$[rsp]
	movss	xmm1, DWORD PTR s3$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 46   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 47   : 
; 48   : 		return f1 * v1 + f2 * v2 + f3 * t1 + f4 * t2;

	mov	r8, QWORD PTR t2$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv80[rsp], rax
	mov	r8, QWORD PTR t1$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv86[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv92[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv92[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv86[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 49   : 	}

	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::hermite<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_spline.cpp
_TEXT	SEGMENT
Error$ = 48
Result2$ = 72
Result3$ = 104
Result4$ = 152
$T6 = 180
$T7 = 184
$T8 = 192
$T9 = 200
$T10 = 208
$T11 = 216
$T12 = 220
$T13 = 232
$T14 = 244
$T15 = 256
$T16 = 268
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
tv67 = 336
tv72 = 344
tv77 = 352
tv89 = 360
tv95 = 368
tv133 = 376
tv147 = 384
tv154 = 392
tv161 = 400
?test@hermite@@YAHXZ PROC				; hermite::test

; 37   : 	{

$LN3:
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 38   : 		int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 39   : 
; 40   : 		glm::vec2 Result2 = glm::hermite(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T6[rsp], xmm0
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv67[rsp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv72[rsp], rax
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T9[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv77[rsp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	lea	rcx, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv67[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv72[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv77[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result2$[rsp]
	call	??$hermite@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec2<float,0> >

; 41   : 			glm::vec2(0.0f, 0.0f),
; 42   : 			glm::vec2(1.0f, 0.0f),
; 43   : 			glm::vec2(1.0f, 1.0f),
; 44   : 			glm::vec2(0.0f, 1.0f), 0.5f);
; 45   : 
; 46   : 		glm::vec3 Result3 = glm::hermite(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T11[rsp], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv89[rsp], rax
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv95[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv133[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	lea	rcx, QWORD PTR $T11[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv89[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv95[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv133[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result3$[rsp]
	call	??$hermite@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec3<float,0> >

; 47   : 			glm::vec3(0.0f, 0.0f, 0.0f), 
; 48   : 			glm::vec3(1.0f, 0.0f, 0.0f), 
; 49   : 			glm::vec3(1.0f, 1.0f, 0.0f), 
; 50   : 			glm::vec3(0.0f, 1.0f, 0.0f), 0.5f);
; 51   : 
; 52   : 		glm::vec4 Result4 = glm::hermite(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T16[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv147[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv154[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv161[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T20[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	lea	rcx, QWORD PTR $T16[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv147[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv154[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv161[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result4$[rsp]
	call	??$hermite@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::hermite<glm::tvec4<float,0> >

; 53   : 			glm::vec4(0.0f, 0.0f, 0.0f, 1.0f), 
; 54   : 			glm::vec4(1.0f, 0.0f, 0.0f, 1.0f), 
; 55   : 			glm::vec4(1.0f, 1.0f, 0.0f, 1.0f), 
; 56   : 			glm::vec4(0.0f, 1.0f, 0.0f, 1.0f), 0.5f);
; 57   : 
; 58   : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 59   : 	}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test@hermite@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
?test@hermite@@YAHXZ ENDP				; hermite::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 76
$T3 = 92
$T4 = 108
$T5 = 124
$T6 = 140
$T7 = 156
tv84 = 176
tv90 = 184
tv128 = 192
__$ReturnUdt$ = 224
v1$ = 232
v2$ = 240
v3$ = 248
v4$ = 256
s$ = 264
??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::catmullRom<glm::tvec4<float,0> >, COMDAT

; 15   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 208				; 000000d0H

; 16   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 17   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 18   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 19   : 
; 20   : 		typename genType::value_type f1 = -s3 + typename genType::value_type(2) * s2 - s;

	movss	xmm0, DWORD PTR s3$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	subss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f1$[rsp], xmm0

; 21   : 		typename genType::value_type f2 = typename genType::value_type(3) * s3 - typename genType::value_type(5) * s2 + typename genType::value_type(2);

	movss	xmm0, DWORD PTR __real@40400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40a00000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR f2$[rsp], xmm0

; 22   : 		typename genType::value_type f3 = typename genType::value_type(-3) * s3 + typename genType::value_type(4) * s2 + s;

	movss	xmm0, DWORD PTR __real@c0400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40800000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 23   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 24   : 
; 25   : 		return (f1 * v1 + f2 * v2 + f3 * v3 + f4 * v4) / typename genType::value_type(2);

	mov	r8, QWORD PTR v4$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv84[rsp], rax
	mov	r8, QWORD PTR v3$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv90[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv128[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv128[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ; glm::operator/<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 26   : 
; 27   : 	}

	add	rsp, 208				; 000000d0H
	pop	rdi
	ret	0
??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::catmullRom<glm::tvec4<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 72
$T3 = 84
$T4 = 96
$T5 = 108
$T6 = 120
$T7 = 132
tv84 = 144
tv90 = 152
tv128 = 160
__$ReturnUdt$ = 192
v1$ = 200
v2$ = 208
v3$ = 216
v4$ = 224
s$ = 232
??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::catmullRom<glm::tvec3<float,0> >, COMDAT

; 15   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H

; 16   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 17   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 18   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 19   : 
; 20   : 		typename genType::value_type f1 = -s3 + typename genType::value_type(2) * s2 - s;

	movss	xmm0, DWORD PTR s3$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	subss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f1$[rsp], xmm0

; 21   : 		typename genType::value_type f2 = typename genType::value_type(3) * s3 - typename genType::value_type(5) * s2 + typename genType::value_type(2);

	movss	xmm0, DWORD PTR __real@40400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40a00000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR f2$[rsp], xmm0

; 22   : 		typename genType::value_type f3 = typename genType::value_type(-3) * s3 + typename genType::value_type(4) * s2 + s;

	movss	xmm0, DWORD PTR __real@c0400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40800000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 23   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 24   : 
; 25   : 		return (f1 * v1 + f2 * v2 + f3 * v3 + f4 * v4) / typename genType::value_type(2);

	mov	r8, QWORD PTR v4$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv84[rsp], rax
	mov	r8, QWORD PTR v3$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv90[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv128[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv128[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@M@Z ; glm::operator/<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 26   : 
; 27   : 	}

	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::catmullRom<glm::tvec3<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z PROC			; glm::tvec3<float,0>::tvec3<float,0>, COMDAT

; 70   : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z ENDP			; glm::tvec3<float,0>::tvec3<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\spline.inl
;	COMDAT ??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z
_TEXT	SEGMENT
s1$ = 32
s2$ = 36
s3$ = 40
f1$ = 44
f2$ = 48
f3$ = 52
f4$ = 56
$T1 = 60
$T2 = 68
$T3 = 76
$T4 = 84
$T5 = 92
$T6 = 100
$T7 = 108
tv84 = 120
tv90 = 128
tv128 = 136
__$ReturnUdt$ = 160
v1$ = 168
v2$ = 176
v3$ = 184
v4$ = 192
s$ = 200
??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z PROC ; glm::catmullRom<glm::tvec2<float,0> >, COMDAT

; 15   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H

; 16   : 		typename genType::value_type s1 = s;

	mov	rax, QWORD PTR s$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR s1$[rsp], xmm0

; 17   : 		typename genType::value_type s2 = pow2(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow2@M@glm@@YAMAEBM@Z		; glm::pow2<float>
	movss	DWORD PTR s2$[rsp], xmm0

; 18   : 		typename genType::value_type s3 = pow3(s);

	mov	rcx, QWORD PTR s$[rsp]
	call	??$pow3@M@glm@@YAMAEBM@Z		; glm::pow3<float>
	movss	DWORD PTR s3$[rsp], xmm0

; 19   : 
; 20   : 		typename genType::value_type f1 = -s3 + typename genType::value_type(2) * s2 - s;

	movss	xmm0, DWORD PTR s3$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	subss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f1$[rsp], xmm0

; 21   : 		typename genType::value_type f2 = typename genType::value_type(3) * s3 - typename genType::value_type(5) * s2 + typename genType::value_type(2);

	movss	xmm0, DWORD PTR __real@40400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40a00000
	mulss	xmm1, DWORD PTR s2$[rsp]
	subss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR f2$[rsp], xmm0

; 22   : 		typename genType::value_type f3 = typename genType::value_type(-3) * s3 + typename genType::value_type(4) * s2 + s;

	movss	xmm0, DWORD PTR __real@c0400000
	mulss	xmm0, DWORD PTR s3$[rsp]
	movss	xmm1, DWORD PTR __real@40800000
	mulss	xmm1, DWORD PTR s2$[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR s$[rsp]
	addss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR f3$[rsp], xmm0

; 23   : 		typename genType::value_type f4 = s3 - s2;

	movss	xmm0, DWORD PTR s3$[rsp]
	subss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR f4$[rsp], xmm0

; 24   : 
; 25   : 		return (f1 * v1 + f2 * v2 + f3 * v3 + f4 * v4) / typename genType::value_type(2);

	mov	r8, QWORD PTR v4$[rsp]
	movss	xmm1, DWORD PTR f4$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv84[rsp], rax
	mov	r8, QWORD PTR v3$[rsp]
	movss	xmm1, DWORD PTR f3$[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv90[rsp], rax
	mov	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR f2$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	QWORD PTR tv128[rsp], rax
	mov	r8, QWORD PTR v1$[rsp]
	movss	xmm1, DWORD PTR f1$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@MAEBU10@@Z ; glm::operator*<float,0>
	mov	rcx, QWORD PTR tv128[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv90[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rsp]
	call	??$?HM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@0@Z ; glm::operator+<float,0>
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?KM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ; glm::operator/<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 26   : 
; 27   : 	}

	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ENDP ; glm::catmullRom<glm::tvec2<float,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_spline.cpp
_TEXT	SEGMENT
Error$ = 48
Result2$ = 72
Result3$ = 104
Result4$ = 152
$T6 = 180
$T7 = 184
$T8 = 192
$T9 = 200
$T10 = 208
$T11 = 216
$T12 = 220
$T13 = 232
$T14 = 244
$T15 = 256
$T16 = 268
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
tv67 = 336
tv72 = 344
tv77 = 352
tv89 = 360
tv95 = 368
tv133 = 376
tv147 = 384
tv154 = 392
tv161 = 400
?test@catmullRom@@YAHXZ PROC				; catmullRom::test

; 9    : 	{

$LN3:
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 10   : 		int Error(0);

	mov	DWORD PTR Error$[rsp], 0

; 11   : 
; 12   : 		glm::vec2 Result2 = glm::catmullRom(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T6[rsp], xmm0
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv67[rsp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv72[rsp], rax
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T9[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	QWORD PTR tv77[rsp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	lea	rcx, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv67[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv72[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv77[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result2$[rsp]
	call	??$catmullRom@U?$tvec2@M$0A@@glm@@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec2<float,0> >

; 13   : 			glm::vec2(0.0f, 0.0f),
; 14   : 			glm::vec2(1.0f, 0.0f),
; 15   : 			glm::vec2(1.0f, 1.0f),
; 16   : 			glm::vec2(0.0f, 1.0f), 0.5f);
; 17   : 
; 18   : 		glm::vec3 Result3 = glm::catmullRom(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T11[rsp], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv89[rsp], rax
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv95[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	mov	QWORD PTR tv133[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0?$tvec3@M$0A@@glm@@QEAA@MMM@Z	; glm::tvec3<float,0>::tvec3<float,0>
	lea	rcx, QWORD PTR $T11[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv89[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv95[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv133[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result3$[rsp]
	call	??$catmullRom@U?$tvec3@M$0A@@glm@@@glm@@YA?AU?$tvec3@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec3<float,0> >

; 19   : 			glm::vec3(0.0f, 0.0f, 0.0f), 
; 20   : 			glm::vec3(1.0f, 0.0f, 0.0f), 
; 21   : 			glm::vec3(1.0f, 1.0f, 0.0f), 
; 22   : 			glm::vec3(0.0f, 1.0f, 0.0f), 0.5f);
; 23   : 
; 24   : 		glm::vec4 Result4 = glm::catmullRom(

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR $T16[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv147[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv154[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T19[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	mov	QWORD PTR tv161[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T20[rsp]
	call	??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z	; glm::tvec4<float,0>::tvec4<float,0>
	lea	rcx, QWORD PTR $T16[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv147[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv154[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv161[rsp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR Result4$[rsp]
	call	??$catmullRom@U?$tvec4@M$0A@@glm@@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@000AEBM@Z ; glm::catmullRom<glm::tvec4<float,0> >

; 25   : 			glm::vec4(0.0f, 0.0f, 0.0f, 1.0f), 
; 26   : 			glm::vec4(1.0f, 0.0f, 0.0f, 1.0f), 
; 27   : 			glm::vec4(1.0f, 1.0f, 0.0f, 1.0f), 
; 28   : 			glm::vec4(0.0f, 1.0f, 0.0f, 1.0f), 0.5f);
; 29   : 
; 30   : 		return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 31   : 	}

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test@catmullRom@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	add	rsp, 416				; 000001a0H
	pop	rdi
	ret	0
?test@catmullRom@@YAHXZ ENDP				; catmullRom::test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 80
v$ = 88
scalar$ = 96
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 694  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 695  : 		return tvec4<T, P>(v) *= scalar;

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR v$[rsp]
	mov	ecx, 16
	rep movsb
	movss	xmm1, DWORD PTR scalar$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?XM@?$tvec4@M$0A@@glm@@QEAAAEAU01@M@Z ; glm::tvec4<float,0>::operator*=<float>
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 696  : 	}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec4@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 193  : 	{}

$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR c$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@MMMM@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 16
scalar$ = 24
??0?$tvec4@M$0A@@glm@@QEAA@M@Z PROC			; glm::tvec4<float,0>::tvec4<float,0>, COMDAT

; 188  : 	{}

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR scalar$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 188  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@M$0A@@glm@@QEAA@M@Z ENDP			; glm::tvec4<float,0>::tvec4<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v$ = 56
scalar$ = 64
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 541  : 	{

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 542  : 		return tvec2<T, P>(

	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR scalar$[rsp]
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR scalar$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 543  : 			v.x * scalar,
; 544  : 			v.y * scalar);
; 545  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?DM$0A@@glm@@YA?AU?$tvec2@M$0A@@0@AEBU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 57   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s1$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
END
