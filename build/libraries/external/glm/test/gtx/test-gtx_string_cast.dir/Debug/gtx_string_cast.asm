; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31329.0 

include listing.inc

INCLUDELIB MSVCRTD

CONST	SEGMENT
$SG69486 DB	'invalid argument', 00H
	ORG $+3
$SG69487 DB	'%s', 00H
	ORG $+1
$SG69491 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG69488 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.32.31326\include\xmemory', 00H
	ORG $+2
$SG69490 DB	00H, 00H
	ORG $+2
$SG61723 DB	'true', 00H
	ORG $+3
$SG69489 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '3', 00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG61725 DB	'false', 00H
	ORG $+6
$SG65349 DB	'vec2(1.000000, 2.000000)', 00H
	ORG $+7
$SG65350 DB	'vec3(1.000000, 2.000000, 3.000000)', 00H
	ORG $+5
$SG65351 DB	'vec4(1.000000, 2.000000, 3.000000, 4.000000)', 00H
	ORG $+3
$SG65352 DB	'dvec2(1.000000, 2.000000)', 00H
	ORG $+6
$SG65353 DB	'dvec3(1.000000, 2.000000, 3.000000)', 00H
	ORG $+4
$SG65354 DB	'dvec4(1.000000, 2.000000, 3.000000, 4.000000)', 00H
	ORG $+2
$SG65355 DB	'bvec2(false, true)', 00H
	ORG $+5
$SG65356 DB	'bvec3(false, true, false)', 00H
	ORG $+6
$SG65357 DB	'bvec4(false, true, false, true)', 00H
$SG65358 DB	'ivec2(1, 2)', 00H
	ORG $+4
$SG65359 DB	'ivec3(1, 2, 3)', 00H
	ORG $+1
$SG65360 DB	'ivec4(1, 2, 3, 4)', 00H
	ORG $+6
$SG65361 DB	'i8vec2(1, 2)', 00H
	ORG $+3
$SG65362 DB	'i8vec3(1, 2, 3)', 00H
$SG65363 DB	'i8vec4(1, 2, 3, 4)', 00H
	ORG $+5
$SG65364 DB	'i16vec2(1, 2)', 00H
	ORG $+2
$SG65365 DB	'i16vec3(1, 2, 3)', 00H
	ORG $+7
$SG65366 DB	'i16vec4(1, 2, 3, 4)', 00H
	ORG $+4
$SG65367 DB	'i64vec2(1, 2)', 00H
	ORG $+2
$SG65368 DB	'i64vec3(1, 2, 3)', 00H
	ORG $+7
$SG65369 DB	'i64vec4(1, 2, 3, 4)', 00H
	ORG $+4
$SG65487 DB	'mat2x2((1.000000, 2.000000), (3.000000, 4.000000))', 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	vsprintf_s
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?length@?$tvec2@M$0A@@glm@@SAHXZ		; glm::tvec2<float,0>::length
PUBLIC	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec2<float,0>::operator[]
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	?length@?$tvec2@F$0A@@glm@@SAHXZ		; glm::tvec2<short,0>::length
PUBLIC	??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z		; glm::tvec2<short,0>::operator[]
PUBLIC	?length@?$tvec4@M$0A@@glm@@SAHXZ		; glm::tvec4<float,0>::length
PUBLIC	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec4<float,0>::operator[]
PUBLIC	?length@?$tvec4@C$0A@@glm@@SAHXZ		; glm::tvec4<signed char,0>::length
PUBLIC	??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z		; glm::tvec4<signed char,0>::operator[]
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
PUBLIC	?value@?$prefix@M@detail@glm@@SAPEBDXZ		; glm::detail::prefix<float>::value
PUBLIC	?value@?$prefix@N@detail@glm@@SAPEBDXZ		; glm::detail::prefix<double>::value
PUBLIC	?value@?$prefix@C@detail@glm@@SAPEBDXZ		; glm::detail::prefix<signed char>::value
PUBLIC	?value@?$prefix@F@detail@glm@@SAPEBDXZ		; glm::detail::prefix<short>::value
PUBLIC	?value@?$prefix@H@detail@glm@@SAPEBDXZ		; glm::detail::prefix<int>::value
PUBLIC	?value@?$prefix@_J@detail@glm@@SAPEBDXZ		; glm::detail::prefix<__int64>::value
PUBLIC	?test_string_cast_vector@@YAHXZ			; test_string_cast_vector
PUBLIC	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z		; glm::tvec2<float,0>::tvec2<float,0><int,int>
PUBLIC	??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z ; glm::to_string<glm::tvec2,float,0>
PUBLIC	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?length@?$tvec3@M$0A@@glm@@SAHXZ		; glm::tvec3<float,0>::length
PUBLIC	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z		; glm::tvec3<float,0>::operator[]
PUBLIC	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
PUBLIC	??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z ; glm::to_string<glm::tvec3,float,0>
PUBLIC	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
PUBLIC	??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z ; glm::to_string<glm::tvec4,float,0>
PUBLIC	?length@?$tvec2@N$0A@@glm@@SAHXZ		; glm::tvec2<double,0>::length
PUBLIC	??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec2<double,0>::operator[]
PUBLIC	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z		; glm::tvec2<double,0>::tvec2<double,0><int,int>
PUBLIC	??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z ; glm::to_string<glm::tvec2,double,0>
PUBLIC	?length@?$tvec3@N$0A@@glm@@SAHXZ		; glm::tvec3<double,0>::length
PUBLIC	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec3<double,0>::operator[]
PUBLIC	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
PUBLIC	??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z ; glm::to_string<glm::tvec3,double,0>
PUBLIC	?length@?$tvec4@N$0A@@glm@@SAHXZ		; glm::tvec4<double,0>::length
PUBLIC	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z		; glm::tvec4<double,0>::operator[]
PUBLIC	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
PUBLIC	??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z ; glm::to_string<glm::tvec4,double,0>
PUBLIC	?length@?$tvec2@_N$0A@@glm@@SAHXZ		; glm::tvec2<bool,0>::length
PUBLIC	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec2<bool,0>::operator[]
PUBLIC	??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z		; glm::tvec2<bool,0>::tvec2<bool,0>
PUBLIC	??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z ; glm::to_string<glm::tvec2,bool,0>
PUBLIC	?length@?$tvec3@_N$0A@@glm@@SAHXZ		; glm::tvec3<bool,0>::length
PUBLIC	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec3<bool,0>::operator[]
PUBLIC	??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z		; glm::tvec3<bool,0>::tvec3<bool,0>
PUBLIC	??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z ; glm::to_string<glm::tvec3,bool,0>
PUBLIC	?length@?$tvec4@_N$0A@@glm@@SAHXZ		; glm::tvec4<bool,0>::length
PUBLIC	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z		; glm::tvec4<bool,0>::operator[]
PUBLIC	??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z		; glm::tvec4<bool,0>::tvec4<bool,0>
PUBLIC	??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z ; glm::to_string<glm::tvec4,bool,0>
PUBLIC	?length@?$tvec2@H$0A@@glm@@SAHXZ		; glm::tvec2<int,0>::length
PUBLIC	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec2<int,0>::operator[]
PUBLIC	??0?$tvec2@H$0A@@glm@@QEAA@HH@Z			; glm::tvec2<int,0>::tvec2<int,0>
PUBLIC	??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z ; glm::to_string<glm::tvec2,int,0>
PUBLIC	?length@?$tvec3@H$0A@@glm@@SAHXZ		; glm::tvec3<int,0>::length
PUBLIC	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec3<int,0>::operator[]
PUBLIC	??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<int,0>::tvec3<int,0>
PUBLIC	??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z ; glm::to_string<glm::tvec3,int,0>
PUBLIC	?length@?$tvec4@H$0A@@glm@@SAHXZ		; glm::tvec4<int,0>::length
PUBLIC	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z		; glm::tvec4<int,0>::operator[]
PUBLIC	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z		; glm::tvec4<int,0>::tvec4<int,0>
PUBLIC	??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z ; glm::to_string<glm::tvec4,int,0>
PUBLIC	?length@?$tvec2@C$0A@@glm@@SAHXZ		; glm::tvec2<signed char,0>::length
PUBLIC	??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z		; glm::tvec2<signed char,0>::operator[]
PUBLIC	??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z		; glm::tvec2<signed char,0>::tvec2<signed char,0><int,int>
PUBLIC	??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z ; glm::to_string<glm::tvec2,signed char,0>
PUBLIC	?length@?$tvec3@C$0A@@glm@@SAHXZ		; glm::tvec3<signed char,0>::length
PUBLIC	??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z		; glm::tvec3<signed char,0>::operator[]
PUBLIC	??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<signed char,0>::tvec3<signed char,0><int,int,int>
PUBLIC	??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z ; glm::to_string<glm::tvec3,signed char,0>
PUBLIC	??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<signed char,0>::tvec4<signed char,0><int,int,int,int>
PUBLIC	??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z ; glm::to_string<glm::tvec4,signed char,0>
PUBLIC	??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z		; glm::tvec2<short,0>::tvec2<short,0><int,int>
PUBLIC	??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z ; glm::to_string<glm::tvec2,short,0>
PUBLIC	?length@?$tvec3@F$0A@@glm@@SAHXZ		; glm::tvec3<short,0>::length
PUBLIC	??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z		; glm::tvec3<short,0>::operator[]
PUBLIC	??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<short,0>::tvec3<short,0><int,int,int>
PUBLIC	??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z ; glm::to_string<glm::tvec3,short,0>
PUBLIC	?length@?$tvec4@F$0A@@glm@@SAHXZ		; glm::tvec4<short,0>::length
PUBLIC	??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z		; glm::tvec4<short,0>::operator[]
PUBLIC	??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<short,0>::tvec4<short,0><int,int,int,int>
PUBLIC	??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z ; glm::to_string<glm::tvec4,short,0>
PUBLIC	?length@?$tvec2@_J$0A@@glm@@SAHXZ		; glm::tvec2<__int64,0>::length
PUBLIC	??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z		; glm::tvec2<__int64,0>::operator[]
PUBLIC	??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z		; glm::tvec2<__int64,0>::tvec2<__int64,0><int,int>
PUBLIC	??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z ; glm::to_string<glm::tvec2,__int64,0>
PUBLIC	?length@?$tvec3@_J$0A@@glm@@SAHXZ		; glm::tvec3<__int64,0>::length
PUBLIC	??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z		; glm::tvec3<__int64,0>::operator[]
PUBLIC	??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z		; glm::tvec3<__int64,0>::tvec3<__int64,0><int,int,int>
PUBLIC	??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z ; glm::to_string<glm::tvec3,__int64,0>
PUBLIC	?length@?$tvec4@_J$0A@@glm@@SAHXZ		; glm::tvec4<__int64,0>::length
PUBLIC	??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z		; glm::tvec4<__int64,0>::operator[]
PUBLIC	??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<__int64,0>::tvec4<__int64,0><int,int,int,int>
PUBLIC	??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z ; glm::to_string<glm::tvec4,__int64,0>
PUBLIC	?test_string_cast_matrix@@YAHXZ			; test_string_cast_matrix
PUBLIC	?length@?$tmat2x2@M$0A@@glm@@SAHXZ		; glm::tmat2x2<float,0>::length
PUBLIC	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
PUBLIC	??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z	; glm::tmat2x2<float,0>::tmat2x2<float,0><double,double,double,double>
PUBLIC	??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z ; glm::to_string<glm::tmat2x2,float,0>
PUBLIC	main
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,bool,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,bool,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,bool,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
PUBLIC	?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
PUBLIC	?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
PUBLIC	?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
PUBLIC	?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z	; std::_Voidify_iter<char * *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?value@?$literal@M$00@detail@glm@@SAPEBDXZ	; glm::detail::literal<float,1>::value
PUBLIC	?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ	; glm::detail::literal<__int64,0>::value
PUBLIC	?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ	; glm::detail::literal<short,0>::value
PUBLIC	?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ	; glm::detail::literal<signed char,0>::value
PUBLIC	?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ	; glm::detail::literal<int,0>::value
PUBLIC	?value@?$literal@N$00@detail@glm@@SAPEBDXZ	; glm::detail::literal<double,1>::value
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_02NJPGOMH@?$CFf@				; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_01LPLHEDKD@d@				; `string'
PUBLIC	??_C@_02FACHGKLJ@i8@				; `string'
PUBLIC	??_C@_03DECAIGLI@i16@				; `string'
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_03DFJPCLP@i64@				; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ ; `string'
PUBLIC	??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_0BN@EIANMPOG@?$CFsmat2x2?$CI?$CI?$CFs?0?5?$CFs?$CJ?0?5?$CI?$CFs?0?5?$CFs?$CJ?$CJ@ ; `string'
PUBLIC	??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BG@NPMDCMDP@bvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BC@PPIMMPCC@bvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0O@CNKKKNFJ@bvec2?$CI?$CFs?0?5?$CFs?$CJ@	; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ ; `string'
PUBLIC	??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp__wassert:PROC
EXTRN	strlen:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+119
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf_s DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$vsprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@F$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@F$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@C$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@C$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+404
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+107
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN13
	DD	imagerel $LN13+176
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+222
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+178
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+191
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+189
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DD imagerel $LN6
	DD	imagerel $LN6+296
	DD	imagerel $unwind$?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@M@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@M@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@N@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@N@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@C@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@C@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@F@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@F@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@H@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@H@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$prefix@_J@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$prefix@_J@detail@glm@@SAPEBDXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?test_string_cast_vector@@YAHXZ DD imagerel $LN87
	DD	imagerel $LN87+3810
	DD	imagerel $unwind$?test_string_cast_vector@@YAHXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA
$pdata$?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA DD imagerel ?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	imagerel ?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA+38
	DD	imagerel $unwind$?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@H$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@C$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@C$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@C$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@C$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@F$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@F$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@F$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@F$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec2@_J$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec2@_J$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec3@_J$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec3@_J$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tvec4@_J$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tvec4@_J$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?test_string_cast_matrix@@YAHXZ DD imagerel $LN7
	DD	imagerel $LN7+364
	DD	imagerel $unwind$?test_string_cast_matrix@@YAHXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA DD imagerel ?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA
	DD	imagerel ?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+332
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+386
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+442
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+320
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+374
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+428
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z DD imagerel $LN9
	DD	imagerel $LN9+165
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z DD imagerel $LN11
	DD	imagerel $LN11+223
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z DD imagerel $LN13
	DD	imagerel $LN13+281
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+308
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+358
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+408
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+310
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+408
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+310
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+359
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+408
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+308
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+360
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+412
	DD	imagerel $unwind$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z DD imagerel $LN6
	DD	imagerel $LN6+485
	DD	imagerel $unwind$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA DD imagerel ?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+259
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@M$00@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@M$00@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@?$literal@N$00@detail@glm@@SAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$?value@?$literal@N$00@detail@glm@@SAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
pdata	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
CONST	SEGMENT
??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g'
	DB	00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'2', 00H, 'x', 00H, '2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'3', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CNKKKNFJ@bvec2?$CI?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0O@CNKKKNFJ@bvec2?$CI?$CFs?0?5?$CFs?$CJ@ DB 'bvec2(%s, %s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PPIMMPCC@bvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BC@PPIMMPCC@bvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ DB 'bvec3(%s, %s'
	DB	', %s)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NPMDCMDP@bvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BG@NPMDCMDP@bvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ DB 'bve'
	DB	'c4(%s, %s, %s, %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@ DB '%svec2(%s, %s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ DB '%svec3(%'
	DB	's, %s, %s)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@ DB '%'
	DB	'svec4(%s, %s, %s, %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EIANMPOG@?$CFsmat2x2?$CI?$CI?$CFs?0?5?$CFs?$CJ?0?5?$CI?$CFs?0?5?$CFs?$CJ?$CJ@
CONST	SEGMENT
??_C@_0BN@EIANMPOG@?$CFsmat2x2?$CI?$CI?$CFs?0?5?$CFs?$CJ?0?5?$CI?$CFs?0?5?$CFs?$CJ?$CJ@ DB '%'
	DB	'smat2x2((%s, %s), (%s, %s))', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'4', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
CONST	SEGMENT
??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
CONST	SEGMENT
??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 's', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'k', 00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'y', 00H, 'B', 00H, 'i'
	DB	00H, 'r', 00H, 'd', 00H, '\', 00H, 'l', 00H, 'i', 00H, 'b', 00H
	DB	'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H, '\'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '\', 00H, 'g', 00H, 'l', 00H, 'm', 00H, '\'
	DB	00H, 'g', 00H, 'l', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'2', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DFJPCLP@i64@
CONST	SEGMENT
??_C@_03DFJPCLP@i64@ DB 'i64', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03DECAIGLI@i16@
CONST	SEGMENT
??_C@_03DECAIGLI@i16@ DB 'i16', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FACHGKLJ@i8@
CONST	SEGMENT
??_C@_02FACHGKLJ@i8@ DB 'i8', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LPLHEDKD@d@
CONST	SEGMENT
??_C@_01LPLHEDKD@d@ DB 'd', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?LabelTrue@detail@glm@@3PEBDEB DQ FLAT:$SG61723		; glm::detail::LabelTrue
?LabelFalse@detail@glm@@3PEBDEB DQ FLAT:$SG61725	; glm::detail::LabelFalse
_DATA	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf@ DB '%f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@N$00@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$literal@M$00@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	01ccH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	'=', 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z DD 033d19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z
	DD	0baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	0183H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	019H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z DD 033d19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z
	DD	0baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	014fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	'q', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	011bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	0e4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	017fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	09H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z
	DD	0aaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	014eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	'm', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	011dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	017fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	09H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z
	DD	0aaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	014eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	'm', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	011dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	017fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	09H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z DD 033d19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z
	DD	0baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	014dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	'i', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	011bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	0e4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z DD 020f01H
	DD	0700bb20fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z DD 020f01H
	DD	0700b720fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	0193H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	'Y', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z DD 033d19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z
	DD	0baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	015dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	0a9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	0127H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	0fcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	01a1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Y', 02H
	DB	02H
	DB	091H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z DD 033d19H
	DD	0180112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z
	DD	0baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcVarDesc DD 058H ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	0169H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	02H
	DB	0d9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z DD 033d19H
	DD	0160112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	035H
	DW	0131H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z DB 06H
	DB	00H
	DB	00H
	DB	09H, 02H
	DB	02H
	DB	'!', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z
	DD	imagerel $ip2state$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z DD 033d19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z
	DD	09aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcName$0 DB 046H ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+6
?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcVarDesc DD 048H ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
	DD	028H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcName$0
	ORG $+48
?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcFrameData DD 01H ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
	DD	00H
	DQ	FLAT:?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 020f19H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022f01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tmat2x2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_J$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_J$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_J$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@F$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@F$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@C$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@C$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@H$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@H$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@_N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@N$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec3@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z DD 010f01H
	DD	0700fH
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA
	DD	00H
	DD	05H
voltbl	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_string_cast_matrix@@YAHXZ
	DD	024H
	DD	0153H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?test_string_cast_vector@@YAHXZ
	DD	024H
	DD	0ec9H
voltbl	ENDS
xdata	SEGMENT
$unwind$?test_string_cast_vector@@YAHXZ DD 032c19H
	DD	019c0109H
	DD	07002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?test_string_cast_vector@@YAHXZ
	DD	0cdaH
$cppxdata$?test_string_cast_vector@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?test_string_cast_vector@@YAHXZ
	DD	imagerel $ip2state$?test_string_cast_vector@@YAHXZ
$stateUnwindMap$?test_string_cast_vector@@YAHXZ DB 02aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	0feH
	DD	imagerel ?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	0edH
	DB	02H
	DD	imagerel ?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	036H
	DD	imagerel ?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	0edH
	DB	03H
	DD	imagerel ?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	036H
	DD	imagerel ?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	0edH
	DB	04H
	DD	imagerel ?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	036H
	DD	imagerel ?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	0edH
	DB	05H
	DD	imagerel ?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	036H
	DD	imagerel ?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA
$ip2state$?test_string_cast_vector@@YAHXZ DB 'V'
	DB	00H
	DB	00H
	DB	0b2H
	DB	02H
	DB	085H, 02H
	DB	04H
	DB	0b1H, 02H
	DB	06H
	DB	'y', 02H
	DB	08H
	DB	091H, 02H
	DB	0aH
	DB	0b1H, 02H
	DB	0cH
	DB	0e2H
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'd'
	DB	0eH
	DB	'm', 02H
	DB	010H
	DB	081H, 02H
	DB	012H
	DB	0e2H
	DB	010H
	DB	01cH
	DB	0eH
	DB	01cH
	DB	00H
	DB	'v'
	DB	014H
	DB	091H, 02H
	DB	016H
	DB	0b1H, 02H
	DB	018H
	DB	0e2H
	DB	016H
	DB	01cH
	DB	014H
	DB	01cH
	DB	00H
	DB	'v'
	DB	01aH
	DB	091H, 02H
	DB	01cH
	DB	0b1H, 02H
	DB	01eH
	DB	0e2H
	DB	01cH
	DB	01cH
	DB	01aH
	DB	01cH
	DB	00H
	DB	'v'
	DB	' '
	DB	091H, 02H
	DB	'"'
	DB	0b1H, 02H
	DB	'$'
	DB	0e2H
	DB	'"'
	DB	01cH
	DB	' '
	DB	01cH
	DB	00H
	DB	'v'
	DB	'&'
	DB	091H, 02H
	DB	'('
	DB	0b1H, 02H
	DB	'*'
	DB	0e2H
	DB	'('
	DB	01cH
	DB	'&'
	DB	01cH
	DB	00H
$cppxdata$?test_string_cast_matrix@@YAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?test_string_cast_matrix@@YAHXZ
	DD	imagerel $ip2state$?test_string_cast_matrix@@YAHXZ
$stateUnwindMap$?test_string_cast_matrix@@YAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA
$unwind$?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?test_string_cast_matrix@@YAHXZ DD 032c19H
	DD	0240109H
	DD	07002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?test_string_cast_matrix@@YAHXZ
	DD	0112H
$ip2state$?test_string_cast_matrix@@YAHXZ DB 06H
	DB	00H
	DB	00H
	DB	0ddH, 02H
	DB	02H
	DB	0f0H
	DB	00H
$unwind$?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$main DD	020601H
	DD	070025206H
xdata	ENDS
CONST	SEGMENT
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$0 DB 041H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$1 DB 041H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$2 DB 042H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$3 DB 042H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$4 DB 043H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$5 DB 043H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$6 DB 04aH	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$7 DB 04aH	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$8 DB 04bH	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$9 DB 04bH	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$10 DB 04cH	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$11 DB 04cH	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$12 DB 04dH	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$13 DB 04dH	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$14 DB 04fH	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$15 DB 04fH	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$16 DB 050H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$17 DB 050H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$18 DB 044H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$19 DB 044H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$20 DB 045H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$21 DB 045H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$22 DB 046H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$23 DB 046H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$24 DB 044H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$25 DB 044H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$26 DB 045H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$27 DB 045H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$28 DB 046H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$29 DB 046H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$30 DB 044H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$31 DB 044H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$32 DB 045H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$33 DB 045H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$34 DB 046H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$35 DB 046H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$36 DB 044H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$37 DB 044H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$38 DB 045H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$39 DB 045H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$40 DB 046H	; test_string_cast_vector
	DB	031H
	DB	00H
	ORG $+1
?test_string_cast_vector@@YAHXZ$rtcName$41 DB 046H	; test_string_cast_vector
	DB	032H
	DB	00H
	ORG $+5
?test_string_cast_vector@@YAHXZ$rtcFrameData DD 02aH	; test_string_cast_vector
	DD	00H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcVarDesc
?test_string_cast_matrix@@YAHXZ$rtcName$0 DB 041H	; test_string_cast_matrix
	DB	031H
	DB	00H
	ORG $+5
?test_string_cast_vector@@YAHXZ$rtcVarDesc DD 0b28H	; test_string_cast_vector
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$41
	DD	0ae8H
	DD	020H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$40
	DD	0a88H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$39
	DD	0a58H
	DD	018H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$38
	DD	09f8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$37
	DD	09c8H
	DD	010H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$36
	DD	0968H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$35
	DD	0948H
	DD	08H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$34
	DD	08e8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$33
	DD	08c4H
	DD	06H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$32
	DD	0868H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$31
	DD	0844H
	DD	04H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$30
	DD	07e8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$29
	DD	07c4H
	DD	04H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$28
	DD	0768H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$27
	DD	0744H
	DD	03H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$26
	DD	06e8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$25
	DD	06c4H
	DD	02H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$24
	DD	0668H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$23
	DD	0638H
	DD	010H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$22
	DD	05d8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$21
	DD	05a8H
	DD	0cH
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$20
	DD	0548H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$19
	DD	0528H
	DD	08H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$18
	DD	04c8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$17
	DD	04a4H
	DD	04H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$16
	DD	0448H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$15
	DD	0424H
	DD	03H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$14
	DD	03c8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$13
	DD	03a4H
	DD	02H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$12
	DD	0348H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$11
	DD	0308H
	DD	020H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$10
	DD	02a8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$9
	DD	0278H
	DD	018H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$8
	DD	0218H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$7
	DD	01e8H
	DD	010H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$6
	DD	0188H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$5
	DD	0158H
	DD	010H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$4
	DD	0f8H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$3
	DD	0c8H
	DD	0cH
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$2
	DD	068H
	DD	028H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?test_string_cast_vector@@YAHXZ$rtcName$0
	ORG $+2016
?test_string_cast_matrix@@YAHXZ$rtcName$1 DB 041H	; test_string_cast_matrix
	DB	032H
	DB	00H
	ORG $+5
?test_string_cast_matrix@@YAHXZ$rtcFrameData DD 02H	; test_string_cast_matrix
	DD	00H
	DQ	FLAT:?test_string_cast_matrix@@YAHXZ$rtcVarDesc
	ORG $+8
?test_string_cast_matrix@@YAHXZ$rtcVarDesc DD 078H	; test_string_cast_matrix
	DD	028H
	DQ	FLAT:?test_string_cast_matrix@@YAHXZ$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?test_string_cast_matrix@@YAHXZ$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@_J@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@H@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@F@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@C@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@N@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@?$prefix@M@detail@glm@@SAPEBDXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	010fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DD 034d19H
	DD	02100122H
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	01078H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$0 DB 074H ; glm::detail::format
	DB	065H
	DB	078H
	DB	074H
	DB	00H
	ORG $+3
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$1 DB 06cH ; glm::detail::format
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcVarDesc DD 01058H ; glm::detail::format
	DD	08H
	DQ	FLAT:?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$1
	DD	040H
	DD	01000H
	DQ	FLAT:?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$0
	ORG $+96
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcFrameData DD 02H ; glm::detail::format
	DD	00H
	DQ	FLAT:?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020a19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022a01H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z DD 020f01H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 022001H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 022001H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	038H
	DB	00H
	ORG $+12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	082H
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022b11H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020a19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 020a01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 021401H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 021401H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 022001H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 020f01H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020a01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020f01H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@C$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec4@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@F$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@MM@Z DD 011201H
	DD	07012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tvec2@M$0A@@glm@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$tvec2@M$0A@@glm@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf_s DD 021901H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 021901H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 021901H
	DD	070155219H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
_TEXT	SEGMENT
tv70 = 32
_Left$ = 64
_Left_size$ = 72
_Right$ = 80
_Right_size$ = 88
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z PROC ; std::_Traits_equal<std::char_traits<char> >, COMDAT

; 576  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 577  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 578  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	mov	rax, QWORD PTR _Right_size$[rsp]
	cmp	QWORD PTR _Left_size$[rsp], rax
	jne	SHORT $LN3@Traits_equ
	mov	r8, QWORD PTR _Left_size$[rsp]
	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	call	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
	test	eax, eax
	jne	SHORT $LN3@Traits_equ
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@Traits_equ
$LN3@Traits_equ:
	mov	DWORD PTR tv70[rsp], 0
$LN4@Traits_equ:
	movzx	eax, BYTE PTR tv70[rsp]

; 579  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ENDP ; std::_Traits_equal<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rsp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 669  :         }
; 670  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 0

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 60   :         if (_Count > _Max_possible) {
; 61   :             _Throw_bad_array_new_length(); // multiply overflow
; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rsp]

; 66   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 67   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@N$00@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@N$00@detail@glm@@SAPEBDXZ PROC		; glm::detail::literal<double,1>::value, COMDAT

; 42   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%f";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02NJPGOMH@?$CFf@
	pop	rdi
	ret	0
?value@?$literal@N$00@detail@glm@@SAPEBDXZ ENDP		; glm::detail::literal<double,1>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ PROC	; glm::detail::literal<int,0>::value, COMDAT

; 36   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd@
	pop	rdi
	ret	0
?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ ENDP	; glm::detail::literal<int,0>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ PROC	; glm::detail::literal<signed char,0>::value, COMDAT

; 36   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd@
	pop	rdi
	ret	0
?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ ENDP	; glm::detail::literal<signed char,0>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ PROC	; glm::detail::literal<short,0>::value, COMDAT

; 36   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd@
	pop	rdi
	ret	0
?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ ENDP	; glm::detail::literal<short,0>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ PROC	; glm::detail::literal<__int64,0>::value, COMDAT

; 36   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd@
	pop	rdi
	ret	0
?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ ENDP	; glm::detail::literal<__int64,0>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$literal@M$00@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$literal@M$00@detail@glm@@SAPEBDXZ PROC		; glm::detail::literal<float,1>::value, COMDAT

; 42   : 		GLM_FUNC_QUALIFIER static char const * value() {return "%f";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02NJPGOMH@?$CFf@
	pop	rdi
	ret	0
?value@?$literal@M$00@detail@glm@@SAPEBDXZ ENDP		; glm::detail::literal<float,1>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rsp], rax

; 130  :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rsp]
	cmp	QWORD PTR _Block_size$[rsp], rax
	ja	SHORT $LN8@Allocate_m

; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rsp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:$SG69486
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG69487
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 135				; 00000087H
	lea	rdx, OFFSET FLAT:$SG69488
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 135				; 00000087H
	lea	r8, OFFSET FLAT:$SG69489
	lea	rdx, OFFSET FLAT:$SG69490
	lea	rcx, OFFSET FLAT:$SG69491
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 143  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z PROC	; std::_Voidify_iter<char * *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ENDP	; std::_Voidify_iter<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z ; std::_Voidify_iter<char * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax

; 150  :     }
; 151  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1341 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1342 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rsp]

; 1343 : }

	pop	rdi
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 123  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 124  :     if constexpr (is_pointer_v<_Iter>) {
; 125  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	rax, QWORD PTR _It$[rsp]

; 126  :     } else {
; 127  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 128  :     }
; 129  : }

	pop	rdi
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 972  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 973  :     // deallocate a plain pointer using an allocator
; 974  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 975  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 976  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 977  :     } else {
; 978  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 979  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 980  :     }
; 981  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv82 = 152
tv90 = 160
tv130 = 168
tv138 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call, COMDAT

; 243  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 244  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@M@detail@glm@@SAPEBDXZ	; glm::detail::prefix<float>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 245  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@M$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<float,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 246  : 			std::string FormatStr(detail::format("%smat2x2((%s, %s), (%s, %s))",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BN@EIANMPOG@?$CFsmat2x2?$CI?$CI?$CFs?0?5?$CFs?$CJ?0?5?$CI?$CFs?0?5?$CFs?$CJ?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 247  : 				PrefixStr,
; 248  : 				LiteralStr, LiteralStr,
; 249  : 				LiteralStr, LiteralStr));
; 250  : 
; 251  : 			return detail::format(FormatStr.c_str(),

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	mov	edx, 1
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv82[rsp], xmm0
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv90[rsp], xmm0
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	mov	edx, 1
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv130[rsp], xmm0
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ; glm::tmat2x2<float,0>::operator[]
	xor	edx, edx
	mov	rcx, rax
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv138[rsp], xmm0
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	movsd	xmm0, QWORD PTR tv82[rsp]
	movsd	QWORD PTR [rsp+40], xmm0
	movsd	xmm0, QWORD PTR tv90[rsp]
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR tv130[rsp]
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movsd	xmm0, QWORD PTR tv138[rsp]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 252  : 				x[0][0], x[0][1],
; 253  : 				x[1][0], x[1][1]);
; 254  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv82 = 152
tv90 = 160
tv130 = 168
tv138 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tmat2x2,float,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tmat2x2,float,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@_J@detail@glm@@SAPEBDXZ	; glm::detail::prefix<__int64>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<__int64,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec4<__int64,0>::operator[]
	mov	QWORD PTR tv77[rsp], rax
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec4<__int64,0>::operator[]
	mov	QWORD PTR tv81[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec4<__int64,0>::operator[]
	mov	QWORD PTR tv85[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec4<__int64,0>::operator[]
	mov	QWORD PTR tv89[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv77[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR tv81[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv85[rsp]
	mov	r9, QWORD PTR [rcx]
	mov	rcx, QWORD PTR tv89[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,__int64,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,__int64,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@_J@detail@glm@@SAPEBDXZ	; glm::detail::prefix<__int64>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<__int64,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec3<__int64,0>::operator[]
	mov	QWORD PTR tv76[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec3<__int64,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec3<__int64,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv76[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r9, QWORD PTR [rcx]
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,__int64,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,__int64,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@_J@detail@glm@@SAPEBDXZ	; glm::detail::prefix<__int64>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@_J$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<__int64,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec2<__int64,0>::operator[]
	mov	QWORD PTR tv75[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z	; glm::tvec2<__int64,0>::operator[]
	mov	QWORD PTR tv79[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv75[rsp]
	mov	r9, QWORD PTR [rcx]
	mov	rcx, QWORD PTR tv79[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,__int64,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,__int64,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 148
tv84 = 152
tv89 = 156
tv94 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,short,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@F@detail@glm@@SAPEBDXZ	; glm::detail::prefix<short>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<short,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec4<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv79[rsp], eax
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec4<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv84[rsp], eax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec4<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv89[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec4<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv94[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv79[rsp]
	mov	DWORD PTR [rsp+40], ecx
	mov	ecx, DWORD PTR tv84[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv89[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv94[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 148
tv84 = 152
tv89 = 156
tv94 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,short,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,short,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 132
tv83 = 136
tv88 = 140
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,short,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@F@detail@glm@@SAPEBDXZ	; glm::detail::prefix<short>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<short,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec3<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv78[rsp], eax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec3<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv83[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec3<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv88[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv78[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv83[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv88[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 132
tv83 = 136
tv88 = 140
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,short,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,short,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 132
tv82 = 136
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,short,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@F@detail@glm@@SAPEBDXZ	; glm::detail::prefix<short>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@F$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<short,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec2<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv77[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z	; glm::tvec2<short,0>::operator[]
	movsx	eax, WORD PTR [rax]
	mov	DWORD PTR tv82[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv77[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv82[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 132
tv82 = 136
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,short,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,short,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 148
tv84 = 152
tv89 = 156
tv94 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@C@detail@glm@@SAPEBDXZ	; glm::detail::prefix<signed char>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<signed char,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec4<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv79[rsp], eax
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec4<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv84[rsp], eax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec4<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv89[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec4<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv94[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv79[rsp]
	mov	DWORD PTR [rsp+40], ecx
	mov	ecx, DWORD PTR tv84[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv89[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv94[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 148
tv84 = 152
tv89 = 156
tv94 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,signed char,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,signed char,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 132
tv83 = 136
tv88 = 140
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@C@detail@glm@@SAPEBDXZ	; glm::detail::prefix<signed char>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<signed char,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec3<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv78[rsp], eax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec3<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv83[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec3<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv88[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv78[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	ecx, DWORD PTR tv83[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv88[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 132
tv83 = 136
tv88 = 140
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,signed char,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,signed char,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 132
tv82 = 136
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@C@detail@glm@@SAPEBDXZ	; glm::detail::prefix<signed char>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@C$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<signed char,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec2<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv77[rsp], eax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z	; glm::tvec2<signed char,0>::operator[]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv82[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	ecx, DWORD PTR tv77[rsp]
	mov	r9d, ecx
	mov	ecx, DWORD PTR tv82[rsp]
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 132
tv82 = 136
__$ArrayPad$ = 144
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,signed char,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,signed char,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,int,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@H@detail@glm@@SAPEBDXZ	; glm::detail::prefix<int>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<int,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv77[rsp], rax
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv81[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv85[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec4<int,0>::operator[]
	mov	QWORD PTR tv89[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv77[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rsp+40], ecx
	mov	rcx, QWORD PTR tv81[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, QWORD PTR tv85[rsp]
	mov	r9d, DWORD PTR [rcx]
	mov	rcx, QWORD PTR tv89[rsp]
	mov	r8d, DWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,int,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,int,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,int,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@H@detail@glm@@SAPEBDXZ	; glm::detail::prefix<int>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<int,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec3<int,0>::operator[]
	mov	QWORD PTR tv76[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec3<int,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec3<int,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv76[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r9d, DWORD PTR [rcx]
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8d, DWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,int,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,int,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,int,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@H@detail@glm@@SAPEBDXZ	; glm::detail::prefix<int>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@H$0A@@detail@glm@@SAPEBDXZ ; glm::detail::literal<int,0>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	QWORD PTR tv75[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z	; glm::tvec2<int,0>::operator[]
	mov	QWORD PTR tv79[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv75[rsp]
	mov	r9d, DWORD PTR [rcx]
	mov	rcx, QWORD PTR tv79[rsp]
	mov	r8d, DWORD PTR [rcx]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,int,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,int,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z
_TEXT	SEGMENT
$T1 = 48
tv70 = 56
tv77 = 64
tv84 = 72
tv91 = 80
__$ReturnUdt$ = 112
x$ = 120
?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,bool,0>::call, COMDAT

; 169  : 		{

$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	DWORD PTR $T1[rsp], 0

; 170  : 			return detail::format("bvec4(%s, %s, %s, %s)",

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@call
$LN3@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
$LN4@call:
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN5@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
	jmp	SHORT $LN6@call
$LN5@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
$LN6@call:
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN7@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv84[rsp], rax
	jmp	SHORT $LN8@call
$LN7@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv84[rsp], rax
$LN8@call:
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec4<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN9@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv91[rsp], rax
	jmp	SHORT $LN10@call
$LN9@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv91[rsp], rax
$LN10@call:
	mov	rax, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR tv77[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR tv84[rsp]
	mov	r8, QWORD PTR tv91[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BG@NPMDCMDP@bvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 171  : 				x[0] ? detail::LabelTrue : detail::LabelFalse,
; 172  : 				x[1] ? detail::LabelTrue : detail::LabelFalse,
; 173  : 				x[2] ? detail::LabelTrue : detail::LabelFalse,
; 174  : 				x[3] ? detail::LabelTrue : detail::LabelFalse);
; 175  : 		}

	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,bool,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z
_TEXT	SEGMENT
$T1 = 48
tv70 = 56
tv77 = 64
tv84 = 72
__$ReturnUdt$ = 96
x$ = 104
?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,bool,0>::call, COMDAT

; 157  : 		{

$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	DWORD PTR $T1[rsp], 0

; 158  : 			return detail::format("bvec3(%s, %s, %s)",

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@call
$LN3@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
$LN4@call:
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN5@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
	jmp	SHORT $LN6@call
$LN5@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
$LN6@call:
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec3<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN7@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv84[rsp], rax
	jmp	SHORT $LN8@call
$LN7@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv84[rsp], rax
$LN8@call:
	mov	rax, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR tv77[rsp]
	mov	r8, QWORD PTR tv84[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BC@PPIMMPCC@bvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 159  : 				x[0] ? detail::LabelTrue : detail::LabelFalse,
; 160  : 				x[1] ? detail::LabelTrue : detail::LabelFalse,
; 161  : 				x[2] ? detail::LabelTrue : detail::LabelFalse);
; 162  : 		}

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,bool,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
tv77 = 48
__$ReturnUdt$ = 80
x$ = 88
?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,bool,0>::call, COMDAT

; 146  : 		{

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	DWORD PTR $T1[rsp], 0

; 147  : 			return detail::format("bvec2(%s, %s)",

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@call
$LN3@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv70[rsp], rax
$LN4@call:
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z	; glm::tvec2<bool,0>::operator[]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN5@call
	mov	rax, QWORD PTR ?LabelTrue@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
	jmp	SHORT $LN6@call
$LN5@call:
	mov	rax, QWORD PTR ?LabelFalse@detail@glm@@3PEBDEB
	mov	QWORD PTR tv77[rsp], rax
$LN6@call:
	mov	r9, QWORD PTR tv70[rsp]
	mov	r8, QWORD PTR tv77[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0O@CNKKKNFJ@bvec2?$CI?$CFs?0?5?$CFs?$CJ@
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 148  : 				x[0] ? detail::LabelTrue : detail::LabelFalse,
; 149  : 				x[1] ? detail::LabelTrue : detail::LabelFalse);
; 150  : 		}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,bool,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,double,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@N@detail@glm@@SAPEBDXZ	; glm::detail::prefix<double>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@N$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<double,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec4<double,0>::operator[]
	mov	QWORD PTR tv77[rsp], rax
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec4<double,0>::operator[]
	mov	QWORD PTR tv81[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec4<double,0>::operator[]
	mov	QWORD PTR tv85[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec4<double,0>::operator[]
	mov	QWORD PTR tv89[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv77[rsp]
	movsd	xmm0, QWORD PTR [rcx]
	movsd	QWORD PTR [rsp+40], xmm0
	mov	rcx, QWORD PTR tv81[rsp]
	movsd	xmm0, QWORD PTR [rcx]
	movsd	QWORD PTR [rsp+32], xmm0
	mov	rcx, QWORD PTR tv85[rsp]
	movsd	xmm3, QWORD PTR [rcx]
	movq	r9, xmm3
	mov	rcx, QWORD PTR tv89[rsp]
	movsd	xmm2, QWORD PTR [rcx]
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv77 = 152
tv81 = 160
tv85 = 168
tv89 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,double,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,double,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,double,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@N@detail@glm@@SAPEBDXZ	; glm::detail::prefix<double>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@N$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<double,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec3<double,0>::operator[]
	mov	QWORD PTR tv76[rsp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec3<double,0>::operator[]
	mov	QWORD PTR tv80[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec3<double,0>::operator[]
	mov	QWORD PTR tv84[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv76[rsp]
	movsd	xmm0, QWORD PTR [rcx]
	movsd	QWORD PTR [rsp+32], xmm0
	mov	rcx, QWORD PTR tv80[rsp]
	movsd	xmm3, QWORD PTR [rcx]
	movq	r9, xmm3
	mov	rcx, QWORD PTR tv84[rsp]
	movsd	xmm2, QWORD PTR [rcx]
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv76 = 136
tv80 = 144
tv84 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,double,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,double,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,double,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@N@detail@glm@@SAPEBDXZ	; glm::detail::prefix<double>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@N$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<double,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec2<double,0>::operator[]
	mov	QWORD PTR tv75[rsp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z	; glm::tvec2<double,0>::operator[]
	mov	QWORD PTR tv79[rsp], rax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, QWORD PTR tv75[rsp]
	movsd	xmm3, QWORD PTR [rcx]
	movq	r9, xmm3
	mov	rcx, QWORD PTR tv79[rsp]
	movsd	xmm2, QWORD PTR [rcx]
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv75 = 136
tv79 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,double,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,double,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 152
tv84 = 160
tv89 = 168
tv94 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec4,float,0>::call, COMDAT

; 227  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 192				; 000000c0H
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 228  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@M@detail@glm@@SAPEBDXZ	; glm::detail::prefix<float>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 229  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@M$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<float,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 230  : 			std::string FormatStr(detail::format("%svec4(%s, %s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@CCFPNAMF@?$CFsvec4?$CI?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 231  : 				PrefixStr,
; 232  : 				LiteralStr, LiteralStr, LiteralStr, LiteralStr));
; 233  : 
; 234  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2], x[3]);

	mov	edx, 3
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv79[rsp], xmm0
	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv84[rsp], xmm0
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv89[rsp], xmm0
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec4<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv94[rsp], xmm0
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	movsd	xmm0, QWORD PTR tv79[rsp]
	movsd	QWORD PTR [rsp+40], xmm0
	movsd	xmm0, QWORD PTR tv84[rsp]
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR tv89[rsp]
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movsd	xmm0, QWORD PTR tv94[rsp]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 235  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 192				; 000000c0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 64
LiteralStr$ = 72
FormatStr$ = 88
$T4 = 144
tv79 = 152
tv84 = 160
tv89 = 168
tv94 = 176
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
x$ = 216
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec4,float,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec4,float,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 136
tv83 = 144
tv88 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec3,float,0>::call, COMDAT

; 212  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 213  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@M@detail@glm@@SAPEBDXZ	; glm::detail::prefix<float>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 214  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@M$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<float,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 215  : 			std::string FormatStr(detail::format("%svec3(%s, %s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BD@JLGANIFH@?$CFsvec3?$CI?$CFs?0?5?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 216  : 				PrefixStr,
; 217  : 				LiteralStr, LiteralStr, LiteralStr));
; 218  : 
; 219  : 			return detail::format(FormatStr.c_str(), x[0], x[1], x[2]);

	mov	edx, 2
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv78[rsp], xmm0
	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv83[rsp], xmm0
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec3<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv88[rsp], xmm0
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	movsd	xmm0, QWORD PTR tv78[rsp]
	movsd	QWORD PTR [rsp+32], xmm0
	movsd	xmm0, QWORD PTR tv83[rsp]
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movsd	xmm0, QWORD PTR tv88[rsp]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 220  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv78 = 136
tv83 = 144
tv88 = 152
__$ArrayPad$ = 160
__$ReturnUdt$ = 192
x$ = 200
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec3,float,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec3,float,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4810 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4811 :     return _Left._Equal(_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	call	?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal

; 4812 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z
_TEXT	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 136
tv82 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z PROC ; glm::detail::compute_to_string<glm::tvec2,float,0>::call, COMDAT

; 197  : 		{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 160				; 000000a0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T4[rsp], 0

; 198  : 			char const * PrefixStr = prefix<T>::value();

	call	?value@?$prefix@M@detail@glm@@SAPEBDXZ	; glm::detail::prefix<float>::value
	mov	QWORD PTR PrefixStr$[rsp], rax

; 199  : 			char const * LiteralStr = literal<T, std::numeric_limits<T>::is_iec559>::value();

	call	?value@?$literal@M$00@detail@glm@@SAPEBDXZ ; glm::detail::literal<float,1>::value
	mov	QWORD PTR LiteralStr$[rsp], rax

; 200  : 			std::string FormatStr(detail::format("%svec2(%s, %s)",

	mov	rax, QWORD PTR LiteralStr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR LiteralStr$[rsp]
	mov	r8, QWORD PTR PrefixStr$[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0P@GLDNIKHG@?$CFsvec2?$CI?$CFs?0?5?$CFs?$CJ@
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	npad	1

; 201  : 				PrefixStr,
; 202  : 				LiteralStr, LiteralStr));
; 203  : 
; 204  : 			return detail::format(FormatStr.c_str(), x[0], x[1]);

	mov	edx, 1
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv77[rsp], xmm0
	xor	edx, edx
	mov	rcx, QWORD PTR x$[rsp]
	call	??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z	; glm::tvec2<float,0>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv82[rsp], xmm0
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	movsd	xmm0, QWORD PTR tv77[rsp]
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movsd	xmm0, QWORD PTR tv82[rsp]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; glm::detail::format
	mov	eax, DWORD PTR $T4[rsp]
	or	eax, 1
	mov	DWORD PTR $T4[rsp], eax
	lea	rcx, QWORD PTR FormatStr$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 205  : 		}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z ENDP ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
PrefixStr$ = 48
LiteralStr$ = 56
FormatStr$ = 72
$T4 = 128
tv77 = 136
tv82 = 144
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
x$ = 184
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA PROC ; `glm::detail::compute_to_string<glm::tvec2,float,0>::call'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR FormatStr$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z@4HA ENDP ; `glm::detail::compute_to_string<glm::tvec2,float,0>::call'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rsp]
	lea	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 256  :     }
; 257  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rsp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rsp], 0
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rsp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rsp], rax

; 60   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 66   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 41   :     (max) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 42   :     // return larger of _Left and _Right
; 43   :     return _Left < _Right ? _Right : _Left;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@max
	mov	rax, QWORD PTR _Right$[rsp]
	mov	QWORD PTR tv65[rsp], rax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	rax, QWORD PTR _Left$[rsp]
	mov	QWORD PTR tv65[rsp], rax
$LN4@max:
	mov	rax, QWORD PTR tv65[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]

; 44   : }

	add	rsp, 16
	pop	rdi
	ret	0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4520 :     _CONSTEXPR20 basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 4521 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4522 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4523 :         if (_New_size > max_size()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	QWORD PTR _New_size$[rsp], rax
	jbe	SHORT $LN2@Reallocate

; 4524 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4525 :         }
; 4526 : 
; 4527 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR _Old_capacity$[rsp], rax

; 4528 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	rdx, QWORD PTR _New_size$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	QWORD PTR _New_capacity$[rsp], rax

; 4529 :         auto& _Al                     = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$[rsp], rax

; 4530 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rax, QWORD PTR _New_capacity$[rsp]
	inc	rax
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	QWORD PTR _New_ptr$[rsp], rax

; 4531 : 
; 4532 : #if _HAS_CXX20
; 4533 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 4534 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 4535 :         }
; 4536 : #endif // _HAS_CXX20
; 4537 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4538 :         _Mypair._Myval2._Mysize = _New_size;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_size$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 4539 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_capacity$[rsp]
	mov	QWORD PTR [rax+32], rcx

; 4540 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	r9, QWORD PTR <_Args_0>$[rsp]
	mov	r8, QWORD PTR _New_size$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR _Fn$[rsp]
	call	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4541 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	QWORD PTR _Old_capacity$[rsp], 16
	jb	SHORT $LN3@Reallocate

; 4542 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	rax, QWORD PTR _Old_capacity$[rsp]
	inc	rax
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4543 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 4544 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4545 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	lea	rdx, QWORD PTR _New_ptr$[rsp]
	mov	rcx, rax
	call	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4546 :         }
; 4547 : 
; 4548 :         return *this;

	mov	rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4549 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 3253 :             },

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3251 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	call	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3252 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	mov	BYTE PTR $T1[rsp], 0
	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _New_ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3253 :             },

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBA@QEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 960  : _NODISCARD constexpr _Size_type _Convert_size(const size_t _Len) noexcept(is_same_v<_Size_type, size_t>) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 961  :     // convert size_t to _Size_type, avoiding truncation
; 962  :     if constexpr (!is_same_v<_Size_type, size_t>) {
; 963  :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 964  :             _Xlength_error("size_t too long for _Size_type");
; 965  :         }
; 966  :     }
; 967  : 
; 968  :     return static_cast<_Size_type>(_Len);

	mov	rax, QWORD PTR _Len$[rsp]

; 969  : }

	pop	rdi
	ret	0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 294  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	pop	rdi
	ret	0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 142  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 143  : #if _HAS_CXX20
; 144  :     if (_STD is_constant_evaluated()) {
; 145  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 146  :     } else
; 147  : #endif // _HAS_CXX20
; 148  :     {
; 149  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR _Obj$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 150  :     }
; 151  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 253  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rsp]

; 254  : }

	pop	rdi
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 266  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rsp]

; 267  : }

	pop	rdi
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1370 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rsp], rax

; 1058 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1059 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _New_proxy$[rsp]
	mov	QWORD PTR [rax], rcx

; 1060 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx

; 1061 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1334 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1335 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1336 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1337 :         }
; 1338 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1320 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Al_$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 1321 :         // create a new _Container_proxy pointing at _Mycont
; 1322 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 1323 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rsp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1324 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1325 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 984  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 985  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 986  :     using _Ty = typename _Alloc::value_type;
; 987  :     _Ptr->~_Ty();
; 988  :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 989  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_string_cast.cpp
_TEXT	SEGMENT
Error$ = 32
main	PROC

; 120  : {

$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H

; 121  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 122  : 	Error += test_string_cast_vector();

	call	?test_string_cast_vector@@YAHXZ		; test_string_cast_vector
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 123  : 	Error += test_string_cast_matrix();

	call	?test_string_cast_matrix@@YAHXZ		; test_string_cast_matrix
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax

; 124  : 
; 125  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 126  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z PROC ; glm::to_string<glm::tmat2x2,float,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utmat2x2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tmat2x2,float,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z ENDP ; glm::to_string<glm::tmat2x2,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
x1$ = 72
y1$ = 80
x2$ = 88
y2$ = 96
??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z PROC	; glm::tmat2x2<float,0>::tmat2x2<float,0><double,double,double,double>, COMDAT

; 76   : 	{

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	lea	r9, OFFSET FLAT:??0?$tvec2@M$0A@@glm@@QEAA@XZ ; glm::tvec2<float,0>::tvec2<float,0>
	mov	r8d, 2
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 77   : 		this->value[0] = col_type(static_cast<T>(x1), value_type(y1));

	mov	rax, QWORD PTR y1$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR x1$[rsp]
	cvtsd2ss xmm1, QWORD PTR [rax]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 78   : 		this->value[1] = col_type(static_cast<T>(x2), value_type(y2));

	mov	rax, QWORD PTR y2$[rsp]
	cvtsd2ss xmm0, QWORD PTR [rax]
	mov	rax, QWORD PTR x2$[rsp]
	cvtsd2ss xmm1, QWORD PTR [rax]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$tvec2@M$0A@@glm@@QEAA@MM@Z		; glm::tvec2<float,0>::tvec2<float,0>
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rdx+rcx], rax

; 79   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z ENDP	; glm::tmat2x2<float,0>::tmat2x2<float,0><double,double,double,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z PROC ; glm::tmat2x2<float,0>::operator[], COMDAT

; 166  : 	{

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 167  : 		assert(i < this->length());

	call	?length@?$tmat2x2@M$0A@@glm@@SAHXZ	; glm::tmat2x2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN3@operator
	mov	r8d, 167				; 000000a7H
	lea	rdx, OFFSET FLAT:??_C@_1LK@KMFBDMLF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CG@KOFHLCJL@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:

; 168  : 		return this->value[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 169  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tmat2x2@M$0A@@glm@@QEBAAEBU?$tvec2@M$0A@@1@H@Z ENDP ; glm::tmat2x2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$tmat2x2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tmat2x2@M$0A@@glm@@SAHXZ PROC			; glm::tmat2x2<float,0>::length, COMDAT

; 72   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tmat2x2@M$0A@@glm@@SAHXZ ENDP			; glm::tmat2x2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_string_cast.cpp
_TEXT	SEGMENT
Error$ = 48
A1$ = 72
A2$ = 120
$T5 = 168
$T6 = 216
$T7 = 224
$T8 = 232
$T9 = 240
$T10 = 248
tv87 = 256
tv83 = 264
__$ArrayPad$ = 272
?test_string_cast_matrix@@YAHXZ PROC			; test_string_cast_matrix

; 109  : {

$LN7:
	push	rdi
	sub	rsp, 288				; 00000120H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 110  : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 111  : 	
; 112  : 	glm::mat2x2 A1(1.000000, 2.000000, 3.000000, 4.000000);

	movsd	xmm0, QWORD PTR __real@4010000000000000
	movsd	QWORD PTR $T6[rsp], xmm0
	movsd	xmm0, QWORD PTR __real@4008000000000000
	movsd	QWORD PTR $T7[rsp], xmm0
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR $T8[rsp], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR $T9[rsp], xmm0
	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T7[rsp]
	lea	r8, QWORD PTR $T8[rsp]
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR A1$[rsp]
	call	??$?0NNNN@?$tmat2x2@M$0A@@glm@@QEAA@AEBN000@Z ; glm::tmat2x2<float,0>::tmat2x2<float,0><double,double,double,double>

; 113  : 	std::string A2 = glm::to_string(A1);

	lea	rdx, QWORD PTR A1$[rsp]
	lea	rcx, QWORD PTR A2$[rsp]
	call	??$to_string@Utmat2x2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tmat2x2@M$0A@@0@@Z ; glm::to_string<glm::tmat2x2,float,0>
	npad	1

; 114  : 	Error += A2 != std::string("mat2x2((1.000000, 2.000000), (3.000000, 4.000000))") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65487
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv87[rsp], rax
	mov	rdx, QWORD PTR tv87[rsp]
	lea	rcx, QWORD PTR A2$[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_strin
	mov	DWORD PTR tv83[rsp], 1
	jmp	SHORT $LN4@test_strin
$LN3@test_strin:
	mov	DWORD PTR tv83[rsp], 0
$LN4@test_strin:
	mov	eax, DWORD PTR tv83[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 115  : 
; 116  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]
	mov	DWORD PTR $T10[rsp], eax
	lea	rcx, QWORD PTR A2$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T10[rsp]

; 117  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_string_cast_matrix@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 288				; 00000120H
	pop	rdi
	ret	0
?test_string_cast_matrix@@YAHXZ ENDP			; test_string_cast_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$ = 72
A2$ = 120
$T5 = 168
$T6 = 216
$T7 = 224
$T8 = 232
$T9 = 240
$T10 = 248
tv87 = 256
tv83 = 264
__$ArrayPad$ = 272
?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA PROC	; `test_string_cast_matrix'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR A2$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??test_string_cast_matrix@@YAHXZ@4HA ENDP	; `test_string_cast_matrix'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,__int64,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,__int64,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<__int64,0>::tvec4<__int64,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	movsxd	rax, DWORD PTR a$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 201  : 		y(static_cast<T>(b)),

	movsxd	rax, DWORD PTR b$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 202  : 		z(static_cast<T>(c)),

	movsxd	rax, DWORD PTR c$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 203  : 		w(static_cast<T>(d))

	movsxd	rax, DWORD PTR d$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<__int64,0>::tvec4<__int64,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z PROC		; glm::tvec4<__int64,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_J$0A@@glm@@SAHXZ	; glm::tvec4<__int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_J$0A@@glm@@QEBAAEB_JH@Z ENDP		; glm::tvec4<__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_J$0A@@glm@@SAHXZ PROC			; glm::tvec4<__int64,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_J$0A@@glm@@SAHXZ ENDP			; glm::tvec4<__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,__int64,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,__int64,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<__int64,0>::tvec3<__int64,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	movsxd	rax, DWORD PTR a$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 78   : 		y(static_cast<T>(b)),

	movsxd	rax, DWORD PTR b$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 79   : 		z(static_cast<T>(c))

	movsxd	rax, DWORD PTR c$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<__int64,0>::tvec3<__int64,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z PROC		; glm::tvec3<__int64,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_J$0A@@glm@@SAHXZ	; glm::tvec3<__int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_J$0A@@glm@@QEBAAEB_JH@Z ENDP		; glm::tvec3<__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_J$0A@@glm@@SAHXZ PROC			; glm::tvec3<__int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_J$0A@@glm@@SAHXZ ENDP			; glm::tvec3<__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,__int64,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@_J$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,__int64,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<__int64,0>::tvec2<__int64,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	movsxd	rax, DWORD PTR a$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 65   : 		, y(static_cast<T>(b))

	movsxd	rax, DWORD PTR b$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<__int64,0>::tvec2<__int64,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z PROC		; glm::tvec2<__int64,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_J$0A@@glm@@SAHXZ	; glm::tvec2<__int64,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_J$0A@@glm@@QEBAAEB_JH@Z ENDP		; glm::tvec2<__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_J$0A@@glm@@SAHXZ PROC			; glm::tvec2<__int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_J$0A@@glm@@SAHXZ ENDP			; glm::tvec2<__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,short,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,short,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,short,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<short,0>::tvec4<short,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR a$[rsp]
	mov	WORD PTR [rax], cx

; 201  : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR b$[rsp]
	mov	WORD PTR [rax+2], cx

; 202  : 		z(static_cast<T>(c)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR c$[rsp]
	mov	WORD PTR [rax+4], cx

; 203  : 		w(static_cast<T>(d))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR d$[rsp]
	mov	WORD PTR [rax+6], cx

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<short,0>::tvec4<short,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z PROC			; glm::tvec4<short,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@F$0A@@glm@@SAHXZ	; glm::tvec4<short,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@F$0A@@glm@@QEBAAEBFH@Z ENDP			; glm::tvec4<short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@F$0A@@glm@@SAHXZ PROC			; glm::tvec4<short,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@F$0A@@glm@@SAHXZ ENDP			; glm::tvec4<short,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,short,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,short,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,short,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<short,0>::tvec3<short,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR a$[rsp]
	mov	WORD PTR [rax], cx

; 78   : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR b$[rsp]
	mov	WORD PTR [rax+2], cx

; 79   : 		z(static_cast<T>(c))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR c$[rsp]
	mov	WORD PTR [rax+4], cx

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<short,0>::tvec3<short,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z PROC			; glm::tvec3<short,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@F$0A@@glm@@SAHXZ	; glm::tvec3<short,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@F$0A@@glm@@QEBAAEBFH@Z ENDP			; glm::tvec3<short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@F$0A@@glm@@SAHXZ PROC			; glm::tvec3<short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@F$0A@@glm@@SAHXZ ENDP			; glm::tvec3<short,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,short,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@F$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,short,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,short,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<short,0>::tvec2<short,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR a$[rsp]
	mov	WORD PTR [rax], cx

; 65   : 		, y(static_cast<T>(b))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, WORD PTR b$[rsp]
	mov	WORD PTR [rax+2], cx

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<short,0>::tvec2<short,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,signed char,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,signed char,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,signed char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<signed char,0>::tvec4<signed char,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl

; 201  : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl

; 202  : 		z(static_cast<T>(c)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR c$[rsp]
	mov	BYTE PTR [rax+2], cl

; 203  : 		w(static_cast<T>(d))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR d$[rsp]
	mov	BYTE PTR [rax+3], cl

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<signed char,0>::tvec4<signed char,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,signed char,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,signed char,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,signed char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<signed char,0>::tvec3<signed char,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl

; 78   : 		y(static_cast<T>(b)),

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl

; 79   : 		z(static_cast<T>(c))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR c$[rsp]
	mov	BYTE PTR [rax+2], cl

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<signed char,0>::tvec3<signed char,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z PROC			; glm::tvec3<signed char,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@C$0A@@glm@@SAHXZ	; glm::tvec3<signed char,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@C$0A@@glm@@QEBAAEBCH@Z ENDP			; glm::tvec3<signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@C$0A@@glm@@SAHXZ PROC			; glm::tvec3<signed char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@C$0A@@glm@@SAHXZ ENDP			; glm::tvec3<signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,signed char,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@C$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,signed char,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,signed char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<signed char,0>::tvec2<signed char,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl

; 65   : 		, y(static_cast<T>(b))

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<signed char,0>::tvec2<signed char,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z PROC			; glm::tvec2<signed char,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@C$0A@@glm@@SAHXZ	; glm::tvec2<signed char,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@C$0A@@glm@@QEBAAEBCH@Z ENDP			; glm::tvec2<signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@C$0A@@glm@@SAHXZ PROC			; glm::tvec2<signed char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@C$0A@@glm@@SAHXZ ENDP			; glm::tvec2<signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,int,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,int,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z PROC			; glm::tvec4<int,0>::tvec4<int,0>, COMDAT

; 193  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR d$[rsp]
	mov	DWORD PTR [rax+12], ecx

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z ENDP			; glm::tvec4<int,0>::tvec4<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec4<int,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@H$0A@@glm@@SAHXZ	; glm::tvec4<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec4<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@H$0A@@glm@@SAHXZ PROC			; glm::tvec4<int,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@H$0A@@glm@@SAHXZ ENDP			; glm::tvec4<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,int,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,int,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z PROC			; glm::tvec3<int,0>::tvec3<int,0>, COMDAT

; 70   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR a$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR b$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR c$[rsp]
	mov	DWORD PTR [rax+8], ecx

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z ENDP			; glm::tvec3<int,0>::tvec3<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec3<int,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@H$0A@@glm@@SAHXZ	; glm::tvec3<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec3<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@H$0A@@glm@@SAHXZ PROC			; glm::tvec3<int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@H$0A@@glm@@SAHXZ ENDP			; glm::tvec3<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,int,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@H$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,int,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@H$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@H$0A@@glm@@QEAA@HH@Z PROC			; glm::tvec2<int,0>::tvec2<int,0>, COMDAT

; 57   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s1$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR s2$[rsp]
	mov	DWORD PTR [rax+4], ecx

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@H$0A@@glm@@QEAA@HH@Z ENDP			; glm::tvec2<int,0>::tvec2<int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z PROC			; glm::tvec2<int,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@H$0A@@glm@@SAHXZ	; glm::tvec2<int,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@H$0A@@glm@@QEBAAEBHH@Z ENDP			; glm::tvec2<int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@H$0A@@glm@@SAHXZ PROC			; glm::tvec2<int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@H$0A@@glm@@SAHXZ ENDP			; glm::tvec2<int,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,bool,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,bool,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z PROC		; glm::tvec4<bool,0>::tvec4<bool,0>, COMDAT

; 193  : 	{}

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	BYTE PTR [rsp+24], r8b
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 192  : 		: x(a), y(b), z(c), w(d)

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR c$[rsp]
	mov	BYTE PTR [rax+2], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR d$[rsp]
	mov	BYTE PTR [rax+3], cl

; 193  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z ENDP		; glm::tvec4<bool,0>::tvec4<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec4<bool,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@_N$0A@@glm@@SAHXZ	; glm::tvec4<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec4<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@_N$0A@@glm@@SAHXZ PROC			; glm::tvec4<bool,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,bool,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,bool,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z PROC			; glm::tvec3<bool,0>::tvec3<bool,0>, COMDAT

; 70   : 	{}

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	BYTE PTR [rsp+24], r8b
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 69   : 		: x(a), y(b), z(c)

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR a$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR b$[rsp]
	mov	BYTE PTR [rax+1], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR c$[rsp]
	mov	BYTE PTR [rax+2], cl

; 70   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z ENDP			; glm::tvec3<bool,0>::tvec3<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec3<bool,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@_N$0A@@glm@@SAHXZ	; glm::tvec3<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec3<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@_N$0A@@glm@@SAHXZ PROC			; glm::tvec3<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec3<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,bool,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@_N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,bool,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z PROC			; glm::tvec2<bool,0>::tvec2<bool,0>, COMDAT

; 57   : 	{}

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR s1$[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR s2$[rsp]
	mov	BYTE PTR [rax+1], cl

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z ENDP			; glm::tvec2<bool,0>::tvec2<bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z PROC		; glm::tvec2<bool,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@_N$0A@@glm@@SAHXZ	; glm::tvec2<bool,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@_N$0A@@glm@@QEBAAEB_NH@Z ENDP		; glm::tvec2<bool,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@_N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@_N$0A@@glm@@SAHXZ PROC			; glm::tvec2<bool,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@_N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<bool,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,double,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,double,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2sd xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2sd xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+24], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec4<double,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@N$0A@@glm@@SAHXZ	; glm::tvec4<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec4<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@N$0A@@glm@@SAHXZ PROC			; glm::tvec4<double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@N$0A@@glm@@SAHXZ ENDP			; glm::tvec4<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,double,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,double,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2sd xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+16], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<double,0>::tvec3<double,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec3<double,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@N$0A@@glm@@SAHXZ	; glm::tvec3<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec3<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@N$0A@@glm@@SAHXZ PROC			; glm::tvec3<double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@N$0A@@glm@@SAHXZ ENDP			; glm::tvec3<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,double,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@N$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,double,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,double,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<double,0>::tvec2<double,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2sd xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2sd xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movsd	QWORD PTR [rax+8], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<double,0>::tvec2<double,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z PROC			; glm::tvec2<double,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@N$0A@@glm@@SAHXZ	; glm::tvec2<double,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@N$0A@@glm@@QEBAAEBNH@Z ENDP			; glm::tvec2<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@N$0A@@glm@@SAHXZ PROC			; glm::tvec2<double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@N$0A@@glm@@SAHXZ ENDP			; glm::tvec2<double,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z PROC ; glm::to_string<glm::tvec4,float,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec4@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec4,float,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z ENDP ; glm::to_string<glm::tvec4,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
d$ = 48
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z PROC		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>, COMDAT

; 204  : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 200  : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 201  : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 202  : 		z(static_cast<T>(c)),

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 203  : 		w(static_cast<T>(d))

	cvtsi2ss xmm0, DWORD PTR d$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0

; 204  : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ENDP		; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z PROC ; glm::to_string<glm::tvec3,float,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec3@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec3,float,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z ENDP ; glm::to_string<glm::tvec3,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
c$ = 40
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z PROC		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>, COMDAT

; 80   : 	{}

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 77   : 		x(static_cast<T>(a)),

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 78   : 		y(static_cast<T>(b)),

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 79   : 		z(static_cast<T>(c))

	cvtsi2ss xmm0, DWORD PTR c$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 80   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z ENDP		; glm::tvec3<float,0>::tvec3<float,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec3<float,0>::operator[], COMDAT

; 151  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 152  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec3@M$0A@@glm@@SAHXZ	; glm::tvec3<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 152				; 00000098H
	lea	rdx, OFFSET FLAT:??_C@_1LG@MEJFBKPC@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 153  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 154  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec3@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec3<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$tvec3@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec3@M$0A@@glm@@SAHXZ PROC			; glm::tvec3<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 3;}

$LN3:
	push	rdi
	mov	eax, 3
	pop	rdi
	ret	0
?length@?$tvec3@M$0A@@glm@@SAHXZ ENDP			; glm::tvec3<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
tv69 = 32
_Left$ = 64
_Right$ = 72
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4840 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4841 :     return !(_Left == _Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Left$[rsp]
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv69[rsp]

; 4842 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
x$ = 72
??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z PROC ; glm::to_string<glm::tvec2,float,0>, COMDAT

; 454  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	DWORD PTR $T1[rsp], 0

; 455  : 	return detail::compute_to_string<matType, T, P>::call(x);

	mov	rdx, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?call@?$compute_to_string@Utvec2@glm@@M$0A@@detail@glm@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@3@@Z ; glm::detail::compute_to_string<glm::tvec2,float,0>::call
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 456  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z ENDP ; glm::to_string<glm::tvec2,float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 16
a$ = 24
b$ = 32
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z PROC		; glm::tvec2<float,0>::tvec2<float,0><int,int>, COMDAT

; 66   : 	{}

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 64   : 		: x(static_cast<T>(a))

	cvtsi2ss xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 65   : 		, y(static_cast<T>(b))

	cvtsi2ss xmm0, DWORD PTR b$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 66   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z ENDP		; glm::tvec2<float,0>::tvec2<float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\test\gtx\gtx_string_cast.cpp
_TEXT	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?test_string_cast_vector@@YAHXZ PROC			; test_string_cast_vector

; 6    : {

$LN87:
	push	rdi
	sub	rsp, 3296				; 00000ce0H
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 812				; 0000032cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 7    : 	int Error = 0;

	mov	DWORD PTR Error$[rsp], 0

; 8    : 
; 9    : 	{
; 10   : 		glm::vec2 A1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR A1$45[rsp]
	call	??$?0HH@?$tvec2@M$0A@@glm@@QEAA@HH@Z	; glm::tvec2<float,0>::tvec2<float,0><int,int>

; 11   : 		std::string A2 = glm::to_string(A1);

	lea	rdx, QWORD PTR A1$45[rsp]
	lea	rcx, QWORD PTR A2$46[rsp]
	call	??$to_string@Utvec2@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@M$0A@@0@@Z ; glm::to_string<glm::tvec2,float,0>
	npad	1

; 12   : 		Error += A2 != std::string("vec2(1.000000, 2.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65349
	lea	rcx, QWORD PTR $T47[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv582[rsp], rax
	mov	rdx, QWORD PTR tv582[rsp]
	lea	rcx, QWORD PTR A2$46[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@test_strin
	mov	DWORD PTR tv81[rsp], 1
	jmp	SHORT $LN4@test_strin
$LN3@test_strin:
	mov	DWORD PTR tv81[rsp], 0
$LN4@test_strin:
	mov	eax, DWORD PTR tv81[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T47[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 13   : 	
; 14   : 		glm::vec3 B1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR B1$48[rsp]
	call	??$?0HHH@?$tvec3@M$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<float,0>::tvec3<float,0><int,int,int>

; 15   : 		std::string B2 = glm::to_string(B1);

	lea	rdx, QWORD PTR B1$48[rsp]
	lea	rcx, QWORD PTR B2$49[rsp]
	call	??$to_string@Utvec3@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@M$0A@@0@@Z ; glm::to_string<glm::tvec3,float,0>
	npad	1

; 16   : 		Error += B2 != std::string("vec3(1.000000, 2.000000, 3.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65350
	lea	rcx, QWORD PTR $T50[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv585[rsp], rax
	mov	rdx, QWORD PTR tv585[rsp]
	lea	rcx, QWORD PTR B2$49[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@test_strin
	mov	DWORD PTR tv133[rsp], 1
	jmp	SHORT $LN6@test_strin
$LN5@test_strin:
	mov	DWORD PTR tv133[rsp], 0
$LN6@test_strin:
	mov	eax, DWORD PTR tv133[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T50[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 17   : 
; 18   : 		glm::vec4 C1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR C1$51[rsp]
	call	??$?0HHHH@?$tvec4@M$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<float,0>::tvec4<float,0><int,int,int,int>

; 19   : 		std::string C2 = glm::to_string(C1);

	lea	rdx, QWORD PTR C1$51[rsp]
	lea	rcx, QWORD PTR C2$52[rsp]
	call	??$to_string@Utvec4@glm@@M$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@M$0A@@0@@Z ; glm::to_string<glm::tvec4,float,0>
	npad	1

; 20   : 		Error += C2 != std::string("vec4(1.000000, 2.000000, 3.000000, 4.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65351
	lea	rcx, QWORD PTR $T53[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv588[rsp], rax
	mov	rdx, QWORD PTR tv588[rsp]
	lea	rcx, QWORD PTR C2$52[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@test_strin
	mov	DWORD PTR tv154[rsp], 1
	jmp	SHORT $LN8@test_strin
$LN7@test_strin:
	mov	DWORD PTR tv154[rsp], 0
$LN8@test_strin:
	mov	eax, DWORD PTR tv154[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T53[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 21   : 	
; 22   : 		glm::dvec2 J1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR J1$54[rsp]
	call	??$?0HH@?$tvec2@N$0A@@glm@@QEAA@HH@Z	; glm::tvec2<double,0>::tvec2<double,0><int,int>

; 23   : 		std::string J2 = glm::to_string(J1);

	lea	rdx, QWORD PTR J1$54[rsp]
	lea	rcx, QWORD PTR J2$55[rsp]
	call	??$to_string@Utvec2@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@N$0A@@0@@Z ; glm::to_string<glm::tvec2,double,0>
	npad	1

; 24   : 		Error += J2 != std::string("dvec2(1.000000, 2.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65352
	lea	rcx, QWORD PTR $T56[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv591[rsp], rax
	mov	rdx, QWORD PTR tv591[rsp]
	lea	rcx, QWORD PTR J2$55[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@test_strin
	mov	DWORD PTR tv173[rsp], 1
	jmp	SHORT $LN10@test_strin
$LN9@test_strin:
	mov	DWORD PTR tv173[rsp], 0
$LN10@test_strin:
	mov	eax, DWORD PTR tv173[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T56[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 25   : 	
; 26   : 		glm::dvec3 K1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR K1$57[rsp]
	call	??$?0HHH@?$tvec3@N$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<double,0>::tvec3<double,0><int,int,int>

; 27   : 		std::string K2 = glm::to_string(K1);

	lea	rdx, QWORD PTR K1$57[rsp]
	lea	rcx, QWORD PTR K2$58[rsp]
	call	??$to_string@Utvec3@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@N$0A@@0@@Z ; glm::to_string<glm::tvec3,double,0>
	npad	1

; 28   : 		Error += K2 != std::string("dvec3(1.000000, 2.000000, 3.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65353
	lea	rcx, QWORD PTR $T59[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv594[rsp], rax
	mov	rdx, QWORD PTR tv594[rsp]
	lea	rcx, QWORD PTR K2$58[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@test_strin
	mov	DWORD PTR tv193[rsp], 1
	jmp	SHORT $LN12@test_strin
$LN11@test_strin:
	mov	DWORD PTR tv193[rsp], 0
$LN12@test_strin:
	mov	eax, DWORD PTR tv193[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T59[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 29   : 	
; 30   : 		glm::dvec4 L1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR L1$60[rsp]
	call	??$?0HHHH@?$tvec4@N$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<double,0>::tvec4<double,0><int,int,int,int>

; 31   : 		std::string L2 = glm::to_string(L1);

	lea	rdx, QWORD PTR L1$60[rsp]
	lea	rcx, QWORD PTR L2$61[rsp]
	call	??$to_string@Utvec4@glm@@N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@N$0A@@0@@Z ; glm::to_string<glm::tvec4,double,0>
	npad	1

; 32   : 		Error += L2 != std::string("dvec4(1.000000, 2.000000, 3.000000, 4.000000)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65354
	lea	rcx, QWORD PTR $T62[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv597[rsp], rax
	mov	rdx, QWORD PTR tv597[rsp]
	lea	rcx, QWORD PTR L2$61[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@test_strin
	mov	DWORD PTR tv214[rsp], 1
	jmp	SHORT $LN14@test_strin
$LN13@test_strin:
	mov	DWORD PTR tv214[rsp], 0
$LN14@test_strin:
	mov	eax, DWORD PTR tv214[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T62[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 33   : 	}

	lea	rcx, QWORD PTR L2$61[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR K2$58[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR J2$55[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR C2$52[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR B2$49[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR A2$46[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 34   : 
; 35   : 	{
; 36   : 		glm::bvec2 M1(false, true);

	mov	r8b, 1
	xor	edx, edx
	lea	rcx, QWORD PTR M1$63[rsp]
	call	??0?$tvec2@_N$0A@@glm@@QEAA@_N0@Z	; glm::tvec2<bool,0>::tvec2<bool,0>

; 37   : 		std::string M2 = glm::to_string(M1);

	lea	rdx, QWORD PTR M1$63[rsp]
	lea	rcx, QWORD PTR M2$64[rsp]
	call	??$to_string@Utvec2@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_N$0A@@0@@Z ; glm::to_string<glm::tvec2,bool,0>
	npad	1

; 38   : 		Error += M2 != std::string("bvec2(false, true)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65355
	lea	rcx, QWORD PTR $T65[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv600[rsp], rax
	mov	rdx, QWORD PTR tv600[rsp]
	lea	rcx, QWORD PTR M2$64[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@test_strin
	mov	DWORD PTR tv233[rsp], 1
	jmp	SHORT $LN16@test_strin
$LN15@test_strin:
	mov	DWORD PTR tv233[rsp], 0
$LN16@test_strin:
	mov	eax, DWORD PTR tv233[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T65[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 39   : 	
; 40   : 		glm::bvec3 O1(false, true, false);

	xor	r9d, r9d
	mov	r8b, 1
	xor	edx, edx
	lea	rcx, QWORD PTR O1$66[rsp]
	call	??0?$tvec3@_N$0A@@glm@@QEAA@_N00@Z	; glm::tvec3<bool,0>::tvec3<bool,0>

; 41   : 		std::string O2 = glm::to_string(O1);

	lea	rdx, QWORD PTR O1$66[rsp]
	lea	rcx, QWORD PTR O2$67[rsp]
	call	??$to_string@Utvec3@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_N$0A@@0@@Z ; glm::to_string<glm::tvec3,bool,0>
	npad	1

; 42   : 		Error += O2 != std::string("bvec3(false, true, false)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65356
	lea	rcx, QWORD PTR $T68[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv603[rsp], rax
	mov	rdx, QWORD PTR tv603[rsp]
	lea	rcx, QWORD PTR O2$67[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@test_strin
	mov	DWORD PTR tv253[rsp], 1
	jmp	SHORT $LN18@test_strin
$LN17@test_strin:
	mov	DWORD PTR tv253[rsp], 0
$LN18@test_strin:
	mov	eax, DWORD PTR tv253[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T68[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 43   : 
; 44   : 		glm::bvec4 P1(false, true, false, true);

	mov	BYTE PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8b, 1
	xor	edx, edx
	lea	rcx, QWORD PTR P1$69[rsp]
	call	??0?$tvec4@_N$0A@@glm@@QEAA@_N000@Z	; glm::tvec4<bool,0>::tvec4<bool,0>

; 45   : 		std::string P2 = glm::to_string(P1);

	lea	rdx, QWORD PTR P1$69[rsp]
	lea	rcx, QWORD PTR P2$70[rsp]
	call	??$to_string@Utvec4@glm@@_N$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_N$0A@@0@@Z ; glm::to_string<glm::tvec4,bool,0>
	npad	1

; 46   : 		Error += P2 != std::string("bvec4(false, true, false, true)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65357
	lea	rcx, QWORD PTR $T71[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv606[rsp], rax
	mov	rdx, QWORD PTR tv606[rsp]
	lea	rcx, QWORD PTR P2$70[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@test_strin
	mov	DWORD PTR tv274[rsp], 1
	jmp	SHORT $LN20@test_strin
$LN19@test_strin:
	mov	DWORD PTR tv274[rsp], 0
$LN20@test_strin:
	mov	eax, DWORD PTR tv274[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T71[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 47   : 	}

	lea	rcx, QWORD PTR P2$70[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR O2$67[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR M2$64[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 48   : 
; 49   : 	{
; 50   : 		glm::ivec2 D1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR D1$72[rsp]
	call	??0?$tvec2@H$0A@@glm@@QEAA@HH@Z		; glm::tvec2<int,0>::tvec2<int,0>

; 51   : 		std::string D2 = glm::to_string(D1);

	lea	rdx, QWORD PTR D1$72[rsp]
	lea	rcx, QWORD PTR D2$73[rsp]
	call	??$to_string@Utvec2@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@H$0A@@0@@Z ; glm::to_string<glm::tvec2,int,0>
	npad	1

; 52   : 		Error += D2 != std::string("ivec2(1, 2)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65358
	lea	rcx, QWORD PTR $T74[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv609[rsp], rax
	mov	rdx, QWORD PTR tv609[rsp]
	lea	rcx, QWORD PTR D2$73[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN21@test_strin
	mov	DWORD PTR tv325[rsp], 1
	jmp	SHORT $LN22@test_strin
$LN21@test_strin:
	mov	DWORD PTR tv325[rsp], 0
$LN22@test_strin:
	mov	eax, DWORD PTR tv325[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T74[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 53   : 	
; 54   : 		glm::ivec3 E1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR E1$75[rsp]
	call	??0?$tvec3@H$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<int,0>::tvec3<int,0>

; 55   : 		std::string E2 = glm::to_string(E1);

	lea	rdx, QWORD PTR E1$75[rsp]
	lea	rcx, QWORD PTR E2$76[rsp]
	call	??$to_string@Utvec3@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@H$0A@@0@@Z ; glm::to_string<glm::tvec3,int,0>
	npad	1

; 56   : 		Error += E2 != std::string("ivec3(1, 2, 3)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65359
	lea	rcx, QWORD PTR $T77[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv612[rsp], rax
	mov	rdx, QWORD PTR tv612[rsp]
	lea	rcx, QWORD PTR E2$76[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@test_strin
	mov	DWORD PTR tv345[rsp], 1
	jmp	SHORT $LN24@test_strin
$LN23@test_strin:
	mov	DWORD PTR tv345[rsp], 0
$LN24@test_strin:
	mov	eax, DWORD PTR tv345[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T77[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 57   : 	
; 58   : 		glm::ivec4 F1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR F1$78[rsp]
	call	??0?$tvec4@H$0A@@glm@@QEAA@HHHH@Z	; glm::tvec4<int,0>::tvec4<int,0>

; 59   : 		std::string F2 = glm::to_string(F1);

	lea	rdx, QWORD PTR F1$78[rsp]
	lea	rcx, QWORD PTR F2$79[rsp]
	call	??$to_string@Utvec4@glm@@H$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@H$0A@@0@@Z ; glm::to_string<glm::tvec4,int,0>
	npad	1

; 60   : 		Error += F2 != std::string("ivec4(1, 2, 3, 4)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65360
	lea	rcx, QWORD PTR $T80[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv615[rsp], rax
	mov	rdx, QWORD PTR tv615[rsp]
	lea	rcx, QWORD PTR F2$79[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@test_strin
	mov	DWORD PTR tv366[rsp], 1
	jmp	SHORT $LN26@test_strin
$LN25@test_strin:
	mov	DWORD PTR tv366[rsp], 0
$LN26@test_strin:
	mov	eax, DWORD PTR tv366[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T80[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 61   : 	}

	lea	rcx, QWORD PTR F2$79[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR E2$76[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR D2$73[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 62   : 
; 63   : 	{
; 64   : 		glm::i8vec2 D1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR D1$81[rsp]
	call	??$?0HH@?$tvec2@C$0A@@glm@@QEAA@HH@Z	; glm::tvec2<signed char,0>::tvec2<signed char,0><int,int>

; 65   : 		std::string D2 = glm::to_string(D1);

	lea	rdx, QWORD PTR D1$81[rsp]
	lea	rcx, QWORD PTR D2$82[rsp]
	call	??$to_string@Utvec2@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@C$0A@@0@@Z ; glm::to_string<glm::tvec2,signed char,0>
	npad	1

; 66   : 		Error += D2 != std::string("i8vec2(1, 2)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65361
	lea	rcx, QWORD PTR $T83[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv618[rsp], rax
	mov	rdx, QWORD PTR tv618[rsp]
	lea	rcx, QWORD PTR D2$82[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@test_strin
	mov	DWORD PTR tv385[rsp], 1
	jmp	SHORT $LN28@test_strin
$LN27@test_strin:
	mov	DWORD PTR tv385[rsp], 0
$LN28@test_strin:
	mov	eax, DWORD PTR tv385[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T83[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 67   : 	
; 68   : 		glm::i8vec3 E1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR E1$84[rsp]
	call	??$?0HHH@?$tvec3@C$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<signed char,0>::tvec3<signed char,0><int,int,int>

; 69   : 		std::string E2 = glm::to_string(E1);

	lea	rdx, QWORD PTR E1$84[rsp]
	lea	rcx, QWORD PTR E2$85[rsp]
	call	??$to_string@Utvec3@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@C$0A@@0@@Z ; glm::to_string<glm::tvec3,signed char,0>
	npad	1

; 70   : 		Error += E2 != std::string("i8vec3(1, 2, 3)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65362
	lea	rcx, QWORD PTR $T86[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv621[rsp], rax
	mov	rdx, QWORD PTR tv621[rsp]
	lea	rcx, QWORD PTR E2$85[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@test_strin
	mov	DWORD PTR tv405[rsp], 1
	jmp	SHORT $LN30@test_strin
$LN29@test_strin:
	mov	DWORD PTR tv405[rsp], 0
$LN30@test_strin:
	mov	eax, DWORD PTR tv405[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T86[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 71   : 	
; 72   : 		glm::i8vec4 F1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR F1$87[rsp]
	call	??$?0HHHH@?$tvec4@C$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<signed char,0>::tvec4<signed char,0><int,int,int,int>

; 73   : 		std::string F2 = glm::to_string(F1);

	lea	rdx, QWORD PTR F1$87[rsp]
	lea	rcx, QWORD PTR F2$88[rsp]
	call	??$to_string@Utvec4@glm@@C$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@C$0A@@0@@Z ; glm::to_string<glm::tvec4,signed char,0>
	npad	1

; 74   : 		Error += F2 != std::string("i8vec4(1, 2, 3, 4)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65363
	lea	rcx, QWORD PTR $T89[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv624[rsp], rax
	mov	rdx, QWORD PTR tv624[rsp]
	lea	rcx, QWORD PTR F2$88[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@test_strin
	mov	DWORD PTR tv426[rsp], 1
	jmp	SHORT $LN32@test_strin
$LN31@test_strin:
	mov	DWORD PTR tv426[rsp], 0
$LN32@test_strin:
	mov	eax, DWORD PTR tv426[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T89[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 75   : 	}

	lea	rcx, QWORD PTR F2$88[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR E2$85[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR D2$82[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 76   : 
; 77   : 	{
; 78   : 		glm::i16vec2 D1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR D1$90[rsp]
	call	??$?0HH@?$tvec2@F$0A@@glm@@QEAA@HH@Z	; glm::tvec2<short,0>::tvec2<short,0><int,int>

; 79   : 		std::string D2 = glm::to_string(D1);

	lea	rdx, QWORD PTR D1$90[rsp]
	lea	rcx, QWORD PTR D2$91[rsp]
	call	??$to_string@Utvec2@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@F$0A@@0@@Z ; glm::to_string<glm::tvec2,short,0>
	npad	1

; 80   : 		Error += D2 != std::string("i16vec2(1, 2)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65364
	lea	rcx, QWORD PTR $T92[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv627[rsp], rax
	mov	rdx, QWORD PTR tv627[rsp]
	lea	rcx, QWORD PTR D2$91[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@test_strin
	mov	DWORD PTR tv445[rsp], 1
	jmp	SHORT $LN34@test_strin
$LN33@test_strin:
	mov	DWORD PTR tv445[rsp], 0
$LN34@test_strin:
	mov	eax, DWORD PTR tv445[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T92[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 81   : 	
; 82   : 		glm::i16vec3 E1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR E1$93[rsp]
	call	??$?0HHH@?$tvec3@F$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<short,0>::tvec3<short,0><int,int,int>

; 83   : 		std::string E2 = glm::to_string(E1);

	lea	rdx, QWORD PTR E1$93[rsp]
	lea	rcx, QWORD PTR E2$94[rsp]
	call	??$to_string@Utvec3@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@F$0A@@0@@Z ; glm::to_string<glm::tvec3,short,0>
	npad	1

; 84   : 		Error += E2 != std::string("i16vec3(1, 2, 3)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65365
	lea	rcx, QWORD PTR $T95[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv630[rsp], rax
	mov	rdx, QWORD PTR tv630[rsp]
	lea	rcx, QWORD PTR E2$94[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN35@test_strin
	mov	DWORD PTR tv465[rsp], 1
	jmp	SHORT $LN36@test_strin
$LN35@test_strin:
	mov	DWORD PTR tv465[rsp], 0
$LN36@test_strin:
	mov	eax, DWORD PTR tv465[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T95[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 85   : 	
; 86   : 		glm::i16vec4 F1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR F1$96[rsp]
	call	??$?0HHHH@?$tvec4@F$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<short,0>::tvec4<short,0><int,int,int,int>

; 87   : 		std::string F2 = glm::to_string(F1);

	lea	rdx, QWORD PTR F1$96[rsp]
	lea	rcx, QWORD PTR F2$97[rsp]
	call	??$to_string@Utvec4@glm@@F$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@F$0A@@0@@Z ; glm::to_string<glm::tvec4,short,0>
	npad	1

; 88   : 		Error += F2 != std::string("i16vec4(1, 2, 3, 4)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65366
	lea	rcx, QWORD PTR $T98[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv633[rsp], rax
	mov	rdx, QWORD PTR tv633[rsp]
	lea	rcx, QWORD PTR F2$97[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN37@test_strin
	mov	DWORD PTR tv486[rsp], 1
	jmp	SHORT $LN38@test_strin
$LN37@test_strin:
	mov	DWORD PTR tv486[rsp], 0
$LN38@test_strin:
	mov	eax, DWORD PTR tv486[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T98[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 89   : 	}

	lea	rcx, QWORD PTR F2$97[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR E2$94[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR D2$91[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 90   : 
; 91   : 	{
; 92   : 		glm::i64vec2 D1(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR D1$99[rsp]
	call	??$?0HH@?$tvec2@_J$0A@@glm@@QEAA@HH@Z	; glm::tvec2<__int64,0>::tvec2<__int64,0><int,int>

; 93   : 		std::string D2 = glm::to_string(D1);

	lea	rdx, QWORD PTR D1$99[rsp]
	lea	rcx, QWORD PTR D2$100[rsp]
	call	??$to_string@Utvec2@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec2@_J$0A@@0@@Z ; glm::to_string<glm::tvec2,__int64,0>
	npad	1

; 94   : 		Error += D2 != std::string("i64vec2(1, 2)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65367
	lea	rcx, QWORD PTR $T101[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv636[rsp], rax
	mov	rdx, QWORD PTR tv636[rsp]
	lea	rcx, QWORD PTR D2$100[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@test_strin
	mov	DWORD PTR tv505[rsp], 1
	jmp	SHORT $LN40@test_strin
$LN39@test_strin:
	mov	DWORD PTR tv505[rsp], 0
$LN40@test_strin:
	mov	eax, DWORD PTR tv505[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T101[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 95   : 	
; 96   : 		glm::i64vec3 E1(1, 2, 3);

	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR E1$102[rsp]
	call	??$?0HHH@?$tvec3@_J$0A@@glm@@QEAA@HHH@Z	; glm::tvec3<__int64,0>::tvec3<__int64,0><int,int,int>

; 97   : 		std::string E2 = glm::to_string(E1);

	lea	rdx, QWORD PTR E1$102[rsp]
	lea	rcx, QWORD PTR E2$103[rsp]
	call	??$to_string@Utvec3@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec3@_J$0A@@0@@Z ; glm::to_string<glm::tvec3,__int64,0>
	npad	1

; 98   : 		Error += E2 != std::string("i64vec3(1, 2, 3)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65368
	lea	rcx, QWORD PTR $T104[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv639[rsp], rax
	mov	rdx, QWORD PTR tv639[rsp]
	lea	rcx, QWORD PTR E2$103[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN41@test_strin
	mov	DWORD PTR tv525[rsp], 1
	jmp	SHORT $LN42@test_strin
$LN41@test_strin:
	mov	DWORD PTR tv525[rsp], 0
$LN42@test_strin:
	mov	eax, DWORD PTR tv525[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T104[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 99   : 	
; 100  : 		glm::i64vec4 F1(1, 2, 3, 4);

	mov	DWORD PTR [rsp+32], 4
	mov	r9d, 3
	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR F1$105[rsp]
	call	??$?0HHHH@?$tvec4@_J$0A@@glm@@QEAA@HHHH@Z ; glm::tvec4<__int64,0>::tvec4<__int64,0><int,int,int,int>

; 101  : 		std::string F2 = glm::to_string(F1);

	lea	rdx, QWORD PTR F1$105[rsp]
	lea	rcx, QWORD PTR F2$106[rsp]
	call	??$to_string@Utvec4@glm@@_J$0A@@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBU?$tvec4@_J$0A@@0@@Z ; glm::to_string<glm::tvec4,__int64,0>
	npad	1

; 102  : 		Error += F2 != std::string("i64vec4(1, 2, 3, 4)") ? 1 : 0;

	lea	rdx, OFFSET FLAT:$SG65369
	lea	rcx, QWORD PTR $T107[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	QWORD PTR tv642[rsp], rax
	mov	rdx, QWORD PTR tv642[rsp]
	lea	rcx, QWORD PTR F2$106[rsp]
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN43@test_strin
	mov	DWORD PTR tv578[rsp], 1
	jmp	SHORT $LN44@test_strin
$LN43@test_strin:
	mov	DWORD PTR tv578[rsp], 0
$LN44@test_strin:
	mov	eax, DWORD PTR tv578[rsp]
	mov	ecx, DWORD PTR Error$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Error$[rsp], eax
	lea	rcx, QWORD PTR $T107[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 103  : 	}

	lea	rcx, QWORD PTR F2$106[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR E2$103[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR D2$100[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 104  : 
; 105  : 	return Error;

	mov	eax, DWORD PTR Error$[rsp]

; 106  : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?test_string_cast_vector@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 3296				; 00000ce0H
	pop	rdi
	ret	0
?test_string_cast_vector@@YAHXZ ENDP			; test_string_cast_vector
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR A2$46[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR B2$49[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR C2$52[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR J2$55[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR K2$58[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$10
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR L2$61[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$10@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$12
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR M2$64[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$12@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$14
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR O2$67[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$14@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$16
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR P2$70[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$16@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$18
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR D2$73[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$18@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$20
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR E2$76[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$20@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$22
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR F2$79[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$22@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$24
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR D2$82[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$24@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$26
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR E2$85[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$26@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$28
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR F2$88[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$28@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$30
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR D2$91[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$30@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$32
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR E2$94[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$32@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$32
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$34
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR F2$97[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$34@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$34
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$36
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR D2$100[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$36@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$36
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$38
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR E2$103[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$38@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
Error$ = 48
A1$45 = 72
A2$46 = 104
$T47 = 152
B1$48 = 200
B2$49 = 248
$T50 = 296
C1$51 = 344
C2$52 = 392
$T53 = 440
J1$54 = 488
J2$55 = 536
$T56 = 584
K1$57 = 632
K2$58 = 680
$T59 = 728
L1$60 = 776
L2$61 = 840
$T62 = 888
M1$63 = 932
M2$64 = 968
$T65 = 1016
O1$66 = 1060
O2$67 = 1096
$T68 = 1144
P1$69 = 1188
P2$70 = 1224
$T71 = 1272
D1$72 = 1320
D2$73 = 1352
$T74 = 1400
E1$75 = 1448
E2$76 = 1496
$T77 = 1544
F1$78 = 1592
F2$79 = 1640
$T80 = 1688
D1$81 = 1732
D2$82 = 1768
$T83 = 1816
E1$84 = 1860
E2$85 = 1896
$T86 = 1944
F1$87 = 1988
F2$88 = 2024
$T89 = 2072
D1$90 = 2116
D2$91 = 2152
$T92 = 2200
E1$93 = 2244
E2$94 = 2280
$T95 = 2328
F1$96 = 2376
F2$97 = 2408
$T98 = 2456
D1$99 = 2504
D2$100 = 2552
$T101 = 2600
E1$102 = 2648
E2$103 = 2696
$T104 = 2744
F1$105 = 2792
F2$106 = 2856
$T107 = 2904
tv582 = 2952
tv81 = 2960
tv585 = 2968
tv133 = 2976
tv588 = 2984
tv154 = 2992
tv591 = 3000
tv173 = 3008
tv594 = 3016
tv193 = 3024
tv597 = 3032
tv214 = 3040
tv600 = 3048
tv233 = 3056
tv603 = 3064
tv253 = 3072
tv606 = 3080
tv274 = 3088
tv609 = 3096
tv325 = 3104
tv612 = 3112
tv345 = 3120
tv615 = 3128
tv366 = 3136
tv618 = 3144
tv385 = 3152
tv621 = 3160
tv405 = 3168
tv624 = 3176
tv426 = 3184
tv627 = 3192
tv445 = 3200
tv630 = 3208
tv465 = 3216
tv633 = 3224
tv486 = 3232
tv636 = 3240
tv505 = 3248
tv639 = 3256
tv525 = 3264
tv642 = 3272
tv578 = 3280
__$ArrayPad$ = 3288
?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA PROC	; `test_string_cast_vector'::`1'::dtor$40
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR F2$106[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$40@?0??test_string_cast_vector@@YAHXZ@4HA ENDP	; `test_string_cast_vector'::`1'::dtor$40
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@_J@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@_J@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<__int64>::value, COMDAT

; 125  : 		GLM_FUNC_QUALIFIER static char const * value() {return "i64";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_03DFJPCLP@i64@
	pop	rdi
	ret	0
?value@?$prefix@_J@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<__int64>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@H@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@H@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<int>::value, COMDAT

; 113  : 		GLM_FUNC_QUALIFIER static char const * value() {return "i";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_01KBJDNOO@i@
	pop	rdi
	ret	0
?value@?$prefix@H@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<int>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@F@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@F@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<short>::value, COMDAT

; 101  : 		GLM_FUNC_QUALIFIER static char const * value() {return "i16";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_03DECAIGLI@i16@
	pop	rdi
	ret	0
?value@?$prefix@F@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<short>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@C@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@C@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<signed char>::value, COMDAT

; 89   : 		GLM_FUNC_QUALIFIER static char const * value() {return "i8";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_02FACHGKLJ@i8@
	pop	rdi
	ret	0
?value@?$prefix@C@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<signed char>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@N@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@N@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<double>::value, COMDAT

; 71   : 		GLM_FUNC_QUALIFIER static char const * value() {return "d";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_01LPLHEDKD@d@
	pop	rdi
	ret	0
?value@?$prefix@N@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<double>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?value@?$prefix@M@detail@glm@@SAPEBDXZ
_TEXT	SEGMENT
?value@?$prefix@M@detail@glm@@SAPEBDXZ PROC		; glm::detail::prefix<float>::value, COMDAT

; 65   : 		GLM_FUNC_QUALIFIER static char const * value() {return "";};

$LN3:
	push	rdi
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	pop	rdi
	ret	0
?value@?$prefix@M@detail@glm@@SAPEBDXZ ENDP		; glm::detail::prefix<float>::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\gtx\string_cast.inl
;	COMDAT ?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
_TEXT	SEGMENT
STRING_BUFFER$ = 32
text$ = 64
list$ = 4184
$T5 = 4212
__$ArrayPad$ = 4216
__$ReturnUdt$ = 4240
msg$ = 4248
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ PROC ; glm::detail::format, COMDAT

; 11   : 	{

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rdi
	mov	eax, 4224				; 00001080H
	call	__chkstk
	sub	rsp, rax
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 1048				; 00000418H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+4240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T5[rsp], 0

; 12   : 		std::size_t const STRING_BUFFER(4096);

	mov	QWORD PTR STRING_BUFFER$[rsp], 4096	; 00001000H

; 13   : 		char text[STRING_BUFFER];
; 14   : 		va_list list;
; 15   : 
; 16   : 		if(msg == 0)

	cmp	QWORD PTR msg$[rsp], 0
	jne	SHORT $LN2@format

; 17   : 			return std::string();

	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@format
$LN2@format:

; 18   : 
; 19   : 		va_start(list, msg);

	lea	rax, QWORD PTR msg$[rsp+8]
	mov	QWORD PTR list$[rsp], rax

; 20   : #		if(GLM_COMPILER & GLM_COMPILER_VC)
; 21   : 			vsprintf_s(text, STRING_BUFFER, msg, list);

	mov	r9, QWORD PTR list$[rsp]
	mov	r8, QWORD PTR msg$[rsp]
	mov	edx, 4096				; 00001000H
	lea	rcx, QWORD PTR text$[rsp]
	call	vsprintf_s

; 22   : #		else//
; 23   : 			vsprintf(text, msg, list);
; 24   : #		endif//
; 25   : 		va_end(list);

	mov	QWORD PTR list$[rsp], 0

; 26   : 
; 27   : 		return std::string(text);

	lea	rdx, QWORD PTR text$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T5[rsp]
	or	eax, 1
	mov	DWORD PTR $T5[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@format:

; 28   : 	}

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 4224				; 00001080H
	pop	rdi
	ret	0
?format@detail@glm@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ENDP ; glm::detail::format
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1381 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1382 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1383 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1377 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1378 :         return *this;

	mov	rax, QWORD PTR this$[rsp]

; 1379 :     }

	pop	rdi
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4668 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4669 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4670 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4664 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4665 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4666 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4630 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 4631 :         _Mypair._Myval2._Orphan_all();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4632 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4633 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 4634 :             auto& _Al          = _Getal();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	QWORD PTR _Al$2[rsp], rax

; 4635 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4636 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	inc	rax
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$1[rsp]
	mov	rcx, QWORD PTR _Al$2[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4637 :         }
; 4638 : 
; 4639 : #if _HAS_CXX20
; 4640 :         if (_STD is_constant_evaluated()) {
; 4641 :             _Mypair._Myval2._Bx._Ptr = nullptr;
; 4642 :             _Mypair._Myval2._Mysize  = 0;
; 4643 :             _Mypair._Myval2._Myres   = 0;
; 4644 :         } else
; 4645 : #endif // _HAS_CXX20
; 4646 :         {
; 4647 :             _Mypair._Myval2._Mysize = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4648 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 15

; 4649 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4650 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rsp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
	npad	1

; 4651 :         }
; 4652 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4608 :     _CONSTEXPR20 void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4609 :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR _My_data$[rsp], rax

; 4610 :         _My_data._Mysize = 0;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+24], 0

; 4611 : 
; 4612 : #if _HAS_CXX20
; 4613 :         if (_STD is_constant_evaluated()) {
; 4614 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4615 :             auto& _Al              = _Getal();
; 4616 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4617 :             _My_data._Bx._Ptr      = _New_ptr;
; 4618 : 
; 4619 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4620 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4621 :         } else
; 4622 : #endif // _HAS_CXX20
; 4623 :         {
; 4624 :             _My_data._Myres = _BUF_SIZE - 1;

	mov	rax, QWORD PTR _My_data$[rsp]
	mov	QWORD PTR [rax+32], 15

; 4625 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4626 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR _My_data$[rsp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4627 :         }
; 4628 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4515 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 4516 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR _Requested$[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4517 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4502 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 4503 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rax, QWORD PTR _Requested$[rsp]
	or	rax, 15
	mov	QWORD PTR _Masked$[rsp], rax

; 4504 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	mov	rax, QWORD PTR _Max$[rsp]
	cmp	QWORD PTR _Masked$[rsp], rax
	jbe	SHORT $LN2@Calculate_

; 4505 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4506 :         }
; 4507 : 
; 4508 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Old$[rsp], rax
	jbe	SHORT $LN3@Calculate_

; 4509 :             return _Max;

	mov	rax, QWORD PTR _Max$[rsp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4510 :         }
; 4511 : 
; 4512 :         return (_STD max)(_Masked, _Old + _Old / 2);

	xor	edx, edx
	mov	rax, QWORD PTR _Old$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Old$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Masked$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4513 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z
_TEXT	SEGMENT
tv72 = 32
this$ = 64
_Right$ = 72
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal, COMDAT

; 4371 :     _CONSTEXPR20 bool _Equal(const basic_string& _Right) const noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 4372 :         // compare [0, size()) with _Right for equality
; 4373 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR tv72[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	r9, QWORD PTR [rcx+24]
	mov	rcx, QWORD PTR tv72[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+24]
	mov	rcx, rax
	call	??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >

; 4374 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 4375 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3933 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 96					; 00000060H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+112]

; 3934 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	mov	QWORD PTR _Alloc_max$[rsp], rax

; 3935 :         const size_type _Storage_max = // can always store small string

	mov	QWORD PTR $T4[rsp], 16
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR _Alloc_max$[rsp]
	call	??$max@_K@std@@YAAEB_KAEB_K0@Z		; std::max<unsigned __int64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Storage_max$[rsp], rax

; 3936 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3937 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	rax, QWORD PTR _Storage_max$[rsp]
	dec	rax
	mov	QWORD PTR $T5[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T6[rsp], rax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 3938 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3939 :         );
; 3940 :     }

	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3911 :     _NODISCARD _CONSTEXPR20 _Ret_z_ const _Elem* c_str() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 3912 :         return _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3913 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3257 :     _CONSTEXPR20 basic_string& assign(_In_z_ const _Elem* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 3258 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	rcx, rax
	call	??$_Convert_size@_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3259 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3238 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 3239 :         // assign [_Ptr, _Ptr + _Count)
; 3240 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR _Count$[rsp], rax
	ja	SHORT $LN2@assign

; 3241 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	QWORD PTR _Old_ptr$1[rsp], rax

; 3242 :             _Mypair._Myval2._Mysize = _Count;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	mov	QWORD PTR [rax+24], rcx

; 3243 :             _Traits::move(_Old_ptr, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Old_ptr$1[rsp]
	call	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3244 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	mov	BYTE PTR $T2[rsp], 0
	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Old_ptr$1[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3245 :             return *this;

	mov	rax, QWORD PTR this$[rsp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3246 :         }
; 3247 : 
; 3248 :         return _Reallocate_for(

	lea	rax, QWORD PTR $T3[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	mov	r9, QWORD PTR _Ptr$[rsp]
	movzx	r8d, BYTE PTR $T3[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 3249 :             _Count,
; 3250 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3251 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3252 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3253 :             },
; 3254 :             _Ptr);
; 3255 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S8$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2999 :     _CONSTEXPR20 ~basic_string() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]

; 3000 :         _Tidy_deallocate();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3001 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3002 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S8$[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S8$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 3003 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _To_delete$[rsp], rax

; 3004 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 3005 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	rdx, QWORD PTR _To_delete$[rsp]
	mov	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3006 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3007 :     }

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2532 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 128				; 00000080H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T5[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
	npad	1

; 2533 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S10$[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	rax, QWORD PTR $S10$[rsp]
	mov	QWORD PTR _Alproxy$[rsp], rax

; 2534 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	rax, QWORD PTR this$[rsp]
	mov	r8, rax
	mov	rdx, QWORD PTR _Alproxy$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2535 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2536 :         assign(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2537 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2538 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2484 :         : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>

; 2485 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2486 :         _Tidy_init();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2487 :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2366 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	pop	rdi
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2364 :         _CONSTEXPR20 _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2331 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 2332 : #if _HAS_CXX20
; 2333 :         if (_STD is_constant_evaluated()) {
; 2334 :             return true;
; 2335 :         }
; 2336 : #endif // _HAS_CXX20
; 2337 :         return _BUF_SIZE <= _Myres;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 16
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
	movzx	eax, BYTE PTR tv66[rsp]

; 2338 :     }

	add	rsp, 16
	pop	rdi
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2322 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2323 :         const value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2324 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2325 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2326 :         }
; 2327 : 
; 2328 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2329 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2313 :     _CONSTEXPR20 value_type* _Myptr() noexcept {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 2314 :         value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR _Result$[rsp], rax

; 2315 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2316 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>
	mov	QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2317 :         }
; 2318 : 
; 2319 :         return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2320 :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2302 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2303 : 
; 2304 :     // length of internal buffer, [1, 16]:
; 2305 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2306 :     // roundup mask for allocated buffers, [0, 15]:
; 2307 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2308 :                                            : sizeof(value_type) <= 2 ? 7
; 2309 :                                            : sizeof(value_type) <= 4 ? 3
; 2310 :                                            : sizeof(value_type) <= 8 ? 1
; 2311 :                                                                      : 0;
; 2312 : 
; 2313 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2314 :         value_type* _Result = _Bx._Buf;
; 2315 :         if (_Large_string_engaged()) {
; 2316 :             _Result = _Unfancy(_Bx._Ptr);
; 2317 :         }
; 2318 : 
; 2319 :         return _Result;
; 2320 :     }
; 2321 : 
; 2322 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2323 :         const value_type* _Result = _Bx._Buf;
; 2324 :         if (_Large_string_engaged()) {
; 2325 :             _Result = _Unfancy(_Bx._Ptr);
; 2326 :         }
; 2327 : 
; 2328 :         return _Result;
; 2329 :     }
; 2330 : 
; 2331 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2332 : #if _HAS_CXX20
; 2333 :         if (_STD is_constant_evaluated()) {
; 2334 :             return true;
; 2335 :         }
; 2336 : #endif // _HAS_CXX20
; 2337 :         return _BUF_SIZE <= _Myres;
; 2338 :     }
; 2339 : 
; 2340 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2341 :         // checks whether _Off is in the bounds of [0, size()]
; 2342 :         if (_Mysize < _Off) {
; 2343 :             _Xran();
; 2344 :         }
; 2345 :     }
; 2346 : 
; 2347 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2348 :         // checks whether _Off is in the bounds of [0, size())
; 2349 :         if (_Mysize <= _Off) {
; 2350 :             _Xran();
; 2351 :         }
; 2352 :     }
; 2353 : 
; 2354 :     [[noreturn]] static void _Xran() {
; 2355 :         _Xout_of_range("invalid string position");
; 2356 :     }
; 2357 : 
; 2358 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2359 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2360 :         return (_STD min)(_Size, _Mysize - _Off);
; 2361 :     }
; 2362 : 
; 2363 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2364 :         _CONSTEXPR20 _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers
; 2365 : 
; 2366 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2367 : 
; 2368 :         value_type _Buf[_BUF_SIZE];
; 2369 :         pointer _Ptr;
; 2370 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2371 :     } _Bx;
; 2372 : 
; 2373 :     size_type _Mysize = 0; // current length of string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 2374 :     size_type _Myres  = 0; // current storage reserved for string

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 2302 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, -1

; 695  :     }

	pop	rdi
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 833  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rsp]
	call	??$_Get_size_of_n@$00@std@@YA_K_K@Z	; std::_Get_size_of_n<1>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 835  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN4@deallocate:

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 831  :     }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2390 : [[noreturn]] inline void _Xlen_string() {

$LN3:
	push	rdi
	sub	rsp, 32					; 00000020H

; 2391 :     _Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:

; 2392 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 438  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 439  : #if _HAS_CXX20
; 440  :         if (_STD is_constant_evaluated()) {
; 441  :             return _Primary_char_traits::assign(_Left, _Right);
; 442  :         }
; 443  : #endif // _HAS_CXX20
; 444  :         _Left = _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl

; 445  :     }

	pop	rdi
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 385  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 386  :         // find length of null-terminated string
; 387  : #if _HAS_CXX17
; 388  : #ifdef __cpp_char8_t
; 389  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 390  : #if _HAS_U8_INTRINSICS
; 391  :             return __builtin_u8strlen(_First);
; 392  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 393  :             return _Primary_char_traits::length(_First);
; 394  : #endif // _HAS_U8_INTRINSICS
; 395  :         } else
; 396  : #endif // __cpp_char8_t
; 397  :         {
; 398  :             return __builtin_strlen(_First);
; 399  :         }
; 400  : #else // _HAS_CXX17
; 401  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	strlen

; 402  : #endif // _HAS_CXX17
; 403  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 376  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 377  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 378  : #if _HAS_CXX17
; 379  :         return __builtin_memcmp(_First1, _First2, _Count);
; 380  : #else // _HAS_CXX17
; 381  :         return _CSTD memcmp(_First1, _First2, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memcmp

; 382  : #endif // _HAS_CXX17
; 383  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 79   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 80   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 81   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 82   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 83   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 84   : #if _HAS_CXX20
; 85   :         if (_STD is_constant_evaluated()) {
; 86   :             // dest: [_First1, _First1 + _Count)
; 87   :             // src: [_First2, _First2 + _Count)
; 88   :             // We need to handle overlapping ranges.
; 89   :             // If _First1 is in the src range, we need a backward loop.
; 90   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 91   : 
; 92   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 93   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 94   :             bool _Loop_forward = true;
; 95   : 
; 96   :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 97   :                 if (_First1 == _Src) {
; 98   :                     _Loop_forward = false;
; 99   :                     break;
; 100  :                 }
; 101  :             }
; 102  : 
; 103  :             if (_Loop_forward) {
; 104  :                 for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {
; 105  :                     _First1[_Idx] = _First2[_Idx];
; 106  :                 }
; 107  :             } else {
; 108  :                 for (size_t _Idx = _Count; _Idx != 0; --_Idx) {
; 109  :                     _First1[_Idx - 1] = _First2[_Idx - 1];
; 110  :                 }
; 111  :             }
; 112  : 
; 113  :             return _First1;
; 114  :         }
; 115  : #endif // _HAS_CXX20
; 116  : 
; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memmove

; 118  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 119  : 
; 120  :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 121  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 48   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 49   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 50   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 51   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 52   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 53   : #if _HAS_CXX20
; 54   :         if (_STD is_constant_evaluated()) {
; 55   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 56   :             for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {
; 57   :                 _First1[_Idx] = _First2[_Idx];
; 58   :             }
; 59   : 
; 60   :             return _First1;
; 61   :         }
; 62   : #endif // _HAS_CXX20
; 63   : 
; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	memcpy

; 65   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 66   : 
; 67   :         return _First1;

	mov	rax, QWORD PTR _First1$[rsp]

; 68   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1297 :     _Container_proxy* _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1304 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1299 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1300 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1301 :     }

	pop	rdi
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1078 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]

; 1079 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1080 :         _Orphan_all_unlocked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1081 :     }

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
this$ = 32
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1219 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 1220 :     if (!_Myproxy) { // no proxy, already done

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all

; 1221 :         return;

	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1222 :     }
; 1223 : 
; 1224 :     // proxy allocated, drain it
; 1225 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1226 :         _Pnext->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1227 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1228 :     _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:

; 1229 : }

	add	rsp, 16
	pop	rdi
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1231 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1232 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1233 : #if _HAS_CXX20
; 1234 :     if (_STD is_constant_evaluated()) {
; 1235 :         _Orphan_all_unlocked_v3();
; 1236 :     } else
; 1237 : #endif // _HAS_CXX20
; 1238 :     {
; 1239 :         _Orphan_all_locked_v3();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1240 :     }
; 1241 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1242 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 1048 : 
; 1049 :     _Container_base12(const _Container_base12&) = delete;
; 1050 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1051 : 
; 1052 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1053 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1054 : 
; 1055 :     template <class _Alloc>
; 1056 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1057 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1058 :         _Construct_in_place(*_New_proxy, this);
; 1059 :         _Myproxy            = _New_proxy;
; 1060 :         _New_proxy->_Mycont = this;
; 1061 :     }
; 1062 : 
; 1063 :     template <class _Alloc>
; 1064 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1065 :         // pre: no iterators refer to the existing proxy
; 1066 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1067 :         _Construct_in_place(*_New_proxy, this);
; 1068 :         _New_proxy->_Mycont = this;
; 1069 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1070 :     }
; 1071 : 
; 1072 :     _Container_proxy* _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 1047 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Mycont_$[rsp]
	mov	QWORD PTR [rax], rcx

; 1040 : 
; 1041 :     const _Container_base12* _Mycont       = nullptr;
; 1042 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 1039 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rsp]
	mov	QWORD PTR [rcx], rax

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rsp], rax

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 154				; 0000009aH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 154				; 0000009aH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rsp], 16

; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rsp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rsp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 164				; 000000a4H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 164				; 000000a4H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Ptr_container$[rsp]
	mov	QWORD PTR [rax], rcx

; 166  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 78   :         void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 79   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rsp]
	call	??2@YAPEAX_K@Z				; operator new

; 80   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 317  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rdi
	sub	rsp, 64					; 00000040H

; 318  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 319  : }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 140  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rsp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 142  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 129  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception

; 130  :     {

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 131  :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rsp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rsp]

; 96   :     }

	add	rsp, 16
	pop	rdi
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy

; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 71   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy

; 74   :     }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 65   :         : _Data()

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 67   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Message$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 68   :     }

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z PROC			; glm::tvec4<signed char,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@C$0A@@glm@@SAHXZ	; glm::tvec4<signed char,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@C$0A@@glm@@QEBAAEBCH@Z ENDP			; glm::tvec4<signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@C$0A@@glm@@SAHXZ PROC			; glm::tvec4<signed char,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@C$0A@@glm@@SAHXZ ENDP			; glm::tvec4<signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec4<float,0>::operator[], COMDAT

; 336  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 337  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec4@M$0A@@glm@@SAHXZ	; glm::tvec4<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 337				; 00000151H
	lea	rdx, OFFSET FLAT:??_C@_1LG@LAANPDHN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 338  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 339  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec4@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec4<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$tvec4@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec4@M$0A@@glm@@SAHXZ PROC			; glm::tvec4<float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static length_type length(){return 4;}

$LN3:
	push	rdi
	mov	eax, 4
	pop	rdi
	ret	0
?length@?$tvec4@M$0A@@glm@@SAHXZ ENDP			; glm::tvec4<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z PROC			; glm::tvec2<short,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@F$0A@@glm@@SAHXZ	; glm::tvec2<short,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@F$0A@@glm@@QEBAAEBFH@Z ENDP			; glm::tvec2<short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@F$0A@@glm@@SAHXZ PROC			; glm::tvec2<short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@F$0A@@glm@@SAHXZ ENDP			; glm::tvec2<short,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 16
s1$ = 24
s2$ = 32
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 57   : 	{}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 56   : 		: x(s1), y(s2)

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s1$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR s2$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 57   : 	{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@MM@Z ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$tvec2@M$0A@@glm@@QEAA@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT

; 27   : 		{}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 25   : 				: x(0), y(0)

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 27   : 		{}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$tvec2@M$0A@@glm@@QEAA@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z PROC			; glm::tvec2<float,0>::operator[], COMDAT

; 109  : 	{

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H

; 110  : 		assert(i >= 0 && i < this->length());

	cmp	DWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	call	?length@?$tvec2@M$0A@@glm@@SAHXZ	; glm::tvec2<float,0>::length
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1LG@FPDAFGJN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAs?$AAa?$AAr?$AAt?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DK@BGNCJAPL@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:

; 111  : 		return (&x)[i];

	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]

; 112  : 	}

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$tvec2@M$0A@@glm@@QEBAAEBMH@Z ENDP			; glm::tvec2<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\ksart\OneDrive\Desktop\FlappyBird\libraries\external\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$tvec2@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tvec2@M$0A@@glm@@SAHXZ PROC			; glm::tvec2<float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static length_type length(){return 2;}

$LN3:
	push	rdi
	mov	eax, 2
	pop	rdi
	ret	0
?length@?$tvec2@M$0A@@glm@@SAHXZ ENDP			; glm::tvec2<float,0>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 641  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
	push	rdi

; 642  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 643  :     }

	pop	rdi
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT vsprintf_s
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
vsprintf_s PROC						; COMDAT

; 1512 :         {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 1513 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

	mov	rax, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _BufferCount$[rsp]
	mov	rcx, QWORD PTR _Buffer$[rsp]
	call	_vsprintf_s_l

; 1514 :         }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
vsprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsprintf_s_l PROC					; COMDAT

; 1490 :     {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rsp]
	mov	r8, QWORD PTR _BufferCount$[rsp]
	mov	rdx, QWORD PTR _Buffer$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s
	mov	DWORD PTR _Result$[rsp], eax

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR _Result$[rsp], 0
	jge	SHORT $LN3@vsprintf_s
	mov	DWORD PTR tv73[rsp], -1
	jmp	SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
	mov	eax, DWORD PTR _Result$[rsp]
	mov	DWORD PTR tv73[rsp], eax
$LN4@vsprintf_s:
	mov	eax, DWORD PTR tv73[rsp]

; 1496 :     }

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 90   :     {

$LN3:
	push	rdi

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

	pop	rdi
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 167  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 170  :     }

	pop	rdi
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
tv67 = 40
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN5@vector
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN6@vector
$LN5@vector:
	mov	DWORD PTR tv67[rsp], 0
$LN6@vector:
	cmp	DWORD PTR tv67[rsp], 0
	je	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
